/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, Optional, EventEmitter, Output, ViewEncapsulation } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { NodesApiService, TranslationService } from '@alfresco/adf-core';
import { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '@angular/material/dialog';
import * as ɵngcc3 from '@alfresco/adf-core';
import * as ɵngcc4 from '@angular/material/form-field';
import * as ɵngcc5 from '@angular/material/input';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from '@angular/material/button';
import * as ɵngcc8 from '@ngx-translate/core';

function FolderDialogComponent_mat_hint_8_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS.REQUIRED"), " ");
} }
function FolderDialogComponent_mat_hint_8_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r2.form.controls["name"].errors == null ? null : ctx_r2.form.controls["name"].errors.message), " ");
} }
function FolderDialogComponent_mat_hint_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint");
    ɵngcc0.ɵɵtemplate(1, FolderDialogComponent_mat_hint_8_span_1_Template, 3, 3, "span", 4);
    ɵngcc0.ɵɵtemplate(2, FolderDialogComponent_mat_hint_8_span_2_Template, 3, 3, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.form.controls["name"].errors == null ? null : ctx_r0.form.controls["name"].errors.required);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r0.form.controls["name"].errors == null ? null : ctx_r0.form.controls["name"].errors.required) && (ctx_r0.form.controls["name"].errors == null ? null : ctx_r0.form.controls["name"].errors.message));
} }
export class FolderDialogComponent {
    constructor(formBuilder, dialog, nodesApi, translation, data) {
        this.formBuilder = formBuilder;
        this.dialog = dialog;
        this.nodesApi = nodesApi;
        this.translation = translation;
        this.data = data;
        this.folder = null;
        this.error = new EventEmitter();
        this.success = new EventEmitter();
        this.editTitle = 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE';
        this.createTitle = 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE';
        this.nodeType = 'cm:folder';
        if (data) {
            this.editTitle = data.editTitle || this.editTitle;
            this.createTitle = data.createTitle || this.createTitle;
            this.nodeType = data.nodeType || this.nodeType;
        }
    }
    get editing() {
        return !!this.data.folder;
    }
    ngOnInit() {
        var _a, _b;
        const { folder } = this.data;
        let name = '';
        let title = '';
        let description = '';
        if (folder) {
            const { properties } = folder;
            name = folder.name || '';
            title = (_a = properties === null || properties === void 0 ? void 0 : properties['cm:title']) !== null && _a !== void 0 ? _a : '';
            description = (_b = properties === null || properties === void 0 ? void 0 : properties['cm:description']) !== null && _b !== void 0 ? _b : '';
        }
        const validators = {
            name: [
                Validators.required,
                forbidSpecialCharacters,
                forbidEndingDot,
                forbidOnlySpaces
            ]
        };
        this.form = this.formBuilder.group({
            name: [name, validators.name],
            title: [title],
            description: [description]
        });
    }
    get name() {
        const { name } = this.form.value;
        return (name || '').trim();
    }
    get title() {
        const { title } = this.form.value;
        return (title || '').trim();
    }
    get description() {
        const { description } = this.form.value;
        return (description || '').trim();
    }
    get properties() {
        const { title, description } = this;
        return {
            'cm:title': title,
            'cm:description': description
        };
    }
    create() {
        const { name, properties, nodeType, nodesApi, data: { parentNodeId } } = this;
        return nodesApi.createFolder(parentNodeId, { name, properties, nodeType });
    }
    edit() {
        const { name, properties, nodesApi, data: { folder: { id: nodeId } } } = this;
        return nodesApi.updateNode(nodeId, { name, properties });
    }
    submit() {
        const { form, dialog, editing } = this;
        if (!form.valid) {
            return;
        }
        (editing ? this.edit() : this.create())
            .subscribe((folder) => {
            this.success.emit(folder);
            dialog.close(folder);
        }, (error) => this.handleError(error));
    }
    handleError(error) {
        let errorMessage = 'CORE.MESSAGES.ERRORS.GENERIC';
        try {
            const { error: { statusCode } } = JSON.parse(error.message);
            if (statusCode === 409) {
                errorMessage = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';
            }
        }
        catch (err) { }
        this.error.emit(this.translation.instant(errorMessage));
        return error;
    }
}
FolderDialogComponent.ɵfac = function FolderDialogComponent_Factory(t) { return new (t || FolderDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NodesApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TranslationService), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA, 8)); };
FolderDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FolderDialogComponent, selectors: [["adf-folder-dialog"]], outputs: { error: "error", success: "success" }, decls: 24, vars: 24, consts: [["mat-dialog-title", ""], [3, "formGroup", "submit"], [1, "adf-full-width"], ["id", "adf-folder-name-input", "matInput", "", "required", "", 3, "placeholder", "formControlName"], [4, "ngIf"], ["id", "adf-folder-title-input", "matInput", "", 3, "placeholder", "formControlName"], ["id", "adf-folder-description-input", "matInput", "", "rows", "4", 3, "placeholder", "formControlName"], [1, "adf-dialog-buttons"], [1, "adf-fill-remaining-space"], ["mat-button", "", "id", "adf-folder-cancel-button", "mat-dialog-close", ""], ["id", "adf-folder-create-button", "mat-button", "", 1, "adf-dialog-action-button", 3, "disabled", "click"]], template: function FolderDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "h2", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "mat-dialog-content");
        ɵngcc0.ɵɵelementStart(4, "form", 1);
        ɵngcc0.ɵɵlistener("submit", function FolderDialogComponent_Template_form_submit_4_listener() { return ctx.submit(); });
        ɵngcc0.ɵɵelementStart(5, "mat-form-field", 2);
        ɵngcc0.ɵɵelement(6, "input", 3);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵtemplate(8, FolderDialogComponent_mat_hint_8_Template, 3, 2, "mat-hint", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "mat-form-field", 2);
        ɵngcc0.ɵɵelement(10, "input", 5);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "mat-form-field", 2);
        ɵngcc0.ɵɵelementStart(13, "textarea", 6);
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵtext(15, "            ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "mat-dialog-actions", 7);
        ɵngcc0.ɵɵelement(17, "span", 8);
        ɵngcc0.ɵɵelementStart(18, "button", 9);
        ɵngcc0.ɵɵtext(19);
        ɵngcc0.ɵɵpipe(20, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "button", 10);
        ɵngcc0.ɵɵlistener("click", function FolderDialogComponent_Template_button_click_21_listener() { return ctx.submit(); });
        ɵngcc0.ɵɵtext(22);
        ɵngcc0.ɵɵpipe(23, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 12, ctx.editing ? ctx.editTitle : ctx.createTitle), "\n");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("formGroup", ctx.form);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(7, 14, "CORE.FOLDER_DIALOG.FOLDER_NAME.LABEL"));
        ɵngcc0.ɵɵproperty("formControlName", "name");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form.controls["name"].dirty);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(11, 16, "CORE.FOLDER_DIALOG.FOLDER_TITLE.LABEL"));
        ɵngcc0.ɵɵproperty("formControlName", "title");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(14, 18, "CORE.FOLDER_DIALOG.FOLDER_DESCRIPTION.LABEL"));
        ɵngcc0.ɵɵproperty("formControlName", "description");
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(20, 20, "CORE.FOLDER_DIALOG.CANCEL_BUTTON.LABEL"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", !ctx.form.valid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(23, 22, ctx.editing ? "CORE.FOLDER_DIALOG.UPDATE_BUTTON.LABEL" : "CORE.FOLDER_DIALOG.CREATE_BUTTON.LABEL"), " ");
    } }, directives: [ɵngcc2.MatDialogTitle, ɵngcc2.MatDialogContent, ɵngcc1.ɵangular_packages_forms_forms_y, ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc4.MatFormField, ɵngcc5.MatInput, ɵngcc1.DefaultValueAccessor, ɵngcc1.RequiredValidator, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc6.NgIf, ɵngcc2.MatDialogActions, ɵngcc7.MatButton, ɵngcc2.MatDialogClose, ɵngcc4.MatHint], pipes: [ɵngcc8.TranslatePipe], encapsulation: 2 });
FolderDialogComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: MatDialogRef },
    { type: NodesApiService },
    { type: TranslationService },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
FolderDialogComponent.propDecorators = {
    error: [{ type: Output }],
    success: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FolderDialogComponent, [{
        type: Component,
        args: [{
                selector: 'adf-folder-dialog',
                template: "<h2 mat-dialog-title>\n    {{ (editing ? editTitle : createTitle) | translate }}\n</h2>\n\n<mat-dialog-content>\n    <form [formGroup]=\"form\" (submit)=\"submit()\">\n        <mat-form-field class=\"adf-full-width\">\n            <input\n                id=\"adf-folder-name-input\"\n                placeholder=\"{{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.LABEL' | translate }}\"\n                matInput\n                required\n                [formControlName]=\"'name'\"\n            />\n\n            <mat-hint *ngIf=\"form.controls['name'].dirty\">\n                <span *ngIf=\"form.controls['name'].errors?.required\">\n                    {{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS.REQUIRED' | translate }}\n                </span>\n\n                <span *ngIf=\"!form.controls['name'].errors?.required && form.controls['name'].errors?.message\">\n                    {{ form.controls['name'].errors?.message | translate }}\n                </span>\n            </mat-hint>\n        </mat-form-field>\n\n        <mat-form-field class=\"adf-full-width\">\n            <input\n                id=\"adf-folder-title-input\"\n                matInput\n                placeholder=\"{{ 'CORE.FOLDER_DIALOG.FOLDER_TITLE.LABEL' | translate }}\"\n                [formControlName]=\"'title'\"\n            />\n        </mat-form-field>\n\n        <mat-form-field class=\"adf-full-width\">\n            <textarea\n                id=\"adf-folder-description-input\"\n                matInput\n                placeholder=\"{{ 'CORE.FOLDER_DIALOG.FOLDER_DESCRIPTION.LABEL' | translate }}\"\n                rows=\"4\"\n                [formControlName]=\"'description'\">\n            </textarea>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"adf-dialog-buttons\">\n    <span class=\"adf-fill-remaining-space\"></span>\n\n    <button\n        mat-button\n        id=\"adf-folder-cancel-button\"\n        mat-dialog-close>\n        {{ 'CORE.FOLDER_DIALOG.CANCEL_BUTTON.LABEL' | translate }}\n    </button>\n\n    <button class=\"adf-dialog-action-button\"\n            id=\"adf-folder-create-button\"\n            mat-button\n            (click)=\"submit()\"\n            [disabled]=\"!form.valid\">\n        {{\n        (editing\n        ? 'CORE.FOLDER_DIALOG.UPDATE_BUTTON.LABEL'\n        : 'CORE.FOLDER_DIALOG.CREATE_BUTTON.LABEL'\n        ) | translate\n        }}\n    </button>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.FormBuilder }, { type: ɵngcc2.MatDialogRef }, { type: ɵngcc3.NodesApiService }, { type: ɵngcc3.TranslationService }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, { error: [{
            type: Output
        }], success: [{
            type: Output
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,