/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { MatSelect } from '@angular/material/select';
import { Node } from '@alfresco/js-api';
import { DocumentListComponent } from '../document-list';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/material/icon';
import * as ɵngcc3 from '@angular/material/select';
import * as ɵngcc4 from '@angular/material/core';
import * as ɵngcc5 from '@ngx-translate/core';

const _c0 = ["dropdown"];
function BreadcrumbComponent_nav_0_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 6);
    ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_nav_0_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.open(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "div", 7);
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "folder");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "mat-icon", 8);
    ɵngcc0.ɵɵtext(6, "arrow_drop_down");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 5, "BREADCRUMB.ARIA-LABEL.DROPDOWN"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassProp("adf-isRoot", !ctx_r2.hasPreviousNodes());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("adf-isRoot", !ctx_r2.hasPreviousNodes());
} }
function BreadcrumbComponent_nav_0_mat_select_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-option", 12);
    ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_nav_0_mat_select_3_mat_option_2_Template_mat_option_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const node_r9 = ctx.$implicit; const ctx_r10 = ɵngcc0.ɵɵnextContext(3); return ctx_r10.onRoutePathClick(node_r9, $event); })("onSelectionChange", function BreadcrumbComponent_nav_0_mat_select_3_mat_option_2_Template_mat_option_onSelectionChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const node_r9 = ctx.$implicit; const ctx_r12 = ɵngcc0.ɵɵnextContext(3); return ctx_r12.onRouteClick(node_r9); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const node_r9 = ctx.$implicit;
    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("disabled", ctx_r8.readOnly);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, node_r9.name), " ");
} }
function BreadcrumbComponent_nav_0_mat_select_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-select", 9, 10);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_nav_0_mat_select_3_mat_option_2_Template, 3, 4, "mat-option", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.previousNodes);
} }
function BreadcrumbComponent_nav_0_div_4_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 17);
    ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_nav_0_div_4_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const item_r13 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.onRoutePathClick(item_r13, $event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r13 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵattribute("data-automation-id", "breadcrumb_" + item_r13.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, item_r13.name), " ");
} }
function BreadcrumbComponent_nav_0_div_4_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r13 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, item_r13.name), " ");
} }
function BreadcrumbComponent_nav_0_div_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 19);
    ɵngcc0.ɵɵtext(1, " chevron_right ");
    ɵngcc0.ɵɵelementEnd();
} }
function BreadcrumbComponent_nav_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_nav_0_div_4_a_2_Template, 3, 4, "a", 14);
    ɵngcc0.ɵɵtemplate(3, BreadcrumbComponent_nav_0_div_4_div_3_Template, 3, 3, "div", 15);
    ɵngcc0.ɵɵtemplate(4, BreadcrumbComponent_nav_0_div_4_mat_icon_4_Template, 2, 0, "mat-icon", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r13 = ctx.$implicit;
    const last_r14 = ctx.last;
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("adf-active", last_r14);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 6, item_r13.name));
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r4.breadcrumbItemIsAnchor(last_r14));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngSwitchCase", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !last_r14);
} }
function BreadcrumbComponent_nav_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nav", 2);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_nav_0_button_2_Template, 7, 7, "button", 3);
    ɵngcc0.ɵɵtemplate(3, BreadcrumbComponent_nav_0_mat_select_3_Template, 3, 1, "mat-select", 4);
    ɵngcc0.ɵɵtemplate(4, BreadcrumbComponent_nav_0_div_4_Template, 5, 8, "div", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 4, "BREADCRUMB.ARIA-LABEL.BREADCRUMB"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hasPreviousNodes());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hasPreviousNodes());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.lastNodes);
} }
function BreadcrumbComponent_nav_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nav", 20);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "div", 21);
    ɵngcc0.ɵɵelementStart(3, "div", 22);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "BREADCRUMB.ARIA-LABEL.BREADCRUMB"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, ctx_r1.root), " ");
} }
export class BreadcrumbComponent {
    constructor() {
        this.folderNode = null;
        this.root = null;
        this.rootId = null;
        this.route = [];
        this.onDestroy$ = new Subject();
        this.readOnly = false;
        this.navigate = new EventEmitter();
    }
    get hasRoot() {
        return !!this.root;
    }
    ngOnInit() {
        this.transform = this.transform ? this.transform : null;
        if (this.target) {
            this.target.$folderNode
                .pipe(takeUntil(this.onDestroy$))
                .subscribe((folderNode) => {
                this.folderNode = folderNode;
                this.recalculateNodes();
            });
        }
    }
    ngOnChanges() {
        this.recalculateNodes();
    }
    recalculateNodes() {
        const node = this.transform ? this.transform(this.folderNode) : this.folderNode;
        this.route = this.parseRoute(node);
        if (this.maxItems && this.route.length > this.maxItems) {
            this.lastNodes = this.route.slice(this.route.length - this.maxItems);
            this.previousNodes = this.route.slice(0, this.route.length - this.maxItems);
            this.previousNodes.reverse();
        }
        else {
            this.lastNodes = this.route;
            this.previousNodes = null;
        }
    }
    open() {
        if (this.dropdown) {
            this.dropdown.open();
            this.dropdown.focus();
        }
    }
    hasPreviousNodes() {
        return !!this.previousNodes;
    }
    parseRoute(node) {
        if (node && node.path) {
            const route = (node.path.elements || []).slice();
            route.push({
                id: node.id,
                name: node.name,
                node: node
            });
            const rootPos = this.getElementPosition(route, this.rootId);
            if (rootPos > 0) {
                route.splice(0, rootPos);
            }
            if (rootPos === -1 && this.rootId) {
                route[0].id = this.rootId;
            }
            if (this.root) {
                route[0].name = this.root;
            }
            return route;
        }
        return [];
    }
    getElementPosition(route, nodeId) {
        let position = -1;
        if (route && route.length > 0 && nodeId) {
            position = route.findIndex((el) => el.id === nodeId);
        }
        return position;
    }
    breadcrumbItemIsAnchor(lastItem) {
        return !this.readOnly && !lastItem;
    }
    onRoutePathClick(route, event) {
        if (event && event.type === 'click') {
            event.preventDefault();
        }
        this.onRouteClick(route);
    }
    onRouteClick(route) {
        if (route && !this.readOnly) {
            this.navigate.emit(route);
            if (this.target) {
                this.target.navigateTo(route.id);
            }
        }
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
}
BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) { return new (t || BreadcrumbComponent)(); };
BreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbComponent, selectors: [["adf-breadcrumb"]], viewQuery: function BreadcrumbComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);
    } }, hostAttrs: [1, "adf-breadcrumb"], inputs: { folderNode: "folderNode", root: "root", rootId: "rootId", readOnly: "readOnly", transform: "transform", target: "target", maxItems: "maxItems" }, outputs: { navigate: "navigate" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [["data-automation-id", "breadcrumb", "class", "adf-breadcrumb-container", "role", "navigation", 4, "ngIf"], ["data-automation-id", "breadcrumb", "role", "navigation", 4, "ngIf"], ["data-automation-id", "breadcrumb", "role", "navigation", 1, "adf-breadcrumb-container"], ["tabindex", "0", "class", "adf-breadcrumb-dropdown-trigger", 3, "click", 4, "ngIf"], ["class", "adf-breadcrumb-dropdown-path", "tabindex", "-1", 4, "ngIf"], ["class", "adf-breadcrumb-item", 3, "adf-active", "ngSwitch", "title", 4, "ngFor", "ngForOf"], ["tabindex", "0", 1, "adf-breadcrumb-dropdown-trigger", 3, "click"], [1, "adf-breadcrumb-dropdown-trigger-icon"], [1, "adf-breadcrumb-dropdown-trigger-arrow"], ["tabindex", "-1", 1, "adf-breadcrumb-dropdown-path"], ["dropdown", ""], ["class", "adf-breadcrumb-path-option", 3, "disabled", "click", "onSelectionChange", 4, "ngFor", "ngForOf"], [1, "adf-breadcrumb-path-option", 3, "disabled", "click", "onSelectionChange"], [1, "adf-breadcrumb-item", 3, "ngSwitch", "title"], ["href", "#", "class", "adf-breadcrumb-item-anchor", 3, "click", 4, "ngSwitchCase"], ["class", "adf-breadcrumb-item-current", "role", "heading", "aria-level", "2", "aria-current", "location", 4, "ngSwitchDefault"], ["class", "adf-breadcrumb-item-chevron", 4, "ngIf"], ["href", "#", 1, "adf-breadcrumb-item-anchor", 3, "click"], ["role", "heading", "aria-level", "2", "aria-current", "location", 1, "adf-breadcrumb-item-current"], [1, "adf-breadcrumb-item-chevron"], ["data-automation-id", "breadcrumb", "role", "navigation"], ["role", "listitem", 1, "adf-breadcrumb-item", "adf-active"], ["role", "heading", "aria-level", "2", 1, "adf-breadcrumb-item-current"]], template: function BreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BreadcrumbComponent_nav_0_Template, 5, 6, "nav", 0);
        ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_nav_1_Template, 6, 6, "nav", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.folderNode);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.folderNode && ctx.hasRoot);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.MatIcon, ɵngcc3.MatSelect, ɵngcc4.MatOption, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault], pipes: [ɵngcc5.TranslatePipe], encapsulation: 2 });
BreadcrumbComponent.propDecorators = {
    folderNode: [{ type: Input }],
    root: [{ type: Input }],
    rootId: [{ type: Input }],
    target: [{ type: Input }],
    transform: [{ type: Input }],
    dropdown: [{ type: ViewChild, args: ['dropdown',] }],
    maxItems: [{ type: Input }],
    readOnly: [{ type: Input }],
    navigate: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{
        type: Component,
        args: [{
                selector: 'adf-breadcrumb',
                template: "<nav\n    *ngIf=\"folderNode\"\n    data-automation-id=\"breadcrumb\"\n    class=\"adf-breadcrumb-container\"\n    role=\"navigation\"\n    [attr.aria-label]=\"'BREADCRUMB.ARIA-LABEL.BREADCRUMB' | translate\"\n>\n    <button\n        *ngIf=\"hasPreviousNodes()\"\n        tabindex=\"0\"\n        class=\"adf-breadcrumb-dropdown-trigger\"\n        (click)=\"open()\"\n        [attr.aria-label]=\"'BREADCRUMB.ARIA-LABEL.DROPDOWN' | translate\"\n    >\n        <div class=\"adf-breadcrumb-dropdown-trigger-icon\">\n            <mat-icon [class.adf-isRoot]=\"!hasPreviousNodes()\">folder</mat-icon>\n            <mat-icon\n                [class.adf-isRoot]=\"!hasPreviousNodes()\"\n                class=\"adf-breadcrumb-dropdown-trigger-arrow\"\n                >arrow_drop_down</mat-icon\n            >\n        </div>\n    </button>\n\n    <mat-select\n        #dropdown\n        *ngIf=\"hasPreviousNodes()\"\n        class=\"adf-breadcrumb-dropdown-path\"\n        tabindex=\"-1\"\n    >\n        <mat-option\n            *ngFor=\"let node of previousNodes\"\n            (click)=\"onRoutePathClick(node, $event)\"\n            (onSelectionChange)=\"onRouteClick(node)\"\n            class=\"adf-breadcrumb-path-option\"\n            [disabled]=\"readOnly\"\n        >\n            {{ node.name | translate }}\n        </mat-option>\n    </mat-select>\n\n    <div\n        *ngFor=\"let item of lastNodes; let last = last\"\n        [class.adf-active]=\"last\"\n        [ngSwitch]=\"breadcrumbItemIsAnchor(last)\"\n        title=\"{{ item.name | translate }}\"\n        class=\"adf-breadcrumb-item\">\n        <a\n            *ngSwitchCase=\"true\"\n            href=\"#\"\n            [attr.data-automation-id]=\"'breadcrumb_' + item.name\"\n            class=\"adf-breadcrumb-item-anchor\"\n            (click)=\"onRoutePathClick(item, $event)\"\n        >\n            {{ item.name | translate }}\n        </a>\n\n        <div *ngSwitchDefault class=\"adf-breadcrumb-item-current\" role=\"heading\" aria-level=\"2\"\n            aria-current=\"location\">\n            {{ item.name | translate }}\n        </div>\n\n        <mat-icon class=\"adf-breadcrumb-item-chevron\" *ngIf=\"!last\">\n            chevron_right\n        </mat-icon>\n    </div>\n</nav>\n\n<nav\n    *ngIf=\"!folderNode && hasRoot\"\n    data-automation-id=\"breadcrumb\"\n    role=\"navigation\"\n    [attr.aria-label]=\"'BREADCRUMB.ARIA-LABEL.BREADCRUMB' | translate\"\n>\n    <div class=\"adf-breadcrumb-item adf-active\" role=\"listitem\">\n        <div class=\"adf-breadcrumb-item-current\" role=\"heading\" aria-level=\"2\">\n            {{ root | translate }}\n        </div>\n    </div>\n</nav>\n",
                encapsulation: ViewEncapsulation.None,
                host: {
                    'class': 'adf-breadcrumb'
                }
            }]
    }], function () { return []; }, { folderNode: [{
            type: Input
        }], root: [{
            type: Input
        }], rootId: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], navigate: [{
            type: Output
        }], transform: [{
            type: Input
        }], target: [{
            type: Input
        }], dropdown: [{
            type: ViewChild,
            args: ['dropdown']
        }], maxItems: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,