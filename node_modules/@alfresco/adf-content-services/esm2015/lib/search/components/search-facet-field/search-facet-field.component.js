/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, Input, ViewEncapsulation } from '@angular/core';
import { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';
import { SearchQueryBuilderService } from '../../services/search-query-builder.service';
import { SearchFacetFiltersService } from '../../services/search-facet-filters.service';
import { TranslationService } from '@alfresco/adf-core';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/search-facet-filters.service';
import * as ɵngcc2 from '@alfresco/adf-core';
import * as ɵngcc3 from '@angular/material/button';
import * as ɵngcc4 from '@angular/material/icon';
import * as ɵngcc5 from '@angular/material/form-field';
import * as ɵngcc6 from '@angular/material/input';
import * as ɵngcc7 from '@angular/forms';
import * as ɵngcc8 from '@angular/common';
import * as ɵngcc9 from '@angular/material/checkbox';
import * as ɵngcc10 from '@angular/material/tooltip';
import * as ɵngcc11 from '@ngx-translate/core';
import * as ɵngcc12 from '../../services/search-query-builder.service';

function SearchFacetFieldComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function SearchFacetFieldComponent_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.field.buckets.filterText = ""; });
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SearchFacetFieldComponent_mat_checkbox_11_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-checkbox", 11);
    ɵngcc0.ɵɵlistener("change", function SearchFacetFieldComponent_mat_checkbox_11_Template_mat_checkbox_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const bucket_r6 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onToggleBucket($event, ctx_r7.field, bucket_r6); });
    ɵngcc0.ɵɵelementStart(1, "div", 12);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const bucket_r6 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("checked", bucket_r6.checked);
    ɵngcc0.ɵɵattribute("data-automation-id", "checkbox-" + ctx_r1.field.label + "-" + (bucket_r6.display || bucket_r6.label));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate2("matTooltip", "", ɵngcc0.ɵɵpipeBind1(2, 6, bucket_r6.display || bucket_r6.label), " ", ctx_r1.getBucketCountDisplay(bucket_r6), "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(4, 8, bucket_r6.display || bucket_r6.label), " ", ctx_r1.getBucketCountDisplay(bucket_r6), " ");
} }
function SearchFacetFieldComponent_div_12_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵlistener("click", function SearchFacetFieldComponent_div_12_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.resetSelectedBuckets(ctx_r10.field); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "SEARCH.FILTER.ACTIONS.CLEAR-ALL"), " ");
} }
function SearchFacetFieldComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵtemplate(1, SearchFacetFieldComponent_div_12_button_1_Template, 3, 3, "button", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.canResetSelectedBuckets(ctx_r2.field));
} }
function SearchFacetFieldComponent_div_13_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function SearchFacetFieldComponent_div_13_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.resetSelectedBuckets(ctx_r15.field); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "clear");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "SEARCH.FILTER.ACTIONS.CLEAR-ALL"));
} }
function SearchFacetFieldComponent_div_13_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function SearchFacetFieldComponent_div_13_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.field.buckets.showLessItems(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "keyboard_arrow_up");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "SEARCH.FILTER.ACTIONS.SHOW-LESS"));
} }
function SearchFacetFieldComponent_div_13_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function SearchFacetFieldComponent_div_13_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.field.buckets.showMoreItems(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "keyboard_arrow_down");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "SEARCH.FILTER.ACTIONS.SHOW-MORE"));
} }
function SearchFacetFieldComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵtemplate(1, SearchFacetFieldComponent_div_13_button_1_Template, 4, 3, "button", 16);
    ɵngcc0.ɵɵtemplate(2, SearchFacetFieldComponent_div_13_button_2_Template, 4, 3, "button", 16);
    ɵngcc0.ɵɵtemplate(3, SearchFacetFieldComponent_div_13_button_3_Template, 4, 3, "button", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.canResetSelectedBuckets(ctx_r3.field));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.field.buckets.canShowLessItems);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.field.buckets.canShowMoreItems);
} }
export class SearchFacetFieldComponent {
    constructor(queryBuilder, searchFacetFiltersService, translationService) {
        this.queryBuilder = queryBuilder;
        this.searchFacetFiltersService = searchFacetFiltersService;
        this.translationService = translationService;
        this.displayValue$ = new Subject();
    }
    get canUpdateOnChange() {
        var _a, _b;
        return (_b = (_a = this.field.settings) === null || _a === void 0 ? void 0 : _a.allowUpdateOnChange) !== null && _b !== void 0 ? _b : true;
    }
    onToggleBucket(event, field, bucket) {
        if (event && bucket) {
            if (event.checked) {
                this.selectFacetBucket(field, bucket);
            }
            else {
                this.unselectFacetBucket(field, bucket);
            }
        }
    }
    selectFacetBucket(field, bucket) {
        if (bucket) {
            bucket.checked = true;
            this.queryBuilder.addUserFacetBucket(field, bucket);
            this.searchFacetFiltersService.updateSelectedBuckets();
            if (this.canUpdateOnChange) {
                this.updateDisplayValue();
                this.queryBuilder.update();
            }
        }
    }
    unselectFacetBucket(field, bucket) {
        if (bucket) {
            bucket.checked = false;
            this.queryBuilder.removeUserFacetBucket(field, bucket);
            this.searchFacetFiltersService.updateSelectedBuckets();
            if (this.canUpdateOnChange) {
                this.updateDisplayValue();
                this.queryBuilder.update();
            }
        }
    }
    canResetSelectedBuckets(field) {
        if (field && field.buckets) {
            return field.buckets.items.some((bucket) => bucket.checked);
        }
        return false;
    }
    resetSelectedBuckets(field) {
        if (field && field.buckets) {
            for (const bucket of field.buckets.items) {
                bucket.checked = false;
                this.queryBuilder.removeUserFacetBucket(field, bucket);
            }
            this.searchFacetFiltersService.updateSelectedBuckets();
            if (this.canUpdateOnChange) {
                this.queryBuilder.update();
            }
        }
    }
    getBucketCountDisplay(bucket) {
        return bucket.count === null ? '' : `(${bucket.count})`;
    }
    updateDisplayValue() {
        var _a, _b, _c;
        if (!((_a = this.field.buckets) === null || _a === void 0 ? void 0 : _a.items)) {
            this.displayValue$.next('');
        }
        else {
            const displayValue = (_c = (_b = this.field.buckets) === null || _b === void 0 ? void 0 : _b.items) === null || _c === void 0 ? void 0 : _c.filter((item) => item.checked).map((item) => this.translationService.instant(item.display || item.label)).join(', ');
            this.displayValue$.next(displayValue);
        }
    }
    reset() {
        this.resetSelectedBuckets(this.field);
        this.updateDisplayValue();
        this.queryBuilder.update();
    }
    submitValues() {
        this.updateDisplayValue();
        this.queryBuilder.update();
    }
}
SearchFacetFieldComponent.ɵfac = function SearchFacetFieldComponent_Factory(t) { return new (t || SearchFacetFieldComponent)(ɵngcc0.ɵɵdirectiveInject(SEARCH_QUERY_SERVICE_TOKEN), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SearchFacetFiltersService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslationService)); };
SearchFacetFieldComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchFacetFieldComponent, selectors: [["adf-search-facet-field"]], inputs: { field: "field" }, decls: 14, vars: 9, consts: [[1, "adf-search-filter-facet"], [1, "adf-facet-result-filter"], [1, "adf-facet-search-container"], ["mat-icon-button", "", "tabindex", "-1", 1, "adf-facet-search-icon"], ["floatLabel", "never", 1, "adf-facet-search-field"], ["matInput", "", 3, "placeholder", "ngModel", "ngModelChange"], ["mat-button", "", "matSuffix", "", "mat-icon-button", "", 3, "click", 4, "ngIf"], [1, "adf-checklist"], [3, "checked", "change", 4, "ngFor", "ngForOf"], ["class", "adf-facet-buttons", 4, "ngIf"], ["mat-button", "", "matSuffix", "", "mat-icon-button", "", 3, "click"], [3, "checked", "change"], ["matTooltipPosition", "right", 1, "adf-facet-label", 3, "matTooltip"], [1, "adf-facet-buttons"], ["mat-button", "", "color", "primary", 3, "click", 4, "ngIf"], ["mat-button", "", "color", "primary", 3, "click"], ["mat-icon-button", "", 3, "title", "click", 4, "ngIf"], ["mat-icon-button", "", 3, "title", "click"]], template: function SearchFacetFieldComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵelementStart(4, "mat-icon");
        ɵngcc0.ɵɵtext(5, "search");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "mat-form-field", 4);
        ɵngcc0.ɵɵelementStart(7, "input", 5);
        ɵngcc0.ɵɵlistener("ngModelChange", function SearchFacetFieldComponent_Template_input_ngModelChange_7_listener($event) { return ctx.field.buckets.filterText = $event; });
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, SearchFacetFieldComponent_button_9_Template, 3, 0, "button", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 7);
        ɵngcc0.ɵɵtemplate(11, SearchFacetFieldComponent_mat_checkbox_11_Template, 5, 10, "mat-checkbox", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(12, SearchFacetFieldComponent_div_12_Template, 2, 1, "div", 9);
        ɵngcc0.ɵɵtemplate(13, SearchFacetFieldComponent_div_13_Template, 4, 3, "div", 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(8, 7, "SEARCH.FILTER.ACTIONS.SEARCH"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.field.buckets.filterText);
        ɵngcc0.ɵɵattribute("data-automation-id", "facet-result-filter-" + ctx.field.label);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.field.buckets.filterText);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.field.buckets);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.field.buckets.fitsPage && !(ctx.field.settings == null ? null : ctx.field.settings.hideDefaultAction));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.field.buckets.fitsPage);
    } }, directives: [ɵngcc3.MatButton, ɵngcc4.MatIcon, ɵngcc5.MatFormField, ɵngcc6.MatInput, ɵngcc7.DefaultValueAccessor, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc8.NgIf, ɵngcc8.NgForOf, ɵngcc5.MatSuffix, ɵngcc9.MatCheckbox, ɵngcc10.MatTooltip], pipes: [ɵngcc11.TranslatePipe], encapsulation: 2 });
SearchFacetFieldComponent.ctorParameters = () => [
    { type: SearchQueryBuilderService, decorators: [{ type: Inject, args: [SEARCH_QUERY_SERVICE_TOKEN,] }] },
    { type: SearchFacetFiltersService },
    { type: TranslationService }
];
SearchFacetFieldComponent.propDecorators = {
    field: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchFacetFieldComponent, [{
        type: Component,
        args: [{
                selector: 'adf-search-facet-field',
                template: "<div class=\"adf-search-filter-facet\">\n    <div class=\"adf-facet-result-filter\">\n        <div class=\"adf-facet-search-container\">\n            <button mat-icon-button class=\"adf-facet-search-icon\" tabindex=\"-1\">\n                <mat-icon>search</mat-icon>\n            </button>\n            <mat-form-field class=\"adf-facet-search-field\" floatLabel=\"never\">\n                <input matInput placeholder=\"{{ 'SEARCH.FILTER.ACTIONS.SEARCH' | translate }}\"\n                       [attr.data-automation-id]=\"'facet-result-filter-'+field.label\" [(ngModel)]=\"field.buckets.filterText\">\n                <button *ngIf=\"field.buckets.filterText\" mat-button matSuffix mat-icon-button\n                        (click)=\"field.buckets.filterText = ''\">\n                    <mat-icon>close</mat-icon>\n                </button>\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div class=\"adf-checklist\">\n        <mat-checkbox *ngFor=\"let bucket of field.buckets\" [checked]=\"bucket.checked\"\n            [attr.data-automation-id]=\"'checkbox-'+field.label+'-'+(bucket.display || bucket.label)\"\n            (change)=\"onToggleBucket($event, field, bucket)\">\n            <div matTooltip=\"{{ bucket.display || bucket.label | translate }} {{ getBucketCountDisplay(bucket) }}\"\n                matTooltipPosition=\"right\" class=\"adf-facet-label\">\n                {{ bucket.display || bucket.label | translate }} {{ getBucketCountDisplay(bucket) }}\n            </div>\n        </mat-checkbox>\n    </div>\n\n    <div class=\"adf-facet-buttons\" *ngIf=\"field.buckets.fitsPage && !field.settings?.hideDefaultAction\">\n        <button *ngIf=\"canResetSelectedBuckets(field)\" mat-button color=\"primary\" (click)=\"resetSelectedBuckets(field)\">\n            {{ 'SEARCH.FILTER.ACTIONS.CLEAR-ALL' | translate }}\n        </button>\n    </div>\n\n    <div class=\"adf-facet-buttons\" *ngIf=\"!field.buckets.fitsPage\">\n        <button mat-icon-button *ngIf=\"canResetSelectedBuckets(field)\"\n            title=\"{{ 'SEARCH.FILTER.ACTIONS.CLEAR-ALL' | translate }}\" (click)=\"resetSelectedBuckets(field)\">\n            <mat-icon>clear</mat-icon>\n        </button>\n        <button mat-icon-button *ngIf=\"field.buckets.canShowLessItems\" (click)=\"field.buckets.showLessItems()\"\n            title=\"{{ 'SEARCH.FILTER.ACTIONS.SHOW-LESS' | translate }}\">\n            <mat-icon>keyboard_arrow_up</mat-icon>\n        </button>\n        <button mat-icon-button *ngIf=\"field.buckets.canShowMoreItems\" (click)=\"field.buckets.showMoreItems()\"\n            title=\"{{ 'SEARCH.FILTER.ACTIONS.SHOW-MORE' | translate }}\">\n            <mat-icon>keyboard_arrow_down</mat-icon>\n        </button>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc12.SearchQueryBuilderService, decorators: [{
                type: Inject,
                args: [SEARCH_QUERY_SERVICE_TOKEN]
            }] }, { type: ɵngcc1.SearchFacetFiltersService }, { type: ɵngcc2.TranslationService }]; }, { field: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,