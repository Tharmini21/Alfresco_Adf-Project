/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation, Input } from '@angular/core';
import { SearchFilterComponent } from '../../components/search-filter/search-filter.component';
import { SearchFacetFiltersService } from '../../services/search-facet-filters.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/search-facet-filters.service';
import * as ɵngcc2 from '@angular/material/chips';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/tooltip';
import * as ɵngcc5 from '@angular/material/icon';
import * as ɵngcc6 from '@ngx-translate/core';

function SearchChipListComponent_ng_container_1_mat_chip_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 3);
    ɵngcc0.ɵɵlistener("click", function SearchChipListComponent_ng_container_1_mat_chip_1_Template_mat_chip_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.facetFiltersService.resetAllSelectedBuckets(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("matTooltip", ɵngcc0.ɵɵpipeBind1(1, 2, "SEARCH.FILTER.BUTTONS.CLEAR-ALL.TOOLTIP"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "SEARCH.FILTER.BUTTONS.CLEAR-ALL.LABEL"), " ");
} }
function SearchChipListComponent_ng_container_1_mat_chip_2_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 4);
    ɵngcc0.ɵɵlistener("removed", function SearchChipListComponent_ng_container_1_mat_chip_2_Template_mat_chip_removed_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const selection_r5 = ctx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.facetFiltersService.unselectFacetBucket(selection_r5.field, selection_r5.bucket); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon", 5);
    ɵngcc0.ɵɵtext(4, "cancel");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const selection_r5 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("removable", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, selection_r5.bucket.display || selection_r5.bucket.label), " ");
} }
function SearchChipListComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SearchChipListComponent_ng_container_1_mat_chip_1_Template, 4, 6, "mat-chip", 1);
    ɵngcc0.ɵɵtemplate(2, SearchChipListComponent_ng_container_1_mat_chip_2_Template, 5, 4, "mat-chip", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.clearAll && ctx_r0.facetFiltersService.selectedBuckets.length > 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.facetFiltersService.selectedBuckets);
} }
export class SearchChipListComponent {
    constructor(facetFiltersService) {
        this.facetFiltersService = facetFiltersService;
        this.clearAll = false;
    }
}
SearchChipListComponent.ɵfac = function SearchChipListComponent_Factory(t) { return new (t || SearchChipListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SearchFacetFiltersService)); };
SearchChipListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchChipListComponent, selectors: [["adf-search-chip-list"]], hostAttrs: [1, "adf-search-chip-list"], inputs: { clearAll: "clearAll", searchFilter: "searchFilter" }, decls: 2, vars: 1, consts: [[4, "ngIf"], ["data-automation-id", "reset-filter", "color", "primary", "selected", "", "matTooltipPosition", "right", 3, "matTooltip", "click", 4, "ngIf"], ["data-automation-id", "chip-list-entry", 3, "removable", "removed", 4, "ngFor", "ngForOf"], ["data-automation-id", "reset-filter", "color", "primary", "selected", "", "matTooltipPosition", "right", 3, "matTooltip", "click"], ["data-automation-id", "chip-list-entry", 3, "removable", "removed"], ["matChipRemove", ""]], template: function SearchChipListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-chip-list");
        ɵngcc0.ɵɵtemplate(1, SearchChipListComponent_ng_container_1_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.facetFiltersService.selectedBuckets.length);
    } }, directives: [ɵngcc2.MatChipList, ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc2.MatChip, ɵngcc4.MatTooltip, ɵngcc5.MatIcon, ɵngcc2.MatChipRemove], pipes: [ɵngcc6.TranslatePipe], encapsulation: 2 });
SearchChipListComponent.ctorParameters = () => [
    { type: SearchFacetFiltersService }
];
SearchChipListComponent.propDecorators = {
    searchFilter: [{ type: Input }],
    clearAll: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchChipListComponent, [{
        type: Component,
        args: [{
                selector: 'adf-search-chip-list',
                template: "<mat-chip-list>\n    <ng-container *ngIf=\"facetFiltersService.selectedBuckets.length\">\n        <mat-chip *ngIf=\"clearAll && facetFiltersService.selectedBuckets.length > 1\"\n            data-automation-id=\"reset-filter\"\n            color=\"primary\"\n            selected\n            matTooltip=\"{{ 'SEARCH.FILTER.BUTTONS.CLEAR-ALL.TOOLTIP' | translate }}\"\n            matTooltipPosition=\"right\"\n            (click)=\"facetFiltersService.resetAllSelectedBuckets()\">\n            {{ 'SEARCH.FILTER.BUTTONS.CLEAR-ALL.LABEL' | translate }}\n        </mat-chip>\n\n        <mat-chip\n            data-automation-id=\"chip-list-entry\"\n            *ngFor=\"let selection of facetFiltersService.selectedBuckets\"\n            [removable]=\"true\"\n            (removed)=\"facetFiltersService.unselectFacetBucket(selection.field, selection.bucket)\">\n            {{ (selection.bucket.display || selection.bucket.label) | translate }}\n            <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n    </ng-container>\n</mat-chip-list>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-search-chip-list' }
            }]
    }], function () { return [{ type: ɵngcc1.SearchFacetFiltersService }]; }, { clearAll: [{
            type: Input
        }], searchFilter: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWNoaXAtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb250ZW50LXNlcnZpY2VzL3NyYy9saWIvc2VhcmNoL2NvbXBvbmVudHMvc2VhcmNoLWNoaXAtbGlzdC9zZWFyY2gtY2hpcC1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDL0YsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUXhGLE1BQU0sT0FBTyx1QkFBdUI7QUFDcEMsSUFTSSxZQUFtQixtQkFBOEM7QUFBSSxRQUFsRCx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQTJCO0FBQUMsUUFGbEUsYUFBUSxHQUFZLEtBQUssQ0FBQztBQUM5QixJQUN3RSxDQUFDO0FBQ3pFO21EQWpCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHNCQUFzQixrQkFDaEM7Ozs7OztNQUFnRCxrQkFDaEQ7UUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksa0JBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRTtJQUFzQixFQUFFLGNBQzFDLGdMQUNJO0FBQUM7QUFHSixZQVhPLHlCQUF5QjtBQUFHO0FBQUc7QUFBMkMsMkJBVTlFLEtBQUs7QUFDUix1QkFJRyxLQUFLO0FBQ1Q7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTZWFyY2hGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NlYXJjaC1maWx0ZXIvc2VhcmNoLWZpbHRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VhcmNoRmFjZXRGaWx0ZXJzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3NlYXJjaC1mYWNldC1maWx0ZXJzLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1zZWFyY2gtY2hpcC1saXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2VhcmNoLWNoaXAtbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7IGNsYXNzOiAnYWRmLXNlYXJjaC1jaGlwLWxpc3QnIH1cbn0pXG5leHBvcnQgY2xhc3MgU2VhcmNoQ2hpcExpc3RDb21wb25lbnQge1xuXG4gICAgQElucHV0KClcbiAgICAvKiogQGRlcHJlY2F0ZWQgVGhpcyBpcyBub3QgcmVxdWlyZWQgc2luY2UgQURGIDQuNS4wICovXG4gICAgc2VhcmNoRmlsdGVyOiBTZWFyY2hGaWx0ZXJDb21wb25lbnQ7XG5cbiAgICAvKiogRmxhZyB1c2VkIHRvIGVuYWJsZSB0aGUgZGlzcGxheSBvZiBhIGNsZWFyLWFsbC1maWx0ZXJzIGJ1dHRvbi4gKi9cbiAgICBASW5wdXQoKVxuICAgIGNsZWFyQWxsOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZmFjZXRGaWx0ZXJzU2VydmljZTogU2VhcmNoRmFjZXRGaWx0ZXJzU2VydmljZSkge31cbn1cbiJdfQ==