/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';
import { Node } from '@alfresco/js-api';
import { ContentService, UploadService } from '@alfresco/adf-core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/material/radio';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@angular/material/form-field';
import * as ɵngcc5 from '@angular/material/input';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from '../upload/components/upload-version-button.component';
import * as ɵngcc8 from '@angular/material/button';
import * as ɵngcc9 from '@ngx-translate/core';

function VersionUploadComponent_adf_upload_version_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-upload-version-button", 8);
    ɵngcc0.ɵɵlistener("success", function VersionUploadComponent_adf_upload_version_button_12_Template_adf_upload_version_button_success_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onSuccess($event); })("error", function VersionUploadComponent_adf_upload_version_button_12_Template_adf_upload_version_button_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onError($event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("staticTitle", ɵngcc0.ɵɵpipeBind1(1, 9, "ADF_VERSION_LIST.ACTIONS.UPLOAD.TITLE"));
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(2, 11, "ADF_VERSION_LIST.ACTIONS.UPLOAD.TOOLTIP"));
    ɵngcc0.ɵɵproperty("node", ctx_r0.node)("disabled", !ctx_r0.canUpload())("rootFolderId", ctx_r0.node.parentId)("comment", ctx_r0.comment)("versioning", true)("file", ctx_r0.newFileVersion)("majorVersion", ctx_r0.isMajorVersion());
} }
function VersionUploadComponent_button_13_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 9);
    ɵngcc0.ɵɵlistener("click", function VersionUploadComponent_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.cancelUpload(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(2, 1, "ADF_VERSION_LIST.ACTIONS.UPLOAD.CANCEL"), " ");
} }
export class VersionUploadComponent {
    constructor(contentService, uploadService) {
        this.contentService = contentService;
        this.uploadService = uploadService;
        this.semanticVersion = 'minor';
        this.uploadVersion = false;
        this.disabled = false;
        this.onDestroy$ = new Subject();
        this.showUploadButton = true;
        this.showCancelButton = true;
        this.success = new EventEmitter();
        this.error = new EventEmitter();
        this.cancel = new EventEmitter();
        this.versionChanged = new EventEmitter();
        this.commentChanged = new EventEmitter();
        this.uploadStarted = new EventEmitter();
    }
    ngOnInit() {
        this.uploadService.fileUploadStarting
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((event) => {
            this.disabled = true;
            this.uploadStarted.emit(event);
        });
    }
    canUpload() {
        return this.contentService.hasAllowableOperations(this.node, 'update') && !this.disabled;
    }
    isMajorVersion() {
        return this.semanticVersion !== 'minor';
    }
    cancelUpload() {
        this.disabled = false;
        this.cancel.emit();
    }
    onVersionChange() {
        this.versionChanged.emit(this.isMajorVersion());
    }
    onCommentChange() {
        this.commentChanged.emit(this.comment);
    }
    onSuccess(event) {
        this.disabled = false;
        this.success.emit(event);
    }
    onError(event) {
        this.disabled = false;
        this.error.emit(event);
    }
    ngOnDestroy() {
        this.onDestroy$.next();
        this.onDestroy$.complete();
    }
}
VersionUploadComponent.ɵfac = function VersionUploadComponent_Factory(t) { return new (t || VersionUploadComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UploadService)); };
VersionUploadComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VersionUploadComponent, selectors: [["adf-version-upload"]], hostAttrs: [1, "adf-version-upload"], inputs: { showUploadButton: "showUploadButton", showCancelButton: "showCancelButton", node: "node", newFileVersion: "newFileVersion" }, outputs: { success: "success", error: "error", cancel: "cancel", versionChanged: "versionChanged", commentChanged: "commentChanged", uploadStarted: "uploadStarted" }, decls: 14, vars: 15, consts: [[1, "adf-new-version-max-width"], [1, "adf-new-version-radio-group", 3, "ngModel", "ngModelChange", "change"], ["id", "adf-new-version-minor", 1, "adf-new-version-radio-button", 3, "value"], ["id", "adf-new-version-major", 1, "adf-new-version-radio-button", 3, "value"], ["matInput", "", "id", "adf-new-version-text-area", 1, "adf-new-version-text-area", 3, "ngModel", "placeholder", "ngModelChange", "change"], [1, "adf-version-upload-buttons"], ["data-automation-id", "adf-new-version-file-upload", 3, "staticTitle", "node", "disabled", "rootFolderId", "tooltip", "comment", "versioning", "file", "majorVersion", "success", "error", 4, "ngIf"], ["mat-raised-button", "", "id", "adf-new-version-cancel", 3, "click", 4, "ngIf"], ["data-automation-id", "adf-new-version-file-upload", 3, "staticTitle", "node", "disabled", "rootFolderId", "tooltip", "comment", "versioning", "file", "majorVersion", "success", "error"], ["mat-raised-button", "", "id", "adf-new-version-cancel", 3, "click"]], template: function VersionUploadComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-radio-group", 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function VersionUploadComponent_Template_mat_radio_group_ngModelChange_1_listener($event) { return ctx.semanticVersion = $event; })("change", function VersionUploadComponent_Template_mat_radio_group_change_1_listener() { return ctx.onVersionChange(); });
        ɵngcc0.ɵɵelementStart(2, "mat-radio-button", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "mat-radio-button", 3);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "mat-form-field", 0);
        ɵngcc0.ɵɵelementStart(9, "textarea", 4);
        ɵngcc0.ɵɵlistener("ngModelChange", function VersionUploadComponent_Template_textarea_ngModelChange_9_listener($event) { return ctx.comment = $event; })("change", function VersionUploadComponent_Template_textarea_change_9_listener() { return ctx.onCommentChange(); });
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 5);
        ɵngcc0.ɵɵtemplate(12, VersionUploadComponent_adf_upload_version_button_12_Template, 3, 13, "adf-upload-version-button", 6);
        ɵngcc0.ɵɵtemplate(13, VersionUploadComponent_button_13_Template, 3, 3, "button", 7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngModel", ctx.semanticVersion);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", "minor");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(4, 9, "ADF_VERSION_LIST.ACTIONS.UPLOAD.MINOR"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", "major");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(7, 11, "ADF_VERSION_LIST.ACTIONS.UPLOAD.MAJOR"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(10, 13, "ADF_VERSION_LIST.ACTIONS.UPLOAD.COMMENT"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.comment);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showUploadButton);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showCancelButton);
    } }, directives: [ɵngcc2.MatRadioGroup, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc2.MatRadioButton, ɵngcc4.MatFormField, ɵngcc5.MatInput, ɵngcc3.DefaultValueAccessor, ɵngcc6.NgIf, ɵngcc7.UploadVersionButtonComponent, ɵngcc8.MatButton], pipes: [ɵngcc9.TranslatePipe], styles: [".adf-new-version-radio-group{display:inline-flex;flex-direction:column}.adf-new-version-radio-button{margin:5px}.adf-version-upload-buttons{display:flex;float:right;justify-content:space-between;width:100%}.adf-new-version-max-width{float:right;width:100%}.adf-new-version-text-area{resize:none!important}"], encapsulation: 2 });
VersionUploadComponent.ctorParameters = () => [
    { type: ContentService },
    { type: UploadService }
];
VersionUploadComponent.propDecorators = {
    node: [{ type: Input }],
    newFileVersion: [{ type: Input }],
    showUploadButton: [{ type: Input }],
    showCancelButton: [{ type: Input }],
    success: [{ type: Output }],
    error: [{ type: Output }],
    cancel: [{ type: Output }],
    versionChanged: [{ type: Output }],
    commentChanged: [{ type: Output }],
    uploadStarted: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VersionUploadComponent, [{
        type: Component,
        args: [{
                selector: 'adf-version-upload',
                template: "<div class=\"adf-new-version-max-width\">\n    <mat-radio-group class=\"adf-new-version-radio-group\" [(ngModel)]=\"semanticVersion\" (change)=\"onVersionChange()\">\n        <mat-radio-button class=\"adf-new-version-radio-button\" id=\"adf-new-version-minor\"[value]=\"'minor'\">{{\n            'ADF_VERSION_LIST.ACTIONS.UPLOAD.MINOR' |\n            translate }}\n        </mat-radio-button>\n        <mat-radio-button class=\"adf-new-version-radio-button\" id=\"adf-new-version-major\" [value]=\"'major'\">{{\n            'ADF_VERSION_LIST.ACTIONS.UPLOAD.MAJOR' |\n            translate }}\n        </mat-radio-button>\n    </mat-radio-group>\n    <mat-form-field class=\"adf-new-version-max-width\">\n                    <textarea matInput [(ngModel)]=\"comment\" class=\"adf-new-version-text-area\" id=\"adf-new-version-text-area\"\n                              (change)=\"onCommentChange()\"\n                              placeholder=\"{{ 'ADF_VERSION_LIST.ACTIONS.UPLOAD.COMMENT' | translate }}\"></textarea>\n    </mat-form-field>\n\n</div>\n<div class=\"adf-version-upload-buttons\">\n    <adf-upload-version-button *ngIf=\"showUploadButton\"\n        data-automation-id=\"adf-new-version-file-upload\"\n        staticTitle=\"{{ 'ADF_VERSION_LIST.ACTIONS.UPLOAD.TITLE' | translate }}\"\n        [node]=\"node\"\n        [disabled]=\"!canUpload()\"\n        [rootFolderId]=\"node.parentId\"\n        tooltip=\"{{ 'ADF_VERSION_LIST.ACTIONS.UPLOAD.TOOLTIP' | translate }}\"\n        [comment]=\"comment\"\n        [versioning]=\"true\"\n        [file]=\"newFileVersion\"\n        [majorVersion]=\"isMajorVersion()\"\n        (success)=\"onSuccess($event)\"\n        (error)=\"onError($event)\">\n    </adf-upload-version-button>\n    <button mat-raised-button (click)=\"cancelUpload()\" id=\"adf-new-version-cancel\"  *ngIf=\"showCancelButton\" >{{\n        'ADF_VERSION_LIST.ACTIONS.UPLOAD.CANCEL'| translate }}\n    </button>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-version-upload' },
                styles: [".adf-new-version-radio-group{display:inline-flex;flex-direction:column}.adf-new-version-radio-button{margin:5px}.adf-version-upload-buttons{display:flex;float:right;justify-content:space-between;width:100%}.adf-new-version-max-width{float:right;width:100%}.adf-new-version-text-area{resize:none!important}"]
            }]
    }], function () { return [{ type: ɵngcc1.ContentService }, { type: ɵngcc1.UploadService }]; }, { showUploadButton: [{
            type: Input
        }], showCancelButton: [{
            type: Input
        }], success: [{
            type: Output
        }], error: [{
            type: Output
        }], cancel: [{
            type: Output
        }], versionChanged: [{
            type: Output
        }], commentChanged: [{
            type: Output
        }], uploadStarted: [{
            type: Output
        }], node: [{
            type: Input
        }], newFileVersion: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,