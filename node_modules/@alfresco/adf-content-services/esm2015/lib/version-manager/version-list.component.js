/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AlfrescoApiService, ContentService } from '@alfresco/adf-core';
import { Component, Input, ViewEncapsulation, EventEmitter, Output } from '@angular/core';
import { Node } from '@alfresco/js-api';
import { MatDialog } from '@angular/material/dialog';
import { ConfirmDialogComponent } from '../dialogs/confirm.dialog';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/material/dialog';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/list';
import * as ɵngcc5 from '@angular/material/icon';
import * as ɵngcc6 from '@angular/material/core';
import * as ɵngcc7 from '@angular/material/menu';
import * as ɵngcc8 from '@angular/material/button';
import * as ɵngcc9 from '@angular/material/progress-bar';
import * as ɵngcc10 from '@ngx-translate/core';

function VersionListComponent_mat_list_0_mat_list_item_1_p_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const version_r4 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("id", "adf-version-list-item-comment-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(version_r4.entry.versionComment);
} }
function VersionListComponent_mat_list_0_mat_list_item_1_div_13_ng_container_3_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function VersionListComponent_mat_list_0_mat_list_item_1_div_13_ng_container_3_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const version_r4 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.onViewVersion(version_r4.entry.id); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const version_r4 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("id", "adf-version-list-action-view-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "ADF_VERSION_LIST.ACTIONS.VIEW"), " ");
} }
function VersionListComponent_mat_list_0_mat_list_item_1_div_13_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, VersionListComponent_mat_list_0_mat_list_item_1_div_13_ng_container_3_button_1_Template, 3, 4, "button", 16);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.allowViewVersions);
} }
function VersionListComponent_mat_list_0_mat_list_item_1_div_13_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function VersionListComponent_mat_list_0_mat_list_item_1_div_13_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const version_r4 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.downloadVersion(version_r4.entry.id); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const version_r4 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("id", "adf-version-list-action-download-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "ADF_VERSION_LIST.ACTIONS.DOWNLOAD"), " ");
} }
function VersionListComponent_mat_list_0_mat_list_item_1_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mat-menu", 12, 13);
    ɵngcc0.ɵɵtemplate(3, VersionListComponent_mat_list_0_mat_list_item_1_div_13_ng_container_3_Template, 2, 1, "ng-container", 14);
    ɵngcc0.ɵɵelementStart(4, "button", 15);
    ɵngcc0.ɵɵlistener("click", function VersionListComponent_mat_list_0_mat_list_item_1_div_13_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r23); const version_r4 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.restore(version_r4.entry.id); });
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, VersionListComponent_mat_list_0_mat_list_item_1_div_13_button_7_Template, 3, 4, "button", 16);
    ɵngcc0.ɵɵelementStart(8, "button", 17);
    ɵngcc0.ɵɵlistener("click", function VersionListComponent_mat_list_0_mat_list_item_1_div_13_Template_button_click_8_listener() { ɵngcc0.ɵɵrestoreView(_r23); const version_r4 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.deleteVersion(version_r4.entry.id); });
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "button", 18);
    ɵngcc0.ɵɵelementStart(12, "mat-icon");
    ɵngcc0.ɵɵtext(13, "more_vert");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r9 = ɵngcc0.ɵɵreference(2);
    const version_r4 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", "adf-version-list-action-menu-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("adf-acs-version", "7");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", "adf-version-list-action-restore-" + version_r4.entry.id)("disabled", !ctx_r7.canUpdate());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 11, "ADF_VERSION_LIST.ACTIONS.RESTORE"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.allowDownload);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r7.canDelete())("id", "adf-version-list-action-delete-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 13, "ADF_VERSION_LIST.ACTIONS.DELETE"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r9)("id", "adf-version-list-action-menu-button-" + version_r4.entry.id);
} }
function VersionListComponent_mat_list_0_mat_list_item_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-item");
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 4);
    ɵngcc0.ɵɵtext(2, "insert_drive_file");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "h4", 5);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "p", 6);
    ɵngcc0.ɵɵelementStart(6, "span", 7);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(8, " - ");
    ɵngcc0.ɵɵelementStart(9, "span", 8);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "date");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, VersionListComponent_mat_list_0_mat_list_item_1_p_12_Template, 2, 2, "p", 9);
    ɵngcc0.ɵɵtemplate(13, VersionListComponent_mat_list_0_mat_list_item_1_div_13_Template, 14, 15, "div", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const version_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("id", "adf-version-list-item-name-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(version_r4.entry.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("id", "adf-version-list-item-version-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(version_r4.entry.id);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("id", "adf-version-list-item-date-" + version_r4.entry.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 8, version_r4.entry.modifiedAt));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.showComments);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.showActions);
} }
function VersionListComponent_mat_list_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list", 2);
    ɵngcc0.ɵɵtemplate(1, VersionListComponent_mat_list_0_mat_list_item_1_Template, 14, 10, "mat-list-item", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.versions);
} }
function VersionListComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-progress-bar", 20);
} }
export class VersionListComponent {
    constructor(alfrescoApi, contentService, dialog) {
        this.alfrescoApi = alfrescoApi;
        this.contentService = contentService;
        this.dialog = dialog;
        this.versions = [];
        this.isLoading = true;
        this.showComments = true;
        this.allowDownload = true;
        this.allowViewVersions = true;
        this.showActions = true;
        this.restored = new EventEmitter();
        this.deleted = new EventEmitter();
        this.viewVersion = new EventEmitter();
        this.versionsApi = this.alfrescoApi.versionsApi;
    }
    ngOnChanges() {
        this.loadVersionHistory();
    }
    canUpdate() {
        return this.contentService.hasAllowableOperations(this.node, 'update') && this.versions.length > 1;
    }
    canDelete() {
        return this.contentService.hasAllowableOperations(this.node, 'delete') && this.versions.length > 1;
    }
    restore(versionId) {
        if (this.canUpdate()) {
            this.versionsApi
                .revertVersion(this.node.id, versionId, { majorVersion: true, comment: '' })
                .then(() => this.alfrescoApi.nodesApi.getNodeInfo(this.node.id, { include: ['permissions', 'path', 'isFavorite', 'allowableOperations'] }))
                .then((node) => this.onVersionRestored(node));
        }
    }
    onViewVersion(versionId) {
        this.viewVersion.emit(versionId);
    }
    loadVersionHistory() {
        this.isLoading = true;
        this.versionsApi.listVersionHistory(this.node.id).then((versionPaging) => {
            this.versions = versionPaging.list.entries;
            this.isLoading = false;
        });
    }
    downloadVersion(versionId) {
        if (this.allowDownload) {
            const versionDownloadUrl = this.getVersionContentUrl(this.node.id, versionId, true);
            this.downloadContent(versionDownloadUrl);
        }
    }
    deleteVersion(versionId) {
        if (this.canUpdate()) {
            const dialogRef = this.dialog.open(ConfirmDialogComponent, {
                data: {
                    title: 'ADF_VERSION_LIST.CONFIRM_DELETE.TITLE',
                    message: 'ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE',
                    yesLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL',
                    noLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL'
                },
                minWidth: '250px'
            });
            dialogRef.afterClosed().subscribe((result) => {
                if (result === true) {
                    this.alfrescoApi.versionsApi
                        .deleteVersion(this.node.id, versionId)
                        .then(() => this.onVersionDeleted(this.node));
                }
            });
        }
    }
    onVersionDeleted(node) {
        this.loadVersionHistory();
        this.deleted.emit(node);
    }
    onVersionRestored(node) {
        this.loadVersionHistory();
        this.restored.emit(node);
    }
    getVersionContentUrl(nodeId, versionId, attachment) {
        const nodeDownloadUrl = this.alfrescoApi.contentApi.getContentUrl(nodeId, attachment);
        return nodeDownloadUrl.replace('/content', '/versions/' + versionId + '/content');
    }
    downloadContent(url) {
        if (url) {
            const link = document.createElement('a');
            link.style.display = 'none';
            link.href = url;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    }
}
VersionListComponent.ɵfac = function VersionListComponent_Factory(t) { return new (t || VersionListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlfrescoApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialog)); };
VersionListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VersionListComponent, selectors: [["adf-version-list"]], hostAttrs: [1, "adf-version-list"], inputs: { showComments: "showComments", allowDownload: "allowDownload", allowViewVersions: "allowViewVersions", showActions: "showActions", node: "node" }, outputs: { restored: "restored", deleted: "deleted", viewVersion: "viewVersion" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 2, consts: [["class", "adf-version-list", 4, "ngIf", "ngIfElse"], ["loading_template", ""], [1, "adf-version-list"], [4, "ngFor", "ngForOf"], ["mat-list-icon", ""], ["mat-line", "", 1, "adf-version-list-item-name", 3, "id"], ["mat-line", ""], [1, "adf-version-list-item-version", 3, "id"], [1, "adf-version-list-item-date", 3, "id"], ["mat-line", "", "class", "adf-version-list-item-comment", 3, "id", 4, "ngIf"], [4, "ngIf"], ["mat-line", "", 1, "adf-version-list-item-comment", 3, "id"], ["yPosition", "below", "xPosition", "before", 3, "id"], ["versionMenu", "matMenu"], [4, "adf-acs-version"], ["mat-menu-item", "", 3, "id", "disabled", "click"], ["mat-menu-item", "", 3, "id", "click", 4, "ngIf"], ["mat-menu-item", "", 3, "disabled", "id", "click"], ["mat-icon-button", "", 3, "matMenuTriggerFor", "id"], ["mat-menu-item", "", 3, "id", "click"], ["data-automation-id", "version-history-loading-bar", "mode", "indeterminate", "color", "accent"]], template: function VersionListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, VersionListComponent_mat_list_0_Template, 2, 1, "mat-list", 0);
        ɵngcc0.ɵɵtemplate(1, VersionListComponent_ng_template_1_Template, 1, 0, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading)("ngIfElse", _r1);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.MatList, ɵngcc3.NgForOf, ɵngcc4.MatListItem, ɵngcc5.MatIcon, ɵngcc4.MatListIconCssMatStyler, ɵngcc6.MatLine, ɵngcc7._MatMenu, ɵngcc1.VersionCompatibilityDirective, ɵngcc7.MatMenuItem, ɵngcc8.MatButton, ɵngcc7.MatMenuTrigger, ɵngcc9.MatProgressBar], pipes: [ɵngcc3.DatePipe, ɵngcc10.TranslatePipe], styles: [".adf-version-list .mat-list-item-content{border-bottom:1px solid #d8d8d8}.adf-version-list-item-version{font-weight:700}.adf-version-list-item-date{opacity:.6}.adf-version-list-item-comment{opacity:.5}"], encapsulation: 2 });
VersionListComponent.ctorParameters = () => [
    { type: AlfrescoApiService },
    { type: ContentService },
    { type: MatDialog }
];
VersionListComponent.propDecorators = {
    node: [{ type: Input }],
    showComments: [{ type: Input }],
    allowDownload: [{ type: Input }],
    allowViewVersions: [{ type: Input }],
    showActions: [{ type: Input }],
    restored: [{ type: Output }],
    deleted: [{ type: Output }],
    viewVersion: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VersionListComponent, [{
        type: Component,
        args: [{
                selector: 'adf-version-list',
                template: "<mat-list class=\"adf-version-list\" *ngIf=\"!isLoading; else loading_template\">\n    <mat-list-item *ngFor=\"let version of versions; let idx = index\">\n        <mat-icon mat-list-icon>insert_drive_file</mat-icon>\n        <h4 mat-line class=\"adf-version-list-item-name\" [id]=\"'adf-version-list-item-name-' + version.entry.id\" >{{version.entry.name}}</h4>\n        <p mat-line>\n            <span class=\"adf-version-list-item-version\"  [id]=\"'adf-version-list-item-version-' + version.entry.id\" >{{version.entry.id}}</span> -\n            <span class=\"adf-version-list-item-date\"     [id]=\"'adf-version-list-item-date-' + version.entry.id\" >{{version.entry.modifiedAt | date}}</span>\n        </p>\n        <p mat-line [id]=\"'adf-version-list-item-comment-'+ version.entry.id\" class=\"adf-version-list-item-comment\"\n           *ngIf=\"showComments\">{{version.entry.versionComment}}</p>\n\n        <div *ngIf=\"showActions\">\n            <mat-menu [id]=\"'adf-version-list-action-menu-'+version.entry.id\"\n                      #versionMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                <ng-container *adf-acs-version=\"'7'\">\n                    <button *ngIf=\"allowViewVersions\"\n                            [id]=\"'adf-version-list-action-view-'+version.entry.id\"\n                            mat-menu-item\n                            (click)=\"onViewVersion(version.entry.id)\">\n                        {{ 'ADF_VERSION_LIST.ACTIONS.VIEW' | translate }}\n                    </button>\n                </ng-container>\n                <button\n                    [id]=\"'adf-version-list-action-restore-'+version.entry.id\"\n                    [disabled]=\"!canUpdate()\"\n                    mat-menu-item\n                    (click)=\"restore(version.entry.id)\">\n                    {{ 'ADF_VERSION_LIST.ACTIONS.RESTORE' | translate }}\n                </button>\n                <button *ngIf=\"allowDownload\"\n                        [id]=\"'adf-version-list-action-download-'+version.entry.id\"\n                        mat-menu-item\n                        (click)=\"downloadVersion(version.entry.id)\">\n                    {{ 'ADF_VERSION_LIST.ACTIONS.DOWNLOAD' | translate }}\n                </button>\n                <button\n                    [disabled]=\"!canDelete()\"\n                    [id]=\"'adf-version-list-action-delete-'+version.entry.id\"\n                    (click)=\"deleteVersion(version.entry.id)\"\n                    mat-menu-item>\n                    {{ 'ADF_VERSION_LIST.ACTIONS.DELETE' | translate }}\n                </button>\n            </mat-menu>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"versionMenu\" [id]=\"'adf-version-list-action-menu-button-'+version.entry.id\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n        </div>\n    </mat-list-item>\n</mat-list>\n\n<ng-template #loading_template>\n    <mat-progress-bar data-automation-id=\"version-history-loading-bar\" mode=\"indeterminate\"\n                      color=\"accent\"></mat-progress-bar>\n</ng-template>\n",
                encapsulation: ViewEncapsulation.None,
                host: {
                    'class': 'adf-version-list'
                },
                styles: [".adf-version-list .mat-list-item-content{border-bottom:1px solid #d8d8d8}.adf-version-list-item-version{font-weight:700}.adf-version-list-item-date{opacity:.6}.adf-version-list-item-comment{opacity:.5}"]
            }]
    }], function () { return [{ type: ɵngcc1.AlfrescoApiService }, { type: ɵngcc1.ContentService }, { type: ɵngcc2.MatDialog }]; }, { showComments: [{
            type: Input
        }], allowDownload: [{
            type: Input
        }], allowViewVersions: [{
            type: Input
        }], showActions: [{
            type: Input
        }], restored: [{
            type: Output
        }], deleted: [{
            type: Output
        }], viewVersion: [{
            type: Output
        }], node: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,