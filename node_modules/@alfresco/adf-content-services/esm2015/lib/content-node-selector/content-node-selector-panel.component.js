/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation, Inject } from '@angular/core';
import { HighlightDirective, UserPreferencesService, UserPreferenceValues, InfinitePaginationComponent, NodesApiService, SitesService, UploadService, AppConfigService, ShowHeaderMode } from '@alfresco/adf-core';
import { FormControl } from '@angular/forms';
import { Pagination, SiteEntry, SitePaging } from '@alfresco/js-api';
import { DocumentListComponent } from '../document-list/components/document-list.component';
import { debounceTime, takeUntil } from 'rxjs/operators';
import { CustomResourcesService } from '../document-list/services/custom-resources.service';
import { Subject } from 'rxjs';
import { SEARCH_QUERY_SERVICE_TOKEN } from '../search/search-query-service.token';
import { SearchQueryBuilderService } from '../search/services/search-query-builder.service';
import { ContentNodeSelectorPanelService } from './content-node-selector-panel.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../document-list/services/custom-resources.service';
import * as ɵngcc2 from '@alfresco/adf-core';
import * as ɵngcc3 from './content-node-selector-panel.service';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../document-list/components/document-list.component';
import * as ɵngcc6 from '@angular/material/form-field';
import * as ɵngcc7 from '@angular/material/input';
import * as ɵngcc8 from '@angular/forms';
import * as ɵngcc9 from '@angular/material/icon';
import * as ɵngcc10 from '../site-dropdown/sites-dropdown.component';
import * as ɵngcc11 from '@angular/material/button';
import * as ɵngcc12 from '../search/components/search-panel/search-panel.component';
import * as ɵngcc13 from '../breadcrumb/dropdown-breadcrumb.component';
import * as ɵngcc14 from '../directives/node-counter.directive';
import * as ɵngcc15 from './name-location-cell/name-location-cell.component';
import * as ɵngcc16 from '@ngx-translate/core';
import * as ɵngcc17 from '../search/services/search-query-builder.service';

const _c0 = ["documentList"];
function ContentNodeSelectorPanelComponent_mat_form_field_1_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 22);
    ɵngcc0.ɵɵlistener("click", function ContentNodeSelectorPanelComponent_mat_form_field_1_mat_icon_3_Template_mat_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.clear(); });
    ɵngcc0.ɵɵtext(1, "clear ");
    ɵngcc0.ɵɵelementEnd();
} }
function ContentNodeSelectorPanelComponent_mat_form_field_1_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 23);
    ɵngcc0.ɵɵtext(1, "search ");
    ɵngcc0.ɵɵelementEnd();
} }
function ContentNodeSelectorPanelComponent_mat_form_field_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 18);
    ɵngcc0.ɵɵelement(1, "input", 19);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtemplate(3, ContentNodeSelectorPanelComponent_mat_form_field_1_mat_icon_3_Template, 2, 0, "mat-icon", 20);
    ɵngcc0.ɵɵtemplate(4, ContentNodeSelectorPanelComponent_mat_form_field_1_mat_icon_4_Template, 2, 0, "mat-icon", 21);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(2, 5, "NODE_SELECTOR.SEARCH"));
    ɵngcc0.ɵɵproperty("formControl", ctx_r0.searchInput)("value", ctx_r0.searchTerm);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.searchTerm.length > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.searchTerm.length === 0);
} }
function ContentNodeSelectorPanelComponent_adf_sites_dropdown_2_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-sites-dropdown", 24);
    ɵngcc0.ɵɵlistener("change", function ContentNodeSelectorPanelComponent_adf_sites_dropdown_2_Template_adf_sites_dropdown_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.siteChanged($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("placeholder", "NODE_SELECTOR.SELECT_LOCATION")("hideMyFiles", ctx_r1.dropdownHideMyFiles)("siteList", ctx_r1.dropdownSiteList)("value", ctx_r1.startSiteGuid);
} }
function ContentNodeSelectorPanelComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 25);
    ɵngcc0.ɵɵlistener("click", function ContentNodeSelectorPanelComponent_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.toggleSearchPanel(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "filter_list");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 1, "SEARCH.SEARCH_HEADER.TITLE"), " ");
} }
function ContentNodeSelectorPanelComponent_adf_search_panel_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-search-panel");
} }
function ContentNodeSelectorPanelComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 26);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "NODE_SELECTOR.SEARCH_RESULTS"));
} }
function ContentNodeSelectorPanelComponent_adf_dropdown_breadcrumb_10_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "adf-dropdown-breadcrumb", 27);
    ɵngcc0.ɵɵlistener("navigate", function ContentNodeSelectorPanelComponent_adf_dropdown_breadcrumb_10_Template_adf_dropdown_breadcrumb_navigate_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.clearSearch(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    const _r7 = ɵngcc0.ɵɵreference(14);
    ɵngcc0.ɵɵproperty("target", _r7)("rootId", ctx_r5.breadcrumbRootId)("transform", ctx_r5.breadcrumbTransform)("folderNode", ctx_r5.breadcrumbFolderNode)("root", ctx_r5.breadcrumbFolderTitle);
} }
function ContentNodeSelectorPanelComponent_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 28);
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("adf-node-counter", ctx_r6.getSelectedCount());
} }
function ContentNodeSelectorPanelComponent_ng_template_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-name-location-cell", 29);
} if (rf & 2) {
    const context_r19 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("row", context_r19.row);
} }
export const defaultValidation = () => true;
export class ContentNodeSelectorPanelComponent {
    constructor(customResourcesService, queryBuilderService, userPreferencesService, nodesApiService, uploadService, sitesService, appConfigService, contentNodeSelectorPanelService) {
        this.customResourcesService = customResourcesService;
        this.queryBuilderService = queryBuilderService;
        this.userPreferencesService = userPreferencesService;
        this.nodesApiService = nodesApiService;
        this.uploadService = uploadService;
        this.sitesService = sitesService;
        this.appConfigService = appConfigService;
        this.contentNodeSelectorPanelService = contentNodeSelectorPanelService;
        this.DEFAULT_PAGINATION = new Pagination({
            maxItems: 25,
            skipCount: 0
        });
        this.showSiteList = true;
        this.showSearchField = true;
        this.showCounter = false;
        this.restrictRootToCurrentFolderId = false;
        this.currentFolderId = null;
        this.dropdownHideMyFiles = false;
        this.dropdownSiteList = null;
        this._rowFilter = defaultValidation;
        this._excludeSiteContent = [];
        this.imageResolver = null;
        this.pageSize = this.DEFAULT_PAGINATION.maxItems;
        this.selectionMode = 'single';
        this.isSelectionValid = defaultValidation;
        this.select = new EventEmitter();
        this.navigationChange = new EventEmitter();
        this.siteChange = new EventEmitter();
        this.showingSearch = new EventEmitter();
        this.currentFolder = new EventEmitter();
        this.folderLoaded = new EventEmitter();
        this.nodePaging = null;
        this.searchTerm = '';
        this.showingSearchResults = false;
        this.loadingSearchResults = false;
        this.inDialog = false;
        this._chosenNode = null;
        this.folderIdToShow = null;
        this.breadcrumbFolderTitle = null;
        this.startSiteGuid = null;
        this.hasValidQuery = false;
        this.showHeader = ShowHeaderMode.Never;
        this.infiniteScroll = false;
        this.debounceSearch = 200;
        this.searchInput = new FormControl();
        this.preselectedNodes = [];
        this.currentUploadBatch = [];
        this.searchPanelExpanded = false;
        this.onDestroy$ = new Subject();
    }
    set rowFilter(rowFilter) {
        this.createRowFilter(rowFilter);
    }
    get rowFilter() {
        return this._rowFilter;
    }
    set excludeSiteContent(excludeSiteContent) {
        this._excludeSiteContent = excludeSiteContent;
        this.createRowFilter(this._rowFilter);
    }
    get excludeSiteContent() {
        return this._excludeSiteContent;
    }
    set showSearch(value) {
        if (value !== undefined && value !== null) {
            this.showSearchField = value;
        }
    }
    get showSearch() {
        return this.showSearchField;
    }
    set showDropdownSiteList(value) {
        if (value !== undefined && value !== null) {
            this.showSiteList = value;
        }
    }
    get showDropdownSiteList() {
        return this.showSiteList;
    }
    set showFilesInResult(value) {
        if (value !== undefined && value !== null) {
            const showFilesQuery = `TYPE:'cm:folder'${value ? " OR TYPE:'cm:content'" : ''}`;
            this.queryBuilderService.addFilterQuery(showFilesQuery);
        }
    }
    set showNodeCounter(value) {
        this.showCounter = value !== null && value !== void 0 ? value : false;
    }
    get showNodeCounter() {
        return this.showCounter;
    }
    set chosenNode(value) {
        this._chosenNode = value;
        this.select.next(value);
    }
    get chosenNode() {
        return this._chosenNode;
    }
    getSelectedCount() {
        var _a;
        return ((_a = this.chosenNode) === null || _a === void 0 ? void 0 : _a.length) || 0;
    }
    ngOnInit() {
        this.searchInput.valueChanges
            .pipe(debounceTime(this.debounceSearch), takeUntil(this.onDestroy$))
            .subscribe((searchValue) => {
            this.searchTerm = searchValue;
            this.queryBuilderService.userQuery = searchValue.length > 0 ? `${searchValue}*` : searchValue;
            this.queryBuilderService.update();
        });
        this.queryBuilderService.updated
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((queryBody) => {
            if (queryBody) {
                this.hasValidQuery = true;
                this.prepareDialogForNewSearch(queryBody);
                this.queryBuilderService.execute(queryBody);
            }
            else {
                this.hasValidQuery = false;
                this.resetFolderToShow();
                this.clearSearch();
            }
        });
        this.queryBuilderService.executed
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((results) => {
            if (this.hasValidQuery) {
                this.showSearchResults(results);
            }
        });
        this.userPreferencesService
            .select(UserPreferenceValues.PaginationSize)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(pagSize => this.pageSize = pagSize);
        this.target = this.documentList;
        this.folderIdToShow = this.currentFolderId;
        if (this.currentFolderId) {
            if (this.restrictRootToCurrentFolderId) {
                this.breadcrumbRootId = this.currentFolderId;
                this.siteId = this.currentFolderId;
            }
            else {
                this.getStartSite();
            }
        }
        this.breadcrumbTransform = this.breadcrumbTransform ? this.breadcrumbTransform : null;
        this.isSelectionValid = this.isSelectionValid ? this.isSelectionValid : defaultValidation;
        this.onFileUploadEvent();
        this.onFileUploadDeletedEvent();
        this.resetPagination();
        this.setSearchScopeToNodes();
        this.documentList.$folderNode
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((currentNode) => {
            this.currentFolder.emit(currentNode);
        });
        this.sorting = this.appConfigService.get('adf-content-node-selector.sorting', ['createdAt', 'desc']);
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    toggleSearchPanel() {
        this.searchPanelExpanded = !this.searchPanelExpanded;
    }
    hasCustomModels() {
        var _a, _b;
        return ((_b = (_a = this.contentNodeSelectorPanelService) === null || _a === void 0 ? void 0 : _a.customModels) === null || _b === void 0 ? void 0 : _b.length) > 0;
    }
    onFileUploadEvent() {
        this.uploadService.fileUploadComplete
            .pipe(debounceTime(500), takeUntil(this.onDestroy$))
            .subscribe((fileUploadEvent) => {
            this.currentUploadBatch.push(fileUploadEvent.data);
            if (!this.uploadService.isUploading()) {
                this.preselectedNodes = this.getPreselectNodesBasedOnSelectionMode();
                this.currentUploadBatch = [];
                this.documentList.reloadWithoutResettingSelection();
            }
        });
    }
    onFileUploadDeletedEvent() {
        this.uploadService.fileUploadDeleted
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((deletedFileEvent) => {
            this.documentList.unselectRowFromNodeId(deletedFileEvent.file.data.entry.id);
            this.documentList.reloadWithoutResettingSelection();
        });
    }
    getStartSite() {
        this.nodesApiService.getNode(this.currentFolderId).subscribe((startNodeEntry) => {
            this.startSiteGuid = this.sitesService.getSiteNameFromNodePath(startNodeEntry);
            if (this.startSiteGuid) {
                this.sitesService.getSite(this.startSiteGuid).subscribe((startSiteEntry) => {
                    if (startSiteEntry instanceof SiteEntry) {
                        this.siteChange.emit(startSiteEntry.entry.title);
                    }
                });
            }
        });
    }
    createRowFilter(filter) {
        if (!filter) {
            filter = () => true;
        }
        this._rowFilter = (value, index, array) => {
            return filter(value, index, array) &&
                !this.isExcludedSiteContent(value);
        };
    }
    isExcludedSiteContent(row) {
        const entry = row.node.entry;
        if (this._excludeSiteContent && this._excludeSiteContent.length &&
            entry &&
            entry.properties &&
            entry.properties['st:componentId']) {
            const excludedItem = this._excludeSiteContent.find((id) => entry.properties['st:componentId'] === id);
            return !!excludedItem;
        }
        return false;
    }
    siteChanged(chosenSite) {
        this.siteId = chosenSite.entry.guid;
        this.setTitleIfCustomSite(chosenSite);
        this.siteChange.emit(chosenSite.entry.title);
        this.queryBuilderService.update();
    }
    get breadcrumbFolderNode() {
        let folderNode;
        if (this.showingSearchResults && this.chosenNode) {
            folderNode = this.chosenNode[0];
        }
        else {
            folderNode = this.documentList.folderNode;
        }
        return folderNode;
    }
    prepareDialogForNewSearch(queryBody) {
        this.target = queryBody ? null : this.documentList;
        if (this.target) {
            this.infinitePaginationComponent.reset();
        }
        this.folderIdToShow = null;
        this.preselectedNodes = [];
        this.loadingSearchResults = true;
        this.addCorrespondingNodeIdsQuery();
        this.resetChosenNode();
    }
    clear() {
        this.searchTerm = '';
        this.queryBuilderService.userQuery = '';
        this.queryBuilderService.update();
    }
    resetFolderToShow() {
        this.folderIdToShow = this.siteId || this.currentFolderId;
    }
    clearSearch() {
        this.searchTerm = '';
        this.nodePaging = null;
        this.resetPagination();
        this.resetChosenNode();
        this.showingSearchResults = false;
        this.showingSearch.emit(this.showingSearchResults);
    }
    addCorrespondingNodeIdsQuery() {
        let extraParentFiltering = '';
        if (this.customResourcesService.hasCorrespondingNodeIds(this.siteId)) {
            this.customResourcesService.getCorrespondingNodeIds(this.siteId)
                .subscribe((nodeIds) => {
                if (nodeIds && nodeIds.length) {
                    nodeIds
                        .filter((id) => id !== this.siteId)
                        .forEach((extraId) => {
                        extraParentFiltering += ` OR ANCESTOR:'workspace://SpacesStore/${extraId}'`;
                    });
                }
                const parentFiltering = this.siteId ? `ANCESTOR:'workspace://SpacesStore/${this.siteId}'${extraParentFiltering}` : '';
                this.queryBuilderService.addFilterQuery(parentFiltering);
            });
        }
        else {
            const parentFiltering = this.siteId ? `ANCESTOR:'workspace://SpacesStore/${this.siteId}'` : '';
            this.queryBuilderService.addFilterQuery(parentFiltering);
        }
    }
    setSearchScopeToNodes() {
        const scope = {
            locations: 'nodes'
        };
        this.queryBuilderService.setScope(scope);
    }
    showSearchResults(results) {
        this.showingSearchResults = true;
        this.loadingSearchResults = false;
        this.showingSearch.emit(this.showingSearchResults);
        this.nodePaging = results;
    }
    onFolderChange($event) {
        this.folderIdToShow = $event.value.id;
        this.showingSearchResults = false;
        this.infiniteScroll = false;
        this.breadcrumbFolderTitle = null;
        this.preselectedNodes = [];
        this.clearSearch();
        this.navigationChange.emit($event);
    }
    onFolderLoaded(nodePaging) {
        this.updatePaginationAfterRowFilter(nodePaging);
        if (!this.showingSearchResults) {
            this.attemptNodeSelection(this.documentList.folderNode);
        }
        this.folderLoaded.emit();
    }
    updatePaginationAfterRowFilter(nodePaging) {
        if (this.documentList.data.getRows().length < nodePaging.list.pagination.maxItems) {
            nodePaging.list.pagination.hasMoreItems = false;
        }
    }
    showBreadcrumbs() {
        return !this.showingSearchResults || this.chosenNode;
    }
    getNextPageOfSearch(pagination) {
        this.infiniteScroll = true;
        this.queryBuilderService.paging.maxItems = pagination.maxItems;
        this.queryBuilderService.paging.skipCount = pagination.skipCount;
        if (this.searchTerm.length > 0) {
            this.queryBuilderService.update();
        }
    }
    attemptNodeSelection(entry) {
        if (entry && this.isSelectionValid(entry)) {
            this.chosenNode = [entry];
        }
    }
    resetChosenNode() {
        this.chosenNode = null;
    }
    onCurrentSelection(nodesEntries) {
        const validNodesEntity = nodesEntries.filter((node) => this.isSelectionValid(node.entry));
        this.chosenNode = validNodesEntity.map((node) => node.entry);
    }
    setTitleIfCustomSite(site) {
        if (this.customResourcesService.isCustomSource(site.entry.guid)) {
            this.breadcrumbFolderTitle = site.entry.title;
            if (this.documentList.folderNode.path.elements) {
                this.breadcrumbFolderNode.name = site.entry.title;
                this.documentList.folderNode.path.elements = null;
            }
        }
        else {
            this.breadcrumbFolderTitle = null;
        }
    }
    hasPreselectNodes() {
        var _a;
        return ((_a = this.preselectedNodes) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }
    isSingleSelectionMode() {
        return this.selectionMode === 'single';
    }
    getPreselectNodesBasedOnSelectionMode() {
        var _a;
        let selectedNodes = [];
        if ((_a = this.currentUploadBatch) === null || _a === void 0 ? void 0 : _a.length) {
            if (this.isSingleSelectionMode()) {
                selectedNodes = [this.currentUploadBatch[this.currentUploadBatch.length - 1]];
            }
            else {
                selectedNodes = this.currentUploadBatch;
            }
        }
        return selectedNodes;
    }
    resetPagination() {
        this.queryBuilderService.paging = {
            maxItems: this.pageSize,
            skipCount: this.DEFAULT_PAGINATION.skipCount
        };
    }
}
ContentNodeSelectorPanelComponent.ɵfac = function ContentNodeSelectorPanelComponent_Factory(t) { return new (t || ContentNodeSelectorPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CustomResourcesService), ɵngcc0.ɵɵdirectiveInject(SEARCH_QUERY_SERVICE_TOKEN), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UserPreferencesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NodesApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UploadService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.SitesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AppConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ContentNodeSelectorPanelService)); };
ContentNodeSelectorPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ContentNodeSelectorPanelComponent, selectors: [["adf-content-node-selector-panel"]], viewQuery: function ContentNodeSelectorPanelComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵstaticViewQuery(HighlightDirective, true);
        ɵngcc0.ɵɵstaticViewQuery(InfinitePaginationComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.documentList = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.highlighter = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infinitePaginationComponent = _t.first);
    } }, hostAttrs: [1, "adf-content-node-selector-panel"], inputs: { restrictRootToCurrentFolderId: "restrictRootToCurrentFolderId", currentFolderId: "currentFolderId", dropdownHideMyFiles: "dropdownHideMyFiles", dropdownSiteList: "dropdownSiteList", imageResolver: "imageResolver", pageSize: "pageSize", selectionMode: "selectionMode", isSelectionValid: "isSelectionValid", rowFilter: "rowFilter", excludeSiteContent: "excludeSiteContent", showSearch: "showSearch", showDropdownSiteList: "showDropdownSiteList", showFilesInResult: "showFilesInResult", showNodeCounter: "showNodeCounter", breadcrumbTransform: "breadcrumbTransform", where: "where" }, outputs: { select: "select", navigationChange: "navigationChange", siteChange: "siteChange", showingSearch: "showingSearch", currentFolder: "currentFolder", folderLoaded: "folderLoaded" }, features: [ɵngcc0.ɵɵProvidersFeature([{
                provide: SEARCH_QUERY_SERVICE_TOKEN,
                useClass: SearchQueryBuilderService
            }])], decls: 29, vars: 31, consts: [[1, "adf-content-node-selector-content"], ["floatPlaceholder", "never", "class", "adf-content-node-selector-content-input", 4, "ngIf"], ["class", "full-width", "data-automation-id", "content-node-selector-sites-combo", 3, "placeholder", "hideMyFiles", "siteList", "value", "change", 4, "ngIf"], ["data-automation-id", "adf-toggle-search-panel-button", "mat-icon-button", "", 3, "click", 4, "ngIf"], [1, "adf-content-node-selector-search-panel-container"], [4, "ngIf"], [1, "adf-content-node-selector-document-list-container"], ["class", "adf-content-node-selector-content-breadcrumb", "data-automation-id", "content-node-selector-content-breadcrumb", 3, "target", "rootId", "transform", "folderNode", "root", "navigate", 4, "ngIf"], [3, "adf-node-counter", 4, "ngIf"], ["data-automation-id", "content-node-selector-content-list", 1, "adf-content-node-selector-content-list"], ["adf-highlight-selector", ".adf-name-location-cell-name", "sortingMode", "server", "data-automation-id", "content-node-selector-document-list", 3, "adf-highlight", "showHeader", "node", "preselectNodes", "maxItems", "rowFilter", "imageResolver", "currentFolderId", "selectionMode", "contextMenuActions", "contentActions", "allowDropFiles", "sorting", "where", "folderChange", "ready", "nodeSelected"], ["documentList", ""], ["key", "$thumbnail", "type", "image"], ["key", "name", "type", "text", "title", "ADF-DOCUMENT-LIST.LAYOUT.NAME", 1, "adf-full-width", "adf-ellipsis-cell"], ["key", "modifiedAt", "type", "date", "title", "ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON", "format", "timeAgo", 1, "adf-content-selector-modified-cell"], ["key", "createdByUser.displayName", "type", "text", "title", "ADF-DOCUMENT-LIST.LAYOUT.CREATED_BY", 1, "adf-content-selector-modifier-cell"], ["key", "visibility", "type", "text", "title", "ADF-DOCUMENT-LIST.LAYOUT.STATUS", 1, "adf-content-selector-visibility-cell"], ["data-automation-id", "content-node-selector-search-pagination", 3, "target", "loading", "loadMore"], ["floatPlaceholder", "never", 1, "adf-content-node-selector-content-input"], ["matInput", "", "id", "searchInput", "type", "text", "data-automation-id", "content-node-selector-search-input", 3, "formControl", "placeholder", "value"], ["matSuffix", "", "class", "adf-content-node-selector-content-input-icon", "data-automation-id", "content-node-selector-search-clear", 3, "click", 4, "ngIf"], ["matSuffix", "", "class", "adf-content-node-selector-content-input-icon", "data-automation-id", "content-node-selector-search-icon", 4, "ngIf"], ["matSuffix", "", "data-automation-id", "content-node-selector-search-clear", 1, "adf-content-node-selector-content-input-icon", 3, "click"], ["matSuffix", "", "data-automation-id", "content-node-selector-search-icon", 1, "adf-content-node-selector-content-input-icon"], ["data-automation-id", "content-node-selector-sites-combo", 1, "full-width", 3, "placeholder", "hideMyFiles", "siteList", "value", "change"], ["data-automation-id", "adf-toggle-search-panel-button", "mat-icon-button", "", 3, "click"], ["role", "heading", "aria-level", "3", 1, "adf-search-results-label"], ["data-automation-id", "content-node-selector-content-breadcrumb", 1, "adf-content-node-selector-content-breadcrumb", 3, "target", "rootId", "transform", "folderNode", "root", "navigate"], [3, "adf-node-counter"], [3, "row"]], template: function ContentNodeSelectorPanelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ContentNodeSelectorPanelComponent_mat_form_field_1_Template, 5, 7, "mat-form-field", 1);
        ɵngcc0.ɵɵtemplate(2, ContentNodeSelectorPanelComponent_adf_sites_dropdown_2_Template, 1, 4, "adf-sites-dropdown", 2);
        ɵngcc0.ɵɵtemplate(3, ContentNodeSelectorPanelComponent_button_3_Template, 5, 3, "button", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵtemplate(5, ContentNodeSelectorPanelComponent_adf_search_panel_5_Template, 1, 0, "adf-search-panel", 5);
        ɵngcc0.ɵɵelementStart(6, "div", 6);
        ɵngcc0.ɵɵelementStart(7, "adf-toolbar");
        ɵngcc0.ɵɵelementStart(8, "adf-toolbar-title");
        ɵngcc0.ɵɵtemplate(9, ContentNodeSelectorPanelComponent_ng_container_9_Template, 4, 3, "ng-container", 5);
        ɵngcc0.ɵɵtemplate(10, ContentNodeSelectorPanelComponent_adf_dropdown_breadcrumb_10_Template, 1, 5, "adf-dropdown-breadcrumb", 7);
        ɵngcc0.ɵɵtemplate(11, ContentNodeSelectorPanelComponent_ng_container_11_Template, 1, 1, "ng-container", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "div", 9);
        ɵngcc0.ɵɵelementStart(13, "adf-document-list", 10, 11);
        ɵngcc0.ɵɵlistener("folderChange", function ContentNodeSelectorPanelComponent_Template_adf_document_list_folderChange_13_listener($event) { return ctx.onFolderChange($event); })("ready", function ContentNodeSelectorPanelComponent_Template_adf_document_list_ready_13_listener($event) { return ctx.onFolderLoaded($event); })("nodeSelected", function ContentNodeSelectorPanelComponent_Template_adf_document_list_nodeSelected_13_listener($event) { return ctx.onCurrentSelection($event); });
        ɵngcc0.ɵɵelementStart(15, "adf-custom-empty-content-template");
        ɵngcc0.ɵɵelementStart(16, "div");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "data-columns");
        ɵngcc0.ɵɵelement(20, "data-column", 12);
        ɵngcc0.ɵɵelementStart(21, "data-column", 13);
        ɵngcc0.ɵɵtemplate(22, ContentNodeSelectorPanelComponent_ng_template_22_Template, 1, 1, "ng-template");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(23, "data-column", 14);
        ɵngcc0.ɵɵelement(24, "data-column", 15);
        ɵngcc0.ɵɵelement(25, "data-column", 16);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(26, "adf-infinite-pagination", 17);
        ɵngcc0.ɵɵlistener("loadMore", function ContentNodeSelectorPanelComponent_Template_adf_infinite_pagination_loadMore_26_listener($event) { return ctx.getNextPageOfSearch($event); });
        ɵngcc0.ɵɵtext(27);
        ɵngcc0.ɵɵpipe(28, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSearch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showDropdownSiteList);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasCustomModels());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.searchPanelExpanded);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.showBreadcrumbs());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBreadcrumbs());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showNodeCounter);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("adf-content-node-selector-content-list-searchLayout", ctx.showingSearchResults);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("adf-highlight", ctx.searchTerm)("showHeader", ctx.showHeader)("node", ctx.nodePaging)("preselectNodes", ctx.preselectedNodes)("maxItems", ctx.pageSize)("rowFilter", ctx._rowFilter)("imageResolver", ctx.imageResolver)("currentFolderId", ctx.folderIdToShow)("selectionMode", ctx.selectionMode)("contextMenuActions", false)("contentActions", false)("allowDropFiles", false)("sorting", ctx.sorting)("where", ctx.where);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 27, "NODE_SELECTOR.NO_RESULTS"));
        ɵngcc0.ɵɵadvance(9);
        ɵngcc0.ɵɵproperty("target", ctx.target)("loading", ctx.loadingSearchResults);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(28, 29, "ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE"), " ");
    } }, directives: [ɵngcc4.NgIf, ɵngcc2.ToolbarComponent, ɵngcc2.ToolbarTitleComponent, ɵngcc5.DocumentListComponent, ɵngcc2.HighlightDirective, ɵngcc2.CustomEmptyContentTemplateDirective, ɵngcc2.DataColumnListComponent, ɵngcc2.DataColumnComponent, ɵngcc2.InfinitePaginationComponent, ɵngcc6.MatFormField, ɵngcc7.MatInput, ɵngcc8.DefaultValueAccessor, ɵngcc8.NgControlStatus, ɵngcc8.FormControlDirective, ɵngcc9.MatIcon, ɵngcc6.MatSuffix, ɵngcc10.DropdownSitesComponent, ɵngcc11.MatButton, ɵngcc12.SearchPanelComponent, ɵngcc13.DropdownBreadcrumbComponent, ɵngcc14.NodeCounterDirective, ɵngcc15.NameLocationCellComponent], pipes: [ɵngcc16.TranslatePipe], encapsulation: 2 });
ContentNodeSelectorPanelComponent.ctorParameters = () => [
    { type: CustomResourcesService },
    { type: SearchQueryBuilderService, decorators: [{ type: Inject, args: [SEARCH_QUERY_SERVICE_TOKEN,] }] },
    { type: UserPreferencesService },
    { type: NodesApiService },
    { type: UploadService },
    { type: SitesService },
    { type: AppConfigService },
    { type: ContentNodeSelectorPanelService }
];
ContentNodeSelectorPanelComponent.propDecorators = {
    restrictRootToCurrentFolderId: [{ type: Input }],
    currentFolderId: [{ type: Input }],
    dropdownHideMyFiles: [{ type: Input }],
    dropdownSiteList: [{ type: Input }],
    where: [{ type: Input }],
    rowFilter: [{ type: Input }],
    excludeSiteContent: [{ type: Input }],
    imageResolver: [{ type: Input }],
    pageSize: [{ type: Input }],
    selectionMode: [{ type: Input }],
    isSelectionValid: [{ type: Input }],
    breadcrumbTransform: [{ type: Input }],
    showSearch: [{ type: Input }],
    showDropdownSiteList: [{ type: Input }],
    showFilesInResult: [{ type: Input }],
    showNodeCounter: [{ type: Input }],
    select: [{ type: Output }],
    navigationChange: [{ type: Output }],
    siteChange: [{ type: Output }],
    showingSearch: [{ type: Output }],
    currentFolder: [{ type: Output }],
    folderLoaded: [{ type: Output }],
    documentList: [{ type: ViewChild, args: ['documentList', { static: true },] }],
    highlighter: [{ type: ViewChild, args: [HighlightDirective, { static: true },] }],
    infinitePaginationComponent: [{ type: ViewChild, args: [InfinitePaginationComponent, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentNodeSelectorPanelComponent, [{
        type: Component,
        args: [{
                selector: 'adf-content-node-selector-panel',
                template: "<div class=\"adf-content-node-selector-content\">\n    <mat-form-field floatPlaceholder=\"never\" class=\"adf-content-node-selector-content-input\" *ngIf=\"showSearch\">\n        <input matInput\n            id=\"searchInput\"\n            [formControl]=\"searchInput\"\n            type=\"text\"\n            placeholder=\"{{'NODE_SELECTOR.SEARCH' | translate}}\"\n            [value]=\"searchTerm\"\n            data-automation-id=\"content-node-selector-search-input\">\n\n        <mat-icon *ngIf=\"searchTerm.length > 0\"\n            matSuffix (click)=\"clear()\"\n            class=\"adf-content-node-selector-content-input-icon\"\n            data-automation-id=\"content-node-selector-search-clear\">clear\n        </mat-icon>\n\n        <mat-icon *ngIf=\"searchTerm.length === 0\"\n            matSuffix\n            class=\"adf-content-node-selector-content-input-icon\"\n            data-automation-id=\"content-node-selector-search-icon\">search\n        </mat-icon>\n\n    </mat-form-field>\n    <adf-sites-dropdown\n        *ngIf=\"showDropdownSiteList\"\n        class=\"full-width\"\n        (change)=\"siteChanged($event)\"\n        [placeholder]=\"'NODE_SELECTOR.SELECT_LOCATION'\"\n        [hideMyFiles]=\"dropdownHideMyFiles\"\n        [siteList]=\"dropdownSiteList\"\n        [value]=\"startSiteGuid\"\n        data-automation-id=\"content-node-selector-sites-combo\">\n    </adf-sites-dropdown>\n    <button *ngIf=\"hasCustomModels()\"\n        data-automation-id=\"adf-toggle-search-panel-button\"\n        mat-icon-button\n        (click)=\"toggleSearchPanel()\">\n        <mat-icon>filter_list</mat-icon>\n        {{ 'SEARCH.SEARCH_HEADER.TITLE' | translate }}\n    </button>\n    <div class=\"adf-content-node-selector-search-panel-container\">\n        <adf-search-panel *ngIf=\"searchPanelExpanded\">\n        </adf-search-panel>\n        <div class=\"adf-content-node-selector-document-list-container\">\n    <adf-toolbar>\n        <adf-toolbar-title>\n            <ng-container *ngIf=\"!showBreadcrumbs()\">\n                <span role=\"heading\" aria-level=\"3\" class=\"adf-search-results-label\">{{ 'NODE_SELECTOR.SEARCH_RESULTS' | translate }}</span>\n            </ng-container>\n            <adf-dropdown-breadcrumb *ngIf=\"showBreadcrumbs()\"\n                class=\"adf-content-node-selector-content-breadcrumb\"\n                (navigate)=\"clearSearch()\"\n                [target]=\"documentList\"\n                [rootId]=\"breadcrumbRootId\"\n                [transform]=\"breadcrumbTransform\"\n                [folderNode]=\"breadcrumbFolderNode\"\n                [root]=\"breadcrumbFolderTitle\"\n                data-automation-id=\"content-node-selector-content-breadcrumb\">\n            </adf-dropdown-breadcrumb>\n            <ng-container *ngIf=\"showNodeCounter\" [adf-node-counter]=\"getSelectedCount()\"></ng-container>\n        </adf-toolbar-title>\n    </adf-toolbar>\n\n    <div\n        class=\"adf-content-node-selector-content-list\"\n        [class.adf-content-node-selector-content-list-searchLayout]=\"showingSearchResults\"\n        data-automation-id=\"content-node-selector-content-list\">\n        <adf-document-list\n            #documentList\n            [adf-highlight]=\"searchTerm\"\n            adf-highlight-selector=\".adf-name-location-cell-name\"\n            [showHeader]=\"showHeader\"\n            [node]=\"nodePaging\"\n            [preselectNodes]=\"preselectedNodes\"\n            [maxItems]=\"pageSize\"\n            [rowFilter]=\"_rowFilter\"\n            [imageResolver]=\"imageResolver\"\n            [currentFolderId]=\"folderIdToShow\"\n            [selectionMode]=\"selectionMode\"\n            [contextMenuActions]=\"false\"\n            [contentActions]=\"false\"\n            [allowDropFiles]=\"false\"\n            [sorting]=\"sorting\"\n            sortingMode=\"server\"\n            [where]=\"where\"\n            (folderChange)=\"onFolderChange($event)\"\n            (ready)=\"onFolderLoaded($event)\"\n            (nodeSelected)=\"onCurrentSelection($event)\"\n            data-automation-id=\"content-node-selector-document-list\">\n\n            <adf-custom-empty-content-template>\n                <div>{{ 'NODE_SELECTOR.NO_RESULTS' | translate }}</div>\n            </adf-custom-empty-content-template>\n\n            <data-columns>\n                <data-column key=\"$thumbnail\" type=\"image\"></data-column>\n                <data-column key=\"name\" type=\"text\" title=\"ADF-DOCUMENT-LIST.LAYOUT.NAME\" class=\"adf-full-width adf-ellipsis-cell\">\n                    <ng-template let-context>\n                        <adf-name-location-cell [row]=\"context.row\"></adf-name-location-cell>\n                    </ng-template>\n                </data-column>\n                <data-column key=\"modifiedAt\" type=\"date\" title=\"ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON\" format=\"timeAgo\" class=\"adf-content-selector-modified-cell\"></data-column>\n                <data-column key=\"createdByUser.displayName\" type=\"text\" title=\"ADF-DOCUMENT-LIST.LAYOUT.CREATED_BY\" class=\"adf-content-selector-modifier-cell\"></data-column>\n                <data-column key=\"visibility\" type=\"text\" title=\"ADF-DOCUMENT-LIST.LAYOUT.STATUS\" class=\"adf-content-selector-visibility-cell\"></data-column>\n            </data-columns>\n\n        </adf-document-list>\n\n        <adf-infinite-pagination\n            [target]=\"target\"\n            [loading]=\"loadingSearchResults\"\n            (loadMore)=\"getNextPageOfSearch($event)\"\n            data-automation-id=\"content-node-selector-search-pagination\">\n            {{ 'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE' | translate }}\n        </adf-infinite-pagination>\n    </div>\n        </div>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-content-node-selector-panel' },
                providers: [{
                        provide: SEARCH_QUERY_SERVICE_TOKEN,
                        useClass: SearchQueryBuilderService
                    }]
            }]
    }], function () { return [{ type: ɵngcc1.CustomResourcesService }, { type: ɵngcc17.SearchQueryBuilderService, decorators: [{
                type: Inject,
                args: [SEARCH_QUERY_SERVICE_TOKEN]
            }] }, { type: ɵngcc2.UserPreferencesService }, { type: ɵngcc2.NodesApiService }, { type: ɵngcc2.UploadService }, { type: ɵngcc2.SitesService }, { type: ɵngcc2.AppConfigService }, { type: ɵngcc3.ContentNodeSelectorPanelService }]; }, { restrictRootToCurrentFolderId: [{
            type: Input
        }], currentFolderId: [{
            type: Input
        }], dropdownHideMyFiles: [{
            type: Input
        }], dropdownSiteList: [{
            type: Input
        }], imageResolver: [{
            type: Input
        }], pageSize: [{
            type: Input
        }], selectionMode: [{
            type: Input
        }], isSelectionValid: [{
            type: Input
        }], select: [{
            type: Output
        }], navigationChange: [{
            type: Output
        }], siteChange: [{
            type: Output
        }], showingSearch: [{
            type: Output
        }], currentFolder: [{
            type: Output
        }], folderLoaded: [{
            type: Output
        }], rowFilter: [{
            type: Input
        }], excludeSiteContent: [{
            type: Input
        }], showSearch: [{
            type: Input
        }], showDropdownSiteList: [{
            type: Input
        }], showFilesInResult: [{
            type: Input
        }], showNodeCounter: [{
            type: Input
        }], breadcrumbTransform: [{
            type: Input
        }], where: [{
            type: Input
        }], documentList: [{
            type: ViewChild,
            args: ['documentList', { static: true }]
        }], highlighter: [{
            type: ViewChild,
            args: [HighlightDirective, { static: true }]
        }], infinitePaginationComponent: [{
            type: ViewChild,
            args: [InfinitePaginationComponent, { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,