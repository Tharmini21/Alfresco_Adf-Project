/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { TranslationService, NotificationService, AllowableOperationsEnum, ContentService, UploadService } from '@alfresco/adf-core';
import { NodeAction } from '../document-list/models/node-action.enum';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alfresco/adf-core';
import * as ɵngcc2 from '@angular/material/dialog';

function ContentNodeSelectorComponent_mat_tab_7_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 18);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("adf-node-counter", ctx_r2.getSelectedCount());
} }
function ContentNodeSelectorComponent_mat_tab_7_ng_template_7_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 20);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2, "info ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵpropertyInterpolate("matTooltip", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r5.getWarningMessage()));
} }
function ContentNodeSelectorComponent_mat_tab_7_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, ContentNodeSelectorComponent_mat_tab_7_ng_template_7_mat_icon_2_Template, 3, 3, "mat-icon", 19);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(1, 2, "NODE_SELECTOR.UPLOAD_FROM_DEVICE"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.hasUploadError());
} }
function ContentNodeSelectorComponent_mat_tab_7_adf_empty_list_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "adf-empty-list", 21);
    ɵngcc0.ɵɵelementStart(1, "div", 22);
    ɵngcc0.ɵɵelementStart(2, "div", 23);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 24);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "img", 25);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, "ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 6, "ADF-DATATABLE.EMPTY.DRAG-AND-DROP.SUBTITLE"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("alt", ɵngcc0.ɵɵpipeBind1(9, 8, "ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE"))("src", ctx_r4.emptyFolderImageUrl, ɵngcc0.ɵɵsanitizeUrl);
} }
function ContentNodeSelectorComponent_mat_tab_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-tab", 8);
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵelementStart(2, "div", 10);
    ɵngcc0.ɵɵelementStart(3, "adf-toolbar");
    ɵngcc0.ɵɵelementStart(4, "adf-toolbar-title");
    ɵngcc0.ɵɵelement(5, "adf-dropdown-breadcrumb", 11);
    ɵngcc0.ɵɵtemplate(6, ContentNodeSelectorComponent_mat_tab_7_ng_container_6_Template, 1, 1, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, ContentNodeSelectorComponent_mat_tab_7_ng_template_7_Template, 3, 4, "ng-template", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 14);
    ɵngcc0.ɵɵelementStart(9, "adf-upload-drag-area", 15);
    ɵngcc0.ɵɵelementStart(10, "div");
    ɵngcc0.ɵɵelement(11, "adf-file-uploading-dialog", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, ContentNodeSelectorComponent_mat_tab_7_adf_empty_list_12_Template, 10, 10, "adf-empty-list", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", ctx_r0.isNotAllowedToUpload());
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("folderNode", ctx_r0.breadcrumbFolderNode)("rootId", ctx_r0.data == null ? null : ctx_r0.data.currentFolderId)("readOnly", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isCounterVisible());
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("rootFolderId", ctx_r0.currentDirectoryId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("adf-upload-dialog-container", ctx_r0.uploadStarted);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("alwaysVisible", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.uploadStarted);
} }
function ContentNodeSelectorComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "adf-upload-button", 26);
    ɵngcc0.ɵɵlistener("error", function ContentNodeSelectorComponent_ng_container_10_Template_adf_upload_button_error_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onError($event); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("staticTitle", ɵngcc0.ɵɵpipeBind1(2, 4, "FORM.FIELD.UPLOAD"))("multipleFiles", ctx_r1.isMultipleSelection())("rootFolderId", ctx_r1.currentDirectoryId)("disabled", ctx_r1.isNotAllowedToUpload());
} }
export class ContentNodeSelectorComponent {
    constructor(translation, contentService, notificationService, uploadService, dialog, data) {
        var _a;
        this.translation = translation;
        this.contentService = contentService;
        this.notificationService = notificationService;
        this.uploadService = uploadService;
        this.dialog = dialog;
        this.data = data;
        this.showingSearch = false;
        this.hasAllowableOperations = false;
        this.isLoading = true;
        this.selectedTabIndex = 0;
        this.uploadStarted = false;
        this.emptyFolderImageUrl = './assets/images/empty_doc_lib.svg';
        this.action = (_a = data.actionName) !== null && _a !== void 0 ? _a : NodeAction.CHOOSE;
        this.buttonActionName = `NODE_SELECTOR.${this.action}`;
        this.title = data.title;
        this.currentDirectoryId = data.currentFolderId;
    }
    ngOnInit() {
        this.dialog.keydownEvents().subscribe(event => {
            if (event.keyCode === 27) {
                event.preventDefault();
                event.stopImmediatePropagation();
                this.close();
            }
        });
        this.dialog.backdropClick().subscribe(() => {
            this.close();
        });
        this.uploadService.fileUploadStarting.subscribe(() => {
            this.uploadStarted = true;
        });
    }
    close() {
        this.dialog.close();
    }
    onSelect(nodeList) {
        this.chosenNode = nodeList;
    }
    onSiteChange(siteTitle) {
        this.updateTitle(siteTitle);
    }
    onNavigationChange(pathElement) {
        this.currentDirectoryId = pathElement.value.id;
        this.isLoading = true;
    }
    onClick() {
        this.data.select.next(this.chosenNode);
        this.close();
    }
    updateTitle(siteTitle) {
        if (this.action === NodeAction.CHOOSE && siteTitle) {
            this.title = this.getTitleTranslation(this.action, siteTitle);
        }
    }
    getTitleTranslation(action, name) {
        return this.translation.instant(`NODE_SELECTOR.${action}_ITEM`, { name: this.translation.instant(name) });
    }
    getSelectedCount() {
        var _a;
        return ((_a = this.chosenNode) === null || _a === void 0 ? void 0 : _a.length) || 0;
    }
    isCounterVisible() {
        return this.action === NodeAction.ATTACH || this.action === NodeAction.CHOOSE;
    }
    isMultipleSelection() {
        return this.data.selectionMode === 'multiple';
    }
    onError(error) {
        this.notificationService.showError(error);
    }
    isChooseButtonDisabled() {
        return this.uploadService.isUploading() || !this.hasNodeSelected();
    }
    hasNodeSelected() {
        var _a;
        return ((_a = this.chosenNode) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }
    onShowingSearch(value) {
        this.showingSearch = value;
    }
    onCurrentFolder(currentFolder) {
        this.hasAllowableOperations = this.contentService.hasAllowableOperations(currentFolder, AllowableOperationsEnum.CREATE);
        this.breadcrumbFolderNode = currentFolder;
    }
    isNotAllowedToUpload() {
        return this.showingSearch || !this.hasAllowableOperations;
    }
    onFolderLoaded() {
        this.isLoading = false;
    }
    onTabSelectionChange(tabIndex) {
        this.selectedTabIndex = tabIndex;
    }
    isFileServerTabSelected() {
        return this.selectedTabIndex === 0;
    }
    isLocalUploadTabSelected() {
        return this.selectedTabIndex === 1;
    }
    isUploadEnabled() {
        return this.canPerformLocalUpload() && this.isLocalUploadTabSelected();
    }
    canPerformLocalUpload() {
        var _a;
        return (_a = this.data) === null || _a === void 0 ? void 0 : _a.showLocalUploadButton;
    }
    getWarningMessage() {
        return this.showingSearch ? 'NODE_SELECTOR.UPLOAD_BUTTON_SEARCH_WARNING_MESSAGE' :
            (this.hasNoPermissionToUpload() ? 'NODE_SELECTOR.UPLOAD_BUTTON_PERMISSION_WARNING_MESSAGE' : '');
    }
    hasNoPermissionToUpload() {
        return (!this.hasAllowableOperations && !this.showingSearch) && !this.isLoading;
    }
    hasUploadError() {
        return this.showingSearch || this.hasNoPermissionToUpload();
    }
}
ContentNodeSelectorComponent.ɵfac = function ContentNodeSelectorComponent_Factory(t) { return new (t || ContentNodeSelectorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NotificationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UploadService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };
ContentNodeSelectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ContentNodeSelectorComponent, selectors: [["adf-content-node-selector"]], decls: 18, vars: 30, consts: [["mat-dialog-title", "", "data-automation-id", "content-node-selector-title"], ["mat-align-tabs", "start", 1, "adf-content-node-selector-dialog-content", 3, "selectedIndexChange"], [3, "label"], [3, "currentFolderId", "restrictRootToCurrentFolderId", "dropdownHideMyFiles", "dropdownSiteList", "rowFilter", "imageResolver", "isSelectionValid", "breadcrumbTransform", "excludeSiteContent", "selectionMode", "where", "showSearch", "showDropdownSiteList", "showFilesInResult", "showNodeCounter", "currentFolder", "folderLoaded", "select", "showingSearch", "siteChange", "navigationChange"], [3, "disabled", 4, "ngIf"], [4, "ngIf"], ["mat-button", "", "data-automation-id", "content-node-selector-actions-cancel", 3, "click"], ["mat-button", "", "data-automation-id", "content-node-selector-actions-choose", 1, "adf-choose-action", 3, "disabled", "click"], [3, "disabled"], [1, "adf-content-node-selector-local-upload-container"], [1, "adf-content-node-selector-local-upload-header"], ["data-automation-id", "content-node-selector-upload-breadcrumb", 1, "adf-content-node-selector-content-breadcrumb", 3, "folderNode", "rootId", "readOnly"], [3, "adf-node-counter", 4, "ngIf"], ["mat-tab-label", ""], [1, "adf-content-node-selector-local-upload-content"], [3, "rootFolderId"], [3, "alwaysVisible"], ["data-automation-id", "adf-empty-list", 4, "ngIf"], [3, "adf-node-counter"], ["data-automation-id", "adf-content-node-selector-disabled-tab-info-icon", 3, "matTooltip", 4, "ngIf"], ["data-automation-id", "adf-content-node-selector-disabled-tab-info-icon", 3, "matTooltip"], ["data-automation-id", "adf-empty-list"], [1, "adf-empty-list_template", "adf-empty-folder"], ["fxHide.lt-md", "true", 1, "adf-empty-folder-drag-drop"], ["fxHide.lt-md", "true", 1, "adf-empty-folder-any-files-here-to-add"], [1, "adf-empty-folder-image", 3, "alt", "src"], [3, "staticTitle", "multipleFiles", "rootFolderId", "disabled", "error"]], template: function ContentNodeSelectorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "header", 0);
        ɵngcc0.ɵɵelementStart(1, "h2");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "mat-tab-group", 1);
        ɵngcc0.ɵɵlistener("selectedIndexChange", function ContentNodeSelectorComponent_Template_mat_tab_group_selectedIndexChange_3_listener($event) { return ctx.onTabSelectionChange($event); });
        ɵngcc0.ɵɵelementStart(4, "mat-tab", 2);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementStart(6, "adf-content-node-selector-panel", 3);
        ɵngcc0.ɵɵlistener("currentFolder", function ContentNodeSelectorComponent_Template_adf_content_node_selector_panel_currentFolder_6_listener($event) { return ctx.onCurrentFolder($event); })("folderLoaded", function ContentNodeSelectorComponent_Template_adf_content_node_selector_panel_folderLoaded_6_listener() { return ctx.onFolderLoaded(); })("select", function ContentNodeSelectorComponent_Template_adf_content_node_selector_panel_select_6_listener($event) { return ctx.onSelect($event); })("showingSearch", function ContentNodeSelectorComponent_Template_adf_content_node_selector_panel_showingSearch_6_listener($event) { return ctx.onShowingSearch($event); })("siteChange", function ContentNodeSelectorComponent_Template_adf_content_node_selector_panel_siteChange_6_listener($event) { return ctx.onSiteChange($event); })("navigationChange", function ContentNodeSelectorComponent_Template_adf_content_node_selector_panel_navigationChange_6_listener($event) { return ctx.onNavigationChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, ContentNodeSelectorComponent_mat_tab_7_Template, 13, 10, "mat-tab", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "mat-dialog-actions");
        ɵngcc0.ɵɵelementStart(9, "div");
        ɵngcc0.ɵɵtemplate(10, ContentNodeSelectorComponent_ng_container_10_Template, 3, 6, "ng-container", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div");
        ɵngcc0.ɵɵelementStart(12, "button", 6);
        ɵngcc0.ɵɵlistener("click", function ContentNodeSelectorComponent_Template_button_click_12_listener() { return ctx.close(); });
        ɵngcc0.ɵɵtext(13);
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(15, "button", 7);
        ɵngcc0.ɵɵlistener("click", function ContentNodeSelectorComponent_Template_button_click_15_listener() { return ctx.onClick(); });
        ɵngcc0.ɵɵtext(16);
        ɵngcc0.ɵɵpipe(17, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("adf-content-node-selector-headless-tabs", !ctx.canPerformLocalUpload());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(5, 24, "NODE_SELECTOR.REPOSITORY"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("currentFolderId", ctx.data == null ? null : ctx.data.currentFolderId)("restrictRootToCurrentFolderId", ctx.data == null ? null : ctx.data.restrictRootToCurrentFolderId)("dropdownHideMyFiles", ctx.data == null ? null : ctx.data.dropdownHideMyFiles)("dropdownSiteList", ctx.data == null ? null : ctx.data.dropdownSiteList)("rowFilter", ctx.data == null ? null : ctx.data.rowFilter)("imageResolver", ctx.data == null ? null : ctx.data.imageResolver)("isSelectionValid", ctx.data == null ? null : ctx.data.isSelectionValid)("breadcrumbTransform", ctx.data == null ? null : ctx.data.breadcrumbTransform)("excludeSiteContent", ctx.data == null ? null : ctx.data.excludeSiteContent)("selectionMode", ctx.data == null ? null : ctx.data.selectionMode)("where", ctx.data == null ? null : ctx.data.where)("showSearch", ctx.data == null ? null : ctx.data.showSearch)("showDropdownSiteList", ctx.data == null ? null : ctx.data.showDropdownSiteList)("showFilesInResult", ctx.data == null ? null : ctx.data.showFilesInResult)("showNodeCounter", ctx.isCounterVisible());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.canPerformLocalUpload());
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isUploadEnabled());
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(14, 26, "NODE_SELECTOR.CANCEL"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", ctx.isChooseButtonDisabled());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(17, 28, ctx.buttonActionName), " ");
    } }, encapsulation: 2 });
ContentNodeSelectorComponent.ctorParameters = () => [
    { type: TranslationService },
    { type: ContentService },
    { type: NotificationService },
    { type: UploadService },
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentNodeSelectorComponent, [{
        type: Component,
        args: [{
                selector: 'adf-content-node-selector',
                template: "<header\n    mat-dialog-title\n    data-automation-id=\"content-node-selector-title\">\n    <h2>{{title}}</h2>\n</header>\n\n<mat-tab-group class=\"adf-content-node-selector-dialog-content\"\n               mat-align-tabs=\"start\"\n               (selectedIndexChange)=\"onTabSelectionChange($event)\"\n               [class.adf-content-node-selector-headless-tabs]=\"!canPerformLocalUpload()\">\n    <mat-tab label=\"{{ 'NODE_SELECTOR.REPOSITORY' | translate }}\">\n            <adf-content-node-selector-panel\n                [currentFolderId]=\"data?.currentFolderId\"\n                [restrictRootToCurrentFolderId]=\"data?.restrictRootToCurrentFolderId\"\n                [dropdownHideMyFiles]=\"data?.dropdownHideMyFiles\"\n                [dropdownSiteList]=\"data?.dropdownSiteList\"\n                [rowFilter]=\"data?.rowFilter\"\n                [imageResolver]=\"data?.imageResolver\"\n                [isSelectionValid]=\"data?.isSelectionValid\"\n                [breadcrumbTransform]=\"data?.breadcrumbTransform\"\n                [excludeSiteContent]=\"data?.excludeSiteContent\"\n                [selectionMode]=\"data?.selectionMode\"\n                [where]=\"data?.where\"\n                [showSearch]=\"data?.showSearch\"\n                [showDropdownSiteList]=\"data?.showDropdownSiteList\"\n                [showFilesInResult]=\"data?.showFilesInResult\"\n                [showNodeCounter]=\"isCounterVisible()\"\n                (currentFolder)=\"onCurrentFolder($event)\"\n                (folderLoaded)=\"onFolderLoaded()\"\n                (select)=\"onSelect($event)\"\n                (showingSearch)=\"onShowingSearch($event)\"\n                (siteChange)=\"onSiteChange($event)\"\n                (navigationChange)=\"onNavigationChange($event)\">\n            </adf-content-node-selector-panel>\n    </mat-tab>\n    <mat-tab *ngIf=\"canPerformLocalUpload()\"\n             [disabled]=\"isNotAllowedToUpload()\">\n        <div class=\"adf-content-node-selector-local-upload-container\">\n            <div class=\"adf-content-node-selector-local-upload-header\">\n                <adf-toolbar>\n                    <adf-toolbar-title>\n                        <adf-dropdown-breadcrumb\n                            class=\"adf-content-node-selector-content-breadcrumb\"\n                            [folderNode]=\"breadcrumbFolderNode\"\n                            [rootId]=\"data?.currentFolderId\"\n                            [readOnly]=\"true\"\n                            data-automation-id=\"content-node-selector-upload-breadcrumb\"\n                        ></adf-dropdown-breadcrumb>\n                        <ng-container *ngIf=\"isCounterVisible()\" [adf-node-counter]=\"getSelectedCount()\"></ng-container>\n                    </adf-toolbar-title>\n                </adf-toolbar>\n                <ng-template mat-tab-label>\n                    {{ 'NODE_SELECTOR.UPLOAD_FROM_DEVICE' | translate }}\n                    <mat-icon *ngIf=\"hasUploadError()\"\n                              data-automation-id=\"adf-content-node-selector-disabled-tab-info-icon\"\n                              matTooltip=\"{{ getWarningMessage() | translate }}\">info\n                    </mat-icon>\n                </ng-template>\n            </div>\n            <div class=\"adf-content-node-selector-local-upload-content\">\n                <adf-upload-drag-area [rootFolderId]=\"currentDirectoryId\">\n                    <div [class.adf-upload-dialog-container]=\"uploadStarted\">\n                        <adf-file-uploading-dialog [alwaysVisible]=\"true\"></adf-file-uploading-dialog>\n                    </div>\n                    <adf-empty-list data-automation-id=\"adf-empty-list\" *ngIf=\"!uploadStarted\">\n                        <div class=\"adf-empty-list_template adf-empty-folder\">\n                            <div fxHide.lt-md=\"true\"\n                                 class=\"adf-empty-folder-drag-drop\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE' | translate }}</div>\n                            <div fxHide.lt-md=\"true\"\n                                 class=\"adf-empty-folder-any-files-here-to-add\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.SUBTITLE' | translate }}</div>\n                            <img [alt]=\"'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE' | translate\" class=\"adf-empty-folder-image\"\n                                 [src]=\"emptyFolderImageUrl\">\n                        </div>\n                    </adf-empty-list>\n                </adf-upload-drag-area>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>\n\n<mat-dialog-actions>\n    <div>\n        <ng-container *ngIf=\"isUploadEnabled()\">\n            <adf-upload-button\n                [staticTitle]=\"'FORM.FIELD.UPLOAD' | translate \"\n                [multipleFiles]=\"isMultipleSelection()\"\n                [rootFolderId]=\"currentDirectoryId\"\n                [disabled]=\"isNotAllowedToUpload()\"\n                (error)=\"onError($event)\">\n            </adf-upload-button>\n        </ng-container>\n    </div>\n    <div>\n        <button\n            mat-button\n            (click)=\"close()\"\n            data-automation-id=\"content-node-selector-actions-cancel\">{{ 'NODE_SELECTOR.CANCEL' | translate }}\n        </button>\n\n        <button mat-button\n                [disabled]=\"isChooseButtonDisabled()\"\n                class=\"adf-choose-action\"\n                (click)=\"onClick()\"\n                data-automation-id=\"content-node-selector-actions-choose\">{{ buttonActionName | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.TranslationService }, { type: ɵngcc1.ContentService }, { type: ɵngcc1.NotificationService }, { type: ɵngcc1.UploadService }, { type: ɵngcc2.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,