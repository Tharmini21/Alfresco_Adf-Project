/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { TranslationService } from '@alfresco/adf-core';
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { TagService } from './services/tag.service';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './services/tag.service';
import * as ɵngcc2 from '@alfresco/adf-core';
import * as ɵngcc3 from '@angular/material/list';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/material/form-field';
import * as ɵngcc6 from '@angular/material/input';
import * as ɵngcc7 from '@angular/forms';
import * as ɵngcc8 from '@angular/material/button';
import * as ɵngcc9 from '@angular/material/icon';
import * as ɵngcc10 from '@ngx-translate/core';

function TagActionsComponent_mat_list_item_1_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-list-item");
    ɵngcc0.ɵɵelementStart(1, "div", 6);
    ɵngcc0.ɵɵlistener("click", function TagActionsComponent_mat_list_item_1_Template_div_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r5); const currentEntry_r2 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.removeTag(currentEntry_r2.entry.id); });
    ɵngcc0.ɵɵelementStart(2, "div", 7);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "mat-icon", 8);
    ɵngcc0.ɵɵtext(5, "delete");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const currentEntry_r2 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "tag_delete_", currentEntry_r2.entry.tag, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "tag_name_", currentEntry_r2.entry.tag, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", currentEntry_r2.entry.tag, " ");
} }
const _c0 = function () { return { "color": "red" }; };
function TagActionsComponent_mat_hint_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction0(2, _c0));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.errorMsg);
} }
export class TagActionsComponent {
    constructor(tagService, translateService) {
        this.tagService = tagService;
        this.translateService = translateService;
        this.successAdd = new EventEmitter();
        this.error = new EventEmitter();
        this.result = new EventEmitter();
        this.disableAddTag = true;
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        this.tagService.refresh
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(() => this.refreshTag());
    }
    ngOnChanges() {
        return this.refreshTag();
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    refreshTag() {
        if (this.nodeId) {
            this.tagService.getTagsByNodeId(this.nodeId).subscribe((tagPaging) => {
                this.tagsEntries = tagPaging.list.entries;
                this.disableAddTag = false;
                this.result.emit(this.tagsEntries);
            }, () => {
                this.tagsEntries = null;
                this.disableAddTag = true;
                this.result.emit(this.tagsEntries);
            });
        }
    }
    addTag() {
        if (this.searchTag(this.newTagName)) {
            this.errorMsg = this.translateService.instant('TAG.MESSAGES.EXIST');
            this.error.emit(this.errorMsg);
        }
        else {
            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {
                this.newTagName = '';
                this.successAdd.emit(this.nodeId);
            });
        }
    }
    searchTag(searchTagName) {
        if (this.tagsEntries) {
            return this.tagsEntries.find((currentTag) => {
                return (searchTagName === currentTag.entry.tag);
            });
        }
    }
    cleanErrorMsg() {
        this.errorMsg = '';
    }
    removeTag(tag) {
        this.tagService.removeTag(this.nodeId, tag);
    }
}
TagActionsComponent.ɵfac = function TagActionsComponent_Factory(t) { return new (t || TagActionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TagService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslationService)); };
TagActionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TagActionsComponent, selectors: [["adf-tag-node-actions-list"]], inputs: { nodeId: "nodeId" }, outputs: { successAdd: "successAdd", error: "error", result: "result" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 13, vars: 10, consts: [[4, "ngFor", "ngForOf"], ["cellspacing", "0", 1, "adf-full-width"], [1, "adf-full-width"], ["matInput", "", "type", "text", "id", "new-tag-text", 3, "placeholder", "ngModel", "keypress", "ngModelChange"], ["data-automation-id", "errorMessage", "align", "start", 3, "ngStyle", 4, "ngIf"], ["color", "primary", "id", "add-tag", "mat-raised-button", "", 1, "adf-full-width", 3, "disabled", "click"], [1, "adf-tag-actions-container", 3, "id", "click"], [1, "adf-tag-actions-delete-text", 3, "id"], [1, "adf-tag-actions-delete-icon"], ["data-automation-id", "errorMessage", "align", "start", 3, "ngStyle"]], template: function TagActionsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-list");
        ɵngcc0.ɵɵtemplate(1, TagActionsComponent_mat_list_item_1_Template, 6, 3, "mat-list-item", 0);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "table", 1);
        ɵngcc0.ɵɵelementStart(3, "tr");
        ɵngcc0.ɵɵelementStart(4, "td");
        ɵngcc0.ɵɵelementStart(5, "mat-form-field", 2);
        ɵngcc0.ɵɵelementStart(6, "input", 3);
        ɵngcc0.ɵɵlistener("keypress", function TagActionsComponent_Template_input_keypress_6_listener() { return ctx.cleanErrorMsg(); })("ngModelChange", function TagActionsComponent_Template_input_ngModelChange_6_listener($event) { return ctx.newTagName = $event; });
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, TagActionsComponent_mat_hint_8_Template, 2, 3, "mat-hint", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "td");
        ɵngcc0.ɵɵelementStart(10, "button", 5);
        ɵngcc0.ɵɵlistener("click", function TagActionsComponent_Template_button_click_10_listener() { return ctx.addTag(); });
        ɵngcc0.ɵɵtext(11);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tagsEntries);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(7, 6, "TAG.LABEL.NEWTAG"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.newTagName);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.error);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", ctx.disableAddTag);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(12, 8, "TAG.BUTTON.ADD"), " ");
    } }, directives: [ɵngcc3.MatList, ɵngcc4.NgForOf, ɵngcc5.MatFormField, ɵngcc6.MatInput, ɵngcc7.DefaultValueAccessor, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc4.NgIf, ɵngcc8.MatButton, ɵngcc3.MatListItem, ɵngcc9.MatIcon, ɵngcc5.MatHint, ɵngcc4.NgStyle], pipes: [ɵngcc10.TranslatePipe], styles: [".adf-full-width{width:100%}.adf-tag-actions-delete-icon{cursor:pointer;float:right}.adf-tag-actions-delete-text{float:left;font-size:16px}.adf-tag-actions-container{height:20px;padding:8px 0}"], encapsulation: 2 });
TagActionsComponent.ctorParameters = () => [
    { type: TagService },
    { type: TranslationService }
];
TagActionsComponent.propDecorators = {
    nodeId: [{ type: Input }],
    successAdd: [{ type: Output }],
    error: [{ type: Output }],
    result: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TagActionsComponent, [{
        type: Component,
        args: [{
                selector: 'adf-tag-node-actions-list',
                template: "<mat-list>\n    <mat-list-item *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n        <div class=\"adf-tag-actions-container\" id=\"tag_delete_{{currentEntry.entry.tag}}\" (click)=\"removeTag(currentEntry.entry.id)\">\n            <div class=\"adf-tag-actions-delete-text\" id=\"tag_name_{{currentEntry.entry.tag}}\">\n                {{currentEntry.entry.tag}}\n            </div>\n            <mat-icon class=\"adf-tag-actions-delete-icon\">delete</mat-icon>\n        </div>\n    </mat-list-item>\n</mat-list>\n<table class=\"adf-full-width\" cellspacing=\"0\">\n    <tr>\n        <td>\n            <mat-form-field class=\"adf-full-width\">\n                <input matInput placeholder=\"{{'TAG.LABEL.NEWTAG' | translate }}\"\n                       type=\"text\"\n                       (keypress)=\"cleanErrorMsg()\"\n                       [(ngModel)]=\"newTagName\"\n                       id=\"new-tag-text\"/>\n                <mat-hint data-automation-id=\"errorMessage\" *ngIf=\"error\" [ngStyle]=\"{'color': 'red'}\" align=\"start\">{{errorMsg}}</mat-hint>\n            </mat-form-field>\n        </td>\n        <td>\n            <button class=\"adf-full-width\" color=\"primary\" id=\"add-tag\" (click)=\"addTag()\" [disabled]=\"disableAddTag\"\n                    mat-raised-button>\n                {{'TAG.BUTTON.ADD' | translate }}\n            </button>\n        </td>\n    </tr>\n</table>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-full-width{width:100%}.adf-tag-actions-delete-icon{cursor:pointer;float:right}.adf-tag-actions-delete-text{float:left;font-size:16px}.adf-tag-actions-container{height:20px;padding:8px 0}"]
            }]
    }], function () { return [{ type: ɵngcc1.TagService }, { type: ɵngcc2.TranslationService }]; }, { successAdd: [{
            type: Output
        }], error: [{
            type: Output
        }], result: [{
            type: Output
        }], nodeId: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLWFjdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29udGVudC1zZXJ2aWNlcy9zcmMvbGliL3RhZy90YWctYWN0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBYSxNQUFNLEVBQUUsaUJBQWlCLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRS9CLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWEzQyxNQUFNLE9BQU8sbUJBQW1CO0FBQUcsSUF5Qi9CLFlBQW9CLFVBQXNCLEVBQVUsZ0JBQW9DO0FBQzVGLFFBRHdCLGVBQVUsR0FBVixVQUFVLENBQVk7QUFBQyxRQUFTLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBb0I7QUFBQyxRQWpCekYsZUFBVSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3ZELFFBR0ksVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ2xELFFBR0ksV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7QUFDaEMsUUFJSSxrQkFBYSxHQUFZLElBQUksQ0FBQztBQUNsQyxR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RUFBRSxDQUFDO0FBQzNCLElBQUksQ0FBQztBQUNMLElBQ0ksU0FBUyxDQUFDLEdBQVc7QUFDekIsUUFBUSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3BELElBQUksQ0FBQztBQUNMOytDQTFGQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLDJCQUEyQixrQkFDckM7Ozs7Ozs7Ozs2QkFBMkM7Q0FFM0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7SUFDeEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NnQkFDSTtBQUFDO0FBQTZDLFlBaEIxQyxVQUFVO0FBQUksWUFGZCxrQkFBa0I7QUFBRztBQUFHO0FBQ2xCLHFCQW9CVixLQUFLO0FBQ1IseUJBR0csTUFBTTtBQUNULG9CQUdHLE1BQU07QUFDVCxxQkFHRyxNQUFNO0FBQ1Y7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBUcmFuc2xhdGlvblNlcnZpY2UgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkNoYW5nZXMsIE91dHB1dCwgVmlld0VuY2Fwc3VsYXRpb24sIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWdTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy90YWcuc2VydmljZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBUYWdQYWdpbmcgfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcbmltcG9ydCB7IHRha2VVbnRpbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuLyoqXG4gKlxuICogVGhpcyBjb21wb25lbnQsIHByb3ZpZGUgYSBsaXN0IG9mIHRoZSB0YWdzIHJlbGF0aXZlIGEgbm9kZSB3aXRoIGFjdGlvbnMgYnV0dG9uIHRvIGFkZCBvciByZW1vdmUgbmV3IHRhZ1xuICovXG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXRhZy1ub2RlLWFjdGlvbnMtbGlzdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3RhZy1hY3Rpb25zLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi90YWctYWN0aW9ucy5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgVGFnQWN0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gICAgLyoqIFRoZSBpZGVudGlmaWVyIG9mIGEgbm9kZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIG5vZGVJZDogc3RyaW5nO1xuXG4gICAgLyoqIEVtaXR0ZWQgd2hlbiBhIHRhZyBpcyBhZGRlZCBzdWNjZXNzZnVsbHkuICovXG4gICAgQE91dHB1dCgpXG4gICAgc3VjY2Vzc0FkZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIGFuIGVycm9yIG9jY3Vycy4gKi9cbiAgICBAT3V0cHV0KClcbiAgICBlcnJvcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIGFuIGFjdGlvbiBpcyBjaG9zZW4uICovXG4gICAgQE91dHB1dCgpXG4gICAgcmVzdWx0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgbmV3VGFnTmFtZTogc3RyaW5nO1xuICAgIHRhZ3NFbnRyaWVzOiBhbnk7XG4gICAgZXJyb3JNc2c6IHN0cmluZztcbiAgICBkaXNhYmxlQWRkVGFnOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIHByaXZhdGUgb25EZXN0cm95JCA9IG5ldyBTdWJqZWN0PGJvb2xlYW4+KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRhZ1NlcnZpY2U6IFRhZ1NlcnZpY2UsIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRpb25TZXJ2aWNlKSB7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMudGFnU2VydmljZS5yZWZyZXNoXG4gICAgICAgICAgICAucGlwZSh0YWtlVW50aWwodGhpcy5vbkRlc3Ryb3kkKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKCkgPT4gdGhpcy5yZWZyZXNoVGFnKCkpO1xuICAgIH1cblxuICAgIG5nT25DaGFuZ2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWZyZXNoVGFnKCk7XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMub25EZXN0cm95JC5uZXh0KHRydWUpO1xuICAgICAgICB0aGlzLm9uRGVzdHJveSQuY29tcGxldGUoKTtcbiAgICB9XG5cbiAgICByZWZyZXNoVGFnKCkge1xuICAgICAgICBpZiAodGhpcy5ub2RlSWQpIHtcbiAgICAgICAgICAgIHRoaXMudGFnU2VydmljZS5nZXRUYWdzQnlOb2RlSWQodGhpcy5ub2RlSWQpLnN1YnNjcmliZSgodGFnUGFnaW5nOiBUYWdQYWdpbmcpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnRhZ3NFbnRyaWVzID0gdGFnUGFnaW5nLmxpc3QuZW50cmllcztcbiAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVBZGRUYWcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdC5lbWl0KHRoaXMudGFnc0VudHJpZXMpO1xuICAgICAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMudGFnc0VudHJpZXMgPSBudWxsO1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZUFkZFRhZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQuZW1pdCh0aGlzLnRhZ3NFbnRyaWVzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkVGFnKCkge1xuICAgICAgICBpZiAodGhpcy5zZWFyY2hUYWcodGhpcy5uZXdUYWdOYW1lKSkge1xuICAgICAgICAgICAgdGhpcy5lcnJvck1zZyA9IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KCdUQUcuTUVTU0FHRVMuRVhJU1QnKTtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IuZW1pdCh0aGlzLmVycm9yTXNnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudGFnU2VydmljZS5hZGRUYWcodGhpcy5ub2RlSWQsIHRoaXMubmV3VGFnTmFtZSkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLm5ld1RhZ05hbWUgPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLnN1Y2Nlc3NBZGQuZW1pdCh0aGlzLm5vZGVJZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNlYXJjaFRhZyhzZWFyY2hUYWdOYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgaWYgKHRoaXMudGFnc0VudHJpZXMpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRhZ3NFbnRyaWVzLmZpbmQoKGN1cnJlbnRUYWcpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHNlYXJjaFRhZ05hbWUgPT09IGN1cnJlbnRUYWcuZW50cnkudGFnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2xlYW5FcnJvck1zZygpIHtcbiAgICAgICAgdGhpcy5lcnJvck1zZyA9ICcnO1xuICAgIH1cblxuICAgIHJlbW92ZVRhZyh0YWc6IHN0cmluZykge1xuICAgICAgICB0aGlzLnRhZ1NlcnZpY2UucmVtb3ZlVGFnKHRoaXMubm9kZUlkLCB0YWcpO1xuICAgIH1cbn1cbiJdfQ==