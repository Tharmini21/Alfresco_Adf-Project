/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileModel, FileUploadStatus } from '@alfresco/adf-core';
import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/material/icon';
import * as ɵngcc3 from '@angular/material/list';
import * as ɵngcc4 from '@alfresco/adf-core';
import * as ɵngcc5 from '@angular/material/chips';
import * as ɵngcc6 from '../directives/toggle-icon.directive';
import * as ɵngcc7 from '@angular/material/button';
import * as ɵngcc8 from '@angular/material/tooltip';
import * as ɵngcc9 from '@ngx-translate/core';
import * as ɵngcc10 from '../pipes/file-upload-error.pipe';

function FileUploadingListRowComponent_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 11);
    ɵngcc0.ɵɵtext(1, " insert_drive_file ");
    ɵngcc0.ɵɵelementEnd();
} }
function FileUploadingListRowComponent_adf_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-icon", 12);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate1("value", "adf:", ctx_r1.mimeType, "");
} }
const _c0 = function (a0) { return { version: a0 }; };
function FileUploadingListRowComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelementStart(1, "mat-chip", 14);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", "version" + ctx_r2.versionNumber);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(2, 3, "ADF_FILE_UPLOAD.ARIA-LABEL.VERSION", ɵngcc0.ɵɵpureFunction1(6, _c0, ctx_r2.versionNumber)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.versionNumber);
} }
function FileUploadingListRowComponent_div_6_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "adfFileSize");
    ɵngcc0.ɵɵpipe(3, "adfFileSize");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r10.file.progress.loaded), " / ", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r10.file.progress.total), " ");
} }
function FileUploadingListRowComponent_div_6_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 20);
    ɵngcc0.ɵɵtext(1, " clear ");
    ɵngcc0.ɵɵelementEnd();
} }
const _c1 = function (a0) { return { file: a0 }; };
function FileUploadingListRowComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 15, 16);
    ɵngcc0.ɵɵlistener("keyup.enter", function FileUploadingListRowComponent_div_6_Template_div_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onCancel(ctx_r12.file); })("click", function FileUploadingListRowComponent_div_6_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onCancel(ctx_r14.file); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtemplate(4, FileUploadingListRowComponent_div_6_span_4_Template, 4, 6, "span", 17);
    ɵngcc0.ɵɵtemplate(5, FileUploadingListRowComponent_div_6_mat_icon_5_Template, 2, 0, "mat-icon", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r9 = ɵngcc0.ɵɵreference(1);
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 7, "ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(2, 4, "ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_FILE_UPLOAD", ɵngcc0.ɵɵpureFunction1(9, _c1, ctx_r3.file.name)));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", !_r9.isToggled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r9.isToggled);
} }
function FileUploadingListRowComponent_button_7_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 24);
    ɵngcc0.ɵɵtext(1, " check_circle ");
    ɵngcc0.ɵɵelementEnd();
} }
function FileUploadingListRowComponent_button_7_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 25);
    ɵngcc0.ɵɵtext(1, " remove_circle ");
    ɵngcc0.ɵɵelementEnd();
} }
function FileUploadingListRowComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21, 16);
    ɵngcc0.ɵɵlistener("click", function FileUploadingListRowComponent_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onRemove(ctx_r18.file); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtemplate(4, FileUploadingListRowComponent_button_7_mat_icon_4_Template, 2, 0, "mat-icon", 22);
    ɵngcc0.ɵɵtemplate(5, FileUploadingListRowComponent_button_7_mat_icon_5_Template, 2, 0, "mat-icon", 23);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r15 = ɵngcc0.ɵɵreference(1);
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 7, "ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(2, 4, "ADF_FILE_UPLOAD.ARIA-LABEL.REMOVE_FILE", ɵngcc0.ɵɵpureFunction1(9, _c1, ctx_r4.file.name)));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", !_r15.isToggled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r15.isToggled);
} }
function FileUploadingListRowComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 27);
    ɵngcc0.ɵɵtext(3, " check_circle ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 1, "ADF_FILE_UPLOAD.STATUS.FILE_DONE_STATUS"));
} }
function FileUploadingListRowComponent_button_9_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 31);
    ɵngcc0.ɵɵtext(1, " schedule ");
    ɵngcc0.ɵɵelementEnd();
} }
function FileUploadingListRowComponent_button_9_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 25);
    ɵngcc0.ɵɵtext(1, " remove_circle ");
    ɵngcc0.ɵɵelementEnd();
} }
function FileUploadingListRowComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 28, 29);
    ɵngcc0.ɵɵlistener("click", function FileUploadingListRowComponent_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.onCancel(ctx_r23.file); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtemplate(4, FileUploadingListRowComponent_button_9_mat_icon_4_Template, 2, 0, "mat-icon", 30);
    ɵngcc0.ɵɵtemplate(5, FileUploadingListRowComponent_button_9_mat_icon_5_Template, 2, 0, "mat-icon", 23);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r20 = ɵngcc0.ɵɵreference(1);
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(3, 6, "ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_FILE", ɵngcc0.ɵɵpureFunction1(9, _c1, ctx_r6.file.name)));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", !_r20.isToggled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r20.isToggled);
} }
const _c2 = function (a0) { return { error: a0 }; };
function FileUploadingListRowComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 33);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "adfFileUploadError");
    ɵngcc0.ɵɵpipe(4, "adfFileUploadError");
    ɵngcc0.ɵɵtext(5, " report_problem ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matTooltip", ɵngcc0.ɵɵpipeBind1(4, 7, ctx_r7.file.errorCode));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind2(2, 2, "ADF_FILE_UPLOAD.ARIA-LABEL.UPLOAD_FILE_ERROR", ɵngcc0.ɵɵpureFunction1(9, _c2, ɵngcc0.ɵɵpipeBind1(3, 5, ctx_r7.file.errorCode))));
} }
function FileUploadingListRowComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 34);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS"), " ");
} }
export class FileUploadingListRowComponent {
    constructor() {
        this.cancel = new EventEmitter();
        this.remove = new EventEmitter();
        this.FileUploadStatus = FileUploadStatus;
    }
    onCancel(file) {
        this.cancel.emit(file);
    }
    onRemove(file) {
        this.remove.emit(file);
    }
    showCancelledStatus() {
        return this.file.status === FileUploadStatus.Cancelled ||
            this.file.status === FileUploadStatus.Aborted ||
            this.file.status === FileUploadStatus.Deleted;
    }
    get versionNumber() {
        return this.file.data.entry.properties['cm:versionLabel'];
    }
    get mimeType() {
        if (this.file && this.file.file && this.file.file.type) {
            return this.file.file.type;
        }
        return 'default';
    }
    isUploadVersion() {
        return (!!this.file.data &&
            this.file.options &&
            this.file.options.newVersion &&
            this.file.data.entry.properties &&
            this.file.data.entry.properties['cm:versionLabel']);
    }
}
FileUploadingListRowComponent.ɵfac = function FileUploadingListRowComponent_Factory(t) { return new (t || FileUploadingListRowComponent)(); };
FileUploadingListRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FileUploadingListRowComponent, selectors: [["adf-file-uploading-list-row"]], inputs: { file: "file" }, outputs: { cancel: "cancel", remove: "remove" }, decls: 12, vars: 11, consts: [[1, "adf-file-uploading-row"], ["mat-list-icon", "", "class", "adf-file-uploading-row__type", 4, "ngIf"], [3, "value", 4, "ngIf"], ["tabindex", "0", 1, "adf-file-uploading-row__name", 3, "title"], ["class", "adf-file-uploading-row__version", "tabindex", "0", 4, "ngIf"], ["tabindex", "0", "role", "button", "adf-toggle-icon", "", "data-automation-id", "cancel-upload-progress", "class", "adf-file-uploading-row__group adf-file-uploading-row__group--toggle", 3, "title", "keyup.enter", "click", 4, "ngIf"], ["mat-icon-button", "", "adf-toggle-icon", "", "class", "adf-file-uploading-row__group", 3, "title", "click", 4, "ngIf"], ["class", "adf-file-uploading-row__file-version", "role", "status", 4, "ngIf"], ["adf-toggle-icon", "", "mat-icon-button", "", "data-automation-id", "cancel-upload-queue", "class", "adf-file-uploading-row__group", 3, "title", "click", 4, "ngIf"], ["tabindex", "0", "role", "status", "class", "adf-file-uploading-row__block adf-file-uploading-row__status--error", 4, "ngIf"], ["tabindex", "0", "role", "status", "class", "adf-file-uploading-row__block adf-file-uploading-row__status--cancelled", 4, "ngIf"], ["mat-list-icon", "", 1, "adf-file-uploading-row__type"], [3, "value"], ["tabindex", "0", 1, "adf-file-uploading-row__version"], ["color", "primary", "disabled", "", 3, "title"], ["tabindex", "0", "role", "button", "adf-toggle-icon", "", "data-automation-id", "cancel-upload-progress", 1, "adf-file-uploading-row__group", "adf-file-uploading-row__group--toggle", 3, "title", "keyup.enter", "click"], ["toggleIcon", "toggleIcon"], ["class", "adf-file-uploading-row__status", 4, "ngIf"], ["class", "adf-file-uploading-row__action adf-file-uploading-row__action--cancel", 4, "ngIf"], [1, "adf-file-uploading-row__status"], [1, "adf-file-uploading-row__action", "adf-file-uploading-row__action--cancel"], ["mat-icon-button", "", "adf-toggle-icon", "", 1, "adf-file-uploading-row__group", 3, "title", "click"], ["class", "adf-file-uploading-row__status adf-file-uploading-row__status--done", 4, "ngIf"], ["class", "adf-file-uploading-row__action adf-file-uploading-row__action--remove", 4, "ngIf"], [1, "adf-file-uploading-row__status", "adf-file-uploading-row__status--done"], [1, "adf-file-uploading-row__action", "adf-file-uploading-row__action--remove"], ["role", "status", 1, "adf-file-uploading-row__file-version"], ["mat-list-icon", "", 1, "adf-file-uploading-row__status--done"], ["adf-toggle-icon", "", "mat-icon-button", "", "data-automation-id", "cancel-upload-queue", 1, "adf-file-uploading-row__group", 3, "title", "click"], ["toggleIconCancel", "toggleIcon"], ["class", "adf-file-uploading-row__status adf-file-uploading-row__status--pending", 4, "ngIf"], [1, "adf-file-uploading-row__status", "adf-file-uploading-row__status--pending"], ["tabindex", "0", "role", "status", 1, "adf-file-uploading-row__block", "adf-file-uploading-row__status--error"], ["mat-list-icon", "", 3, "matTooltip"], ["tabindex", "0", "role", "status", 1, "adf-file-uploading-row__block", "adf-file-uploading-row__status--cancelled"]], template: function FileUploadingListRowComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, FileUploadingListRowComponent_mat_icon_1_Template, 2, 0, "mat-icon", 1);
        ɵngcc0.ɵɵtemplate(2, FileUploadingListRowComponent_adf_icon_2_Template, 1, 1, "adf-icon", 2);
        ɵngcc0.ɵɵelementStart(3, "span", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, FileUploadingListRowComponent_span_5_Template, 4, 8, "span", 4);
        ɵngcc0.ɵɵtemplate(6, FileUploadingListRowComponent_div_6_Template, 6, 11, "div", 5);
        ɵngcc0.ɵɵtemplate(7, FileUploadingListRowComponent_button_7_Template, 6, 11, "button", 6);
        ɵngcc0.ɵɵtemplate(8, FileUploadingListRowComponent_div_8_Template, 4, 3, "div", 7);
        ɵngcc0.ɵɵtemplate(9, FileUploadingListRowComponent_button_9_Template, 6, 11, "button", 8);
        ɵngcc0.ɵɵtemplate(10, FileUploadingListRowComponent_div_10_Template, 6, 11, "div", 9);
        ɵngcc0.ɵɵtemplate(11, FileUploadingListRowComponent_div_11_Template, 4, 6, "div", 10);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.mimeType === "default");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.mimeType !== "default");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.file.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.file.name, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isUploadVersion());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.file.status === ctx.FileUploadStatus.Progress || ctx.file.status === ctx.FileUploadStatus.Starting);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.file.status === ctx.FileUploadStatus.Complete && !ctx.isUploadVersion());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.file.status === ctx.FileUploadStatus.Complete && ctx.isUploadVersion());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.file.status === ctx.FileUploadStatus.Pending);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.file.status === ctx.FileUploadStatus.Error);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showCancelledStatus());
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatIcon, ɵngcc3.MatListIconCssMatStyler, ɵngcc4.IconComponent, ɵngcc5.MatChip, ɵngcc6.ToggleIconDirective, ɵngcc7.MatButton, ɵngcc8.MatTooltip], pipes: [ɵngcc9.TranslatePipe, ɵngcc4.FileSizePipe, ɵngcc10.FileUploadErrorPipe], encapsulation: 2 });
FileUploadingListRowComponent.propDecorators = {
    file: [{ type: Input }],
    cancel: [{ type: Output }],
    remove: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileUploadingListRowComponent, [{
        type: Component,
        args: [{
                selector: 'adf-file-uploading-list-row',
                template: "<div class=\"adf-file-uploading-row\">\n    <mat-icon *ngIf=\"mimeType === 'default'\" mat-list-icon class=\"adf-file-uploading-row__type\">\n        insert_drive_file\n    </mat-icon>\n\n    <adf-icon *ngIf=\"mimeType !== 'default'\" value=\"adf:{{ mimeType }}\"></adf-icon>\n\n    <span\n        tabindex=\"0\"\n        class=\"adf-file-uploading-row__name\"\n        title=\"{{ file.name }}\">\n        {{ file.name }}\n    </span>\n\n    <span *ngIf=\"isUploadVersion()\" class=\"adf-file-uploading-row__version\" tabindex=\"0\" >\n        <mat-chip color=\"primary\"\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.VERSION' | translate: { version:  versionNumber }\"\n            [title]=\"'version' + versionNumber\" disabled\n        >{{ versionNumber }}</mat-chip>\n    </span>\n\n    <div\n        tabindex=\"0\"\n        role=\"button\"\n        #toggleIcon=\"toggleIcon\"\n        adf-toggle-icon\n        (keyup.enter)=\"onCancel(file)\"\n        (click)=\"onCancel(file)\"\n        data-automation-id=\"cancel-upload-progress\"\n        *ngIf=\"file.status === FileUploadStatus.Progress || file.status === FileUploadStatus.Starting\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_FILE_UPLOAD' | translate: { file: file.name }\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\">\n\n        <span class=\"adf-file-uploading-row__status\" *ngIf=\"!toggleIcon.isToggled\">\n            {{ file.progress.loaded | adfFileSize }} / {{ file.progress.total | adfFileSize }}\n        </span>\n\n        <mat-icon *ngIf=\"toggleIcon.isToggled\"\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--cancel\">\n            clear\n        </mat-icon>\n    </div>\n\n    <button mat-icon-button\n        adf-toggle-icon\n        #toggleIcon=\"toggleIcon\"\n        *ngIf=\"file.status === FileUploadStatus.Complete && !isUploadVersion()\"\n        (click)=\"onRemove(file)\"\n        class=\"adf-file-uploading-row__group\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.REMOVE_FILE' | translate: { file: file.name }\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE' | translate }}\">\n\n        <mat-icon *ngIf=\"!toggleIcon.isToggled\"\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--done\">\n            check_circle\n        </mat-icon>\n\n        <mat-icon *ngIf=\"toggleIcon.isToggled\"\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </button>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Complete && isUploadVersion()\"\n        class=\"adf-file-uploading-row__file-version\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.STATUS.FILE_DONE_STATUS' | translate\"\n        role=\"status\"\n        >\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__status--done\">\n            check_circle\n        </mat-icon>\n    </div>\n\n    <button\n        adf-toggle-icon\n        #toggleIconCancel=\"toggleIcon\"\n        mat-icon-button\n        *ngIf=\"file.status === FileUploadStatus.Pending\"\n        (click)=\"onCancel(file)\"\n        data-automation-id=\"cancel-upload-queue\"\n        class=\"adf-file-uploading-row__group\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.CANCEL_FILE' | translate: { file: file.name }\">\n        <mat-icon\n            *ngIf=\"!toggleIconCancel.isToggled\"\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--pending\">\n            schedule\n        </mat-icon>\n\n        <mat-icon\n            *ngIf=\"toggleIconCancel.isToggled\"\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </button>\n\n    <div\n        tabindex=\"0\"\n        role=\"status\"\n        *ngIf=\"file.status === FileUploadStatus.Error\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--error\">\n        <mat-icon mat-list-icon\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.UPLOAD_FILE_ERROR' | translate: { error: file.errorCode | adfFileUploadError }\"\n            [matTooltip]=\"file.errorCode | adfFileUploadError\">\n            report_problem\n        </mat-icon>\n    </div>\n\n    <div\n        tabindex=\"0\"\n        [attr.aria-label]=\"'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate\"\n        role=\"status\"\n        *ngIf=\"showCancelledStatus()\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--cancelled\">\n        {{ 'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate }}\n    </div>\n</div>\n"
            }]
    }], function () { return []; }, { cancel: [{
            type: Output
        }], remove: [{
            type: Output
        }], file: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29udGVudC1zZXJ2aWNlcy9zcmMvbGliL3VwbG9hZC9jb21wb25lbnRzL2ZpbGUtdXBsb2FkaW5nLWxpc3Qtcm93LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU12RSxNQUFNLE9BQU8sNkJBQTZCO0FBQzFDLElBTEE7QUFDRyxRQVFDLFdBQU0sR0FBNEIsSUFBSSxZQUFZLEVBQWEsQ0FBQztBQUNwRSxRQUVJLFdBQU0sR0FBNEIsSUFBSSxZQUFZLEVBQWEsQ0FBQztBQUNwRSxRQUNJLHFCQUFnQixHQUFHLGdCQUFnQixDQUFDO0FBQ3hDLElBb0NBLENBQUM7QUFDRCxJQXBDSSxRQUFRLENBQUMsSUFBZTtBQUFJLFFBQ3hCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQy9CLElBQUksQ0FBQztBQUNMLElBQ0ksUUFBUSxDQUFDLElBQWU7QUFBSSxRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMvQixJQUFJLENBQUM7QUFDTCxJQUNJLG1CQUFtQjtBQUFLLFFBQ3BCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssZ0JBQWdCLENBQUMsU0FBUztBQUM5RCxZQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLE9BQU87QUFDekQsWUFBWSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUM7QUFDMUQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUFJLGFBQWE7QUFBSyxRQUNsQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUNsRSxJQUFJLENBQUM7QUFDTCxJQUNJLElBQUksUUFBUTtBQUFLLFFBQ2IsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtBQUNoRSxZQUFZLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ3ZDLFNBQVM7QUFDVCxRQUNRLE9BQU8sU0FBUyxDQUFDO0FBQ3pCLElBQUksQ0FBQztBQUNMLElBQ0ksZUFBZTtBQUFLLFFBQ2hCLE9BQU8sQ0FDSCxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJO0FBQzVCLFlBQVksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQzdCLFlBQVksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVTtBQUN4QyxZQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVO0FBQzNDLFlBQVksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUNyRCxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0w7eURBbkRDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsNkJBQTZCO09BQ3ZDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFBdUQsY0FDMUQ7Ozs7Ozs7Ozs7O2dTQUNJO0FBQUM7QUFDSSxtQkFBTCxLQUFLO0FBQ1IscUJBRUcsTUFBTTtBQUNULHFCQUVHLE1BQU07QUFDVjs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRmlsZU1vZGVsLCBGaWxlVXBsb2FkU3RhdHVzIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWZpbGUtdXBsb2FkaW5nLWxpc3Qtcm93JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEZpbGVVcGxvYWRpbmdMaXN0Um93Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIGZpbGU6IEZpbGVNb2RlbDtcblxuICAgIEBPdXRwdXQoKVxuICAgIGNhbmNlbDogRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4gPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4oKTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlbW92ZTogRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4gPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGVNb2RlbD4oKTtcblxuICAgIEZpbGVVcGxvYWRTdGF0dXMgPSBGaWxlVXBsb2FkU3RhdHVzO1xuXG4gICAgb25DYW5jZWwoZmlsZTogRmlsZU1vZGVsKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY2FuY2VsLmVtaXQoZmlsZSk7XG4gICAgfVxuXG4gICAgb25SZW1vdmUoZmlsZTogRmlsZU1vZGVsKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVtb3ZlLmVtaXQoZmlsZSk7XG4gICAgfVxuXG4gICAgc2hvd0NhbmNlbGxlZFN0YXR1cygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZS5zdGF0dXMgPT09IEZpbGVVcGxvYWRTdGF0dXMuQ2FuY2VsbGVkIHx8XG4gICAgICAgICAgICB0aGlzLmZpbGUuc3RhdHVzID09PSBGaWxlVXBsb2FkU3RhdHVzLkFib3J0ZWQgfHxcbiAgICAgICAgICAgIHRoaXMuZmlsZS5zdGF0dXMgPT09IEZpbGVVcGxvYWRTdGF0dXMuRGVsZXRlZDtcbiAgICB9XG5cbiAgICBnZXQgdmVyc2lvbk51bWJlcigpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlLmRhdGEuZW50cnkucHJvcGVydGllc1snY206dmVyc2lvbkxhYmVsJ107XG4gICAgfVxuXG4gICAgZ2V0IG1pbWVUeXBlKCk6IHN0cmluZyB7XG4gICAgICAgIGlmICh0aGlzLmZpbGUgJiYgdGhpcy5maWxlLmZpbGUgJiYgdGhpcy5maWxlLmZpbGUudHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmlsZS5maWxlLnR5cGU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJ2RlZmF1bHQnO1xuICAgIH1cblxuICAgIGlzVXBsb2FkVmVyc2lvbigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICEhdGhpcy5maWxlLmRhdGEgJiZcbiAgICAgICAgICAgIHRoaXMuZmlsZS5vcHRpb25zICYmXG4gICAgICAgICAgICB0aGlzLmZpbGUub3B0aW9ucy5uZXdWZXJzaW9uICYmXG4gICAgICAgICAgICB0aGlzLmZpbGUuZGF0YS5lbnRyeS5wcm9wZXJ0aWVzICYmXG4gICAgICAgICAgICB0aGlzLmZpbGUuZGF0YS5lbnRyeS5wcm9wZXJ0aWVzWydjbTp2ZXJzaW9uTGFiZWwnXVxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==