/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { SearchConfigurationService, SearchService } from '@alfresco/adf-core';
import { NodeEntry } from '@alfresco/js-api';
import { Component, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { FormControl } from '@angular/forms';
import { debounceTime } from 'rxjs/operators';
import { SearchPermissionConfigurationService } from './search-config-permission.service';
import { SearchComponent } from '../../../search/components/search.component';
import { MatSelectionList } from '@angular/material/list';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/form-field';
import * as ɵngcc2 from '@angular/material/input';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../../../search/components/search.component';
import * as ɵngcc6 from '@angular/material/icon';
import * as ɵngcc7 from '@angular/material/list';
import * as ɵngcc8 from '../user-icon-column/user-icon-column.component';
import * as ɵngcc9 from '@ngx-translate/core';

const _c0 = ["search"];
function AddPermissionPanelComponent_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 7);
    ɵngcc0.ɵɵlistener("click", function AddPermissionPanelComponent_mat_icon_3_Template_mat_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.clearSearch(); });
    ɵngcc0.ɵɵtext(1, "clear ");
    ɵngcc0.ɵɵelementEnd();
} }
function AddPermissionPanelComponent_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 8);
    ɵngcc0.ɵɵtext(1, "search ");
    ɵngcc0.ɵɵelementEnd();
} }
function AddPermissionPanelComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "PERMISSION_MANAGER.ADD-PERMISSION.TYPE-MESSAGE"));
} }
function AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r10.entry.properties["cm:authorityDisplayName"], " ");
} }
function AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_template_5_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r10.entry.properties["cm:authorityName"], " ");
} }
function AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_template_5_ng_container_0_Template, 2, 1, "ng-container", 19);
} if (rf & 2) {
    const item_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    const _r16 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵproperty("ngIf", item_r10.entry == null ? null : item_r10.entry.properties["cm:authorityName"])("ngIfElse", _r16);
} }
function AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const item_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵtextInterpolate2(" ", (item_r10.entry == null ? null : item_r10.entry.properties["cm:firstName"]) ? item_r10.entry == null ? null : item_r10.entry.properties["cm:firstName"] : "", " ", (item_r10.entry == null ? null : item_r10.entry.properties["cm:lastName"]) ? item_r10.entry == null ? null : item_r10.entry.properties["cm:lastName"] : "", " ");
} }
function AddPermissionPanelComponent_ng_template_8_mat_list_option_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-option", 16, 17);
    ɵngcc0.ɵɵelement(2, "adf-user-icon-column", 18);
    ɵngcc0.ɵɵelementStart(3, "p", 14);
    ɵngcc0.ɵɵtemplate(4, AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_container_4_Template, 2, 1, "ng-container", 19);
    ɵngcc0.ɵɵtemplate(5, AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_template_5_Template, 1, 2, "ng-template", null, 20, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(7, AddPermissionPanelComponent_ng_template_8_mat_list_option_7_ng_template_7_Template, 1, 2, "ng-template", null, 21, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r10 = ctx.$implicit;
    const idx_r11 = ctx.index;
    const _r12 = ɵngcc0.ɵɵreference(1);
    const _r14 = ɵngcc0.ɵɵreference(6);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "result_option_", idx_r11, "");
    ɵngcc0.ɵɵproperty("value", item_r10);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("node", item_r10)("selected", _r12.selected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", item_r10.entry == null ? null : item_r10.entry.properties["cm:authorityDisplayName"])("ngIfElse", _r14);
} }
function AddPermissionPanelComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-selection-list", 10);
    ɵngcc0.ɵɵlistener("keydown.control.a", function AddPermissionPanelComponent_ng_template_8_Template_mat_selection_list_keydown_control_a_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.onSelectionChange(); })("selectionChange", function AddPermissionPanelComponent_ng_template_8_Template_mat_selection_list_selectionChange_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.onSelectionChange(); });
    ɵngcc0.ɵɵelementStart(1, "mat-list-option", 11, 12);
    ɵngcc0.ɵɵelement(3, "adf-user-icon-column", 13);
    ɵngcc0.ɵɵelementStart(4, "p", 14);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, AddPermissionPanelComponent_ng_template_8_mat_list_option_7_Template, 9, 6, "mat-list-option", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const data_r7 = ctx.$implicit;
    const _r8 = ɵngcc0.ɵɵreference(2);
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r4.EVERYONE);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("node", ctx_r4.EVERYONE)("selected", _r8.selected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 5, "PERMISSION_MANAGER.ADD-PERMISSION.EVERYONE"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", data_r7 == null ? null : data_r7.list == null ? null : data_r7.list.entries);
} }
export class AddPermissionPanelComponent {
    constructor() {
        this.select = new EventEmitter();
        this.searchInput = new FormControl();
        this.searchedWord = '';
        this.debounceSearch = 200;
        this.selectedItems = [];
        this.EVERYONE = new NodeEntry({ entry: { nodeType: 'cm:authorityContainer', properties: { 'cm:authorityName': 'GROUP_EVERYONE' } } });
        this.searchInput.valueChanges
            .pipe(debounceTime(this.debounceSearch))
            .subscribe((searchValue) => {
            const selectionOptions = this.matSelectionList.selectedOptions.selected.map(option => option.value);
            this.selectedItems.push(...selectionOptions);
            this.matSelectionList.deselectAll();
            this.searchedWord = searchValue;
            if (!searchValue) {
                this.search.resetResults();
            }
        });
    }
    onSelectionChange() {
        const currentSelection = this.matSelectionList.selectedOptions.selected.map(option => option.value);
        const uniqueSelection = [...currentSelection, ...this.selectedItems]
            .reduce((uniquesElements, currentElement) => {
            const isExist = uniquesElements.find(uniqueElement => uniqueElement.entry.id === currentElement.entry.id);
            if (!isExist) {
                uniquesElements.push(currentElement);
            }
            return uniquesElements;
        }, []);
        this.select.emit(uniqueSelection);
    }
    clearSearch() {
        this.searchedWord = '';
        this.selectedItems.splice(0, this.selectedItems.length);
        this.search.resetResults();
    }
}
AddPermissionPanelComponent.ɵfac = function AddPermissionPanelComponent_Factory(t) { return new (t || AddPermissionPanelComponent)(); };
AddPermissionPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AddPermissionPanelComponent, selectors: [["adf-add-permission-panel"]], viewQuery: function AddPermissionPanelComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(MatSelectionList, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.search = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.matSelectionList = _t.first);
    } }, outputs: { select: "select" }, features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: SearchConfigurationService, useClass: SearchPermissionConfigurationService },
            SearchService
        ])], decls: 9, vars: 11, consts: [["floatPlaceholder", "never", 1, "adf-permission-search-input"], ["matInput", "", "id", "searchInput", "type", "text", 3, "formControl", "placeholder", "value"], ["class", "adf-permission-search-icon", "data-automation-id", "adf-permission-clear-input", "id", "adf-permission-clear-input", "matSuffix", "", 3, "click", 4, "ngIf"], ["class", "adf-permission-search-icon", "data-automation-id", "adf-permission-search-icon", "matSuffix", "", 4, "ngIf"], ["class", "adf-permission-start-message", "id", "adf-add-permission-type-search", 4, "ngIf"], ["id", "adf-add-permission-authority-results", 1, "adf-permission-result-list", 3, "searchTerm"], ["search", ""], ["data-automation-id", "adf-permission-clear-input", "id", "adf-permission-clear-input", "matSuffix", "", 1, "adf-permission-search-icon", 3, "click"], ["data-automation-id", "adf-permission-search-icon", "matSuffix", "", 1, "adf-permission-search-icon"], ["id", "adf-add-permission-type-search", 1, "adf-permission-start-message"], [1, "adf-permission-result-list-elements", 3, "keydown.control.a", "selectionChange"], ["id", "adf-add-permission-group-everyone", "disableRipple", "", 1, "adf-list-option-item", 3, "value"], ["eveyone", ""], ["id", "add-group-icon", 3, "node", "selected"], [1, "adf-result-name"], ["disableRipple", "", "class", "adf-list-option-item", 3, "value", "id", 4, "ngFor", "ngForOf"], ["disableRipple", "", 1, "adf-list-option-item", 3, "value", "id"], ["option", ""], [3, "node", "selected"], [4, "ngIf", "ngIfElse"], ["authorityName", ""], ["owner", ""]], template: function AddPermissionPanelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-form-field", 0);
        ɵngcc0.ɵɵelement(1, "input", 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtemplate(3, AddPermissionPanelComponent_mat_icon_3_Template, 2, 0, "mat-icon", 2);
        ɵngcc0.ɵɵtemplate(4, AddPermissionPanelComponent_mat_icon_4_Template, 2, 0, "mat-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, AddPermissionPanelComponent_div_5_Template, 4, 3, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "adf-search", 5, 6);
        ɵngcc0.ɵɵtemplate(8, AddPermissionPanelComponent_ng_template_8_Template, 8, 7, "ng-template");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(2, 9, "PERMISSION_MANAGER.ADD-PERMISSION.SEARCH"));
        ɵngcc0.ɵɵproperty("formControl", ctx.searchInput)("value", ctx.searchedWord);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.searchedWord == null ? null : ctx.searchedWord.length) > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.searchedWord == null ? null : ctx.searchedWord.length) === 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.searchedWord == null ? null : ctx.searchedWord.length) === 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("adf-permission-result-list-search", ctx.searchedWord.length === 0);
        ɵngcc0.ɵɵproperty("searchTerm", ctx.searchedWord);
    } }, directives: [ɵngcc1.MatFormField, ɵngcc2.MatInput, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective, ɵngcc4.NgIf, ɵngcc5.SearchComponent, ɵngcc6.MatIcon, ɵngcc1.MatSuffix, ɵngcc7.MatSelectionList, ɵngcc7.MatListOption, ɵngcc8.UserIconColumnComponent, ɵngcc4.NgForOf], pipes: [ɵngcc9.TranslatePipe], encapsulation: 2 });
AddPermissionPanelComponent.ctorParameters = () => [];
AddPermissionPanelComponent.propDecorators = {
    search: [{ type: ViewChild, args: ['search', { static: true },] }],
    matSelectionList: [{ type: ViewChild, args: [MatSelectionList, { static: false },] }],
    select: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AddPermissionPanelComponent, [{
        type: Component,
        args: [{
                selector: 'adf-add-permission-panel',
                template: "<mat-form-field floatPlaceholder=\"never\"\n                class=\"adf-permission-search-input\">\n    <input matInput\n           id=\"searchInput\"\n           [formControl]=\"searchInput\"\n           type=\"text\"\n           placeholder=\"{{'PERMISSION_MANAGER.ADD-PERMISSION.SEARCH' | translate}}\"\n           [value]=\"searchedWord\">\n\n    <mat-icon *ngIf=\"searchedWord?.length > 0\"\n              class=\"adf-permission-search-icon\"\n              data-automation-id=\"adf-permission-clear-input\"\n              id=\"adf-permission-clear-input\"\n              matSuffix\n              (click)=\"clearSearch()\">clear\n    </mat-icon>\n\n    <mat-icon *ngIf=\"searchedWord?.length === 0\"\n              class=\"adf-permission-search-icon\"\n              data-automation-id=\"adf-permission-search-icon\"\n              matSuffix>search\n    </mat-icon>\n</mat-form-field>\n\n<div *ngIf=\"searchedWord?.length === 0\"\n     class=\"adf-permission-start-message\"\n     id=\"adf-add-permission-type-search\">\n    <span>{{'PERMISSION_MANAGER.ADD-PERMISSION.TYPE-MESSAGE' | translate}}</span>\n</div>\n\n<adf-search #search\n            [searchTerm]=\"searchedWord\"\n            id=\"adf-add-permission-authority-results\"\n            class=\"adf-permission-result-list\"\n            [class.adf-permission-result-list-search]=\"searchedWord.length === 0\">\n    <ng-template let-data>\n        <mat-selection-list class=\"adf-permission-result-list-elements\" (keydown.control.a)=\"onSelectionChange()\"\n                            (selectionChange)=\"onSelectionChange()\">\n            <mat-list-option id=\"adf-add-permission-group-everyone\"\n                             class=\"adf-list-option-item\"\n                             #eveyone\n                             disableRipple\n                             [value]=\"EVERYONE\">\n                <adf-user-icon-column [node]=\"EVERYONE\" id=\"add-group-icon\" [selected]=\"eveyone.selected\"></adf-user-icon-column>\n                <p class=\"adf-result-name\">\n                    {{'PERMISSION_MANAGER.ADD-PERMISSION.EVERYONE' | translate}}\n                </p>\n            </mat-list-option>\n\n            <mat-list-option *ngFor=\"let item of data?.list?.entries; let idx = index\"\n                             disableRipple\n                             [value]=\"item\"\n                             class=\"adf-list-option-item\"\n                             id=\"result_option_{{idx}}\"\n                             #option>\n                <adf-user-icon-column [node]=\"item\" [selected]=\"option.selected\"></adf-user-icon-column>\n                <p class=\"adf-result-name\">\n                    <ng-container *ngIf=\"item.entry?.properties['cm:authorityDisplayName']; else authorityName\">\n                        {{item.entry.properties['cm:authorityDisplayName']}}\n                    </ng-container>\n                    <ng-template #authorityName>\n                        <ng-container *ngIf=\"item.entry?.properties['cm:authorityName']; else owner\">\n                            {{item.entry.properties['cm:authorityName']}}\n                        </ng-container>\n                    </ng-template>\n                    <ng-template #owner>\n                        {{item.entry?.properties['cm:firstName'] ? item.entry?.properties['cm:firstName'] : '' }}\n                        {{item.entry?.properties['cm:lastName'] ? item.entry?.properties['cm:lastName']: ''}}\n                    </ng-template>\n                </p>\n            </mat-list-option>\n        </mat-selection-list>\n    </ng-template>\n</adf-search>\n",
                encapsulation: ViewEncapsulation.None,
                providers: [
                    { provide: SearchConfigurationService, useClass: SearchPermissionConfigurationService },
                    SearchService
                ]
            }]
    }], function () { return []; }, { select: [{
            type: Output
        }], search: [{
            type: ViewChild,
            args: ['search', { static: true }]
        }], matSelectionList: [{
            type: ViewChild,
            args: [MatSelectionList, { static: false }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,