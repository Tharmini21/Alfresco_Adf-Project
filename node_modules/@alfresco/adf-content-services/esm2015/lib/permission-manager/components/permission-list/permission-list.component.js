/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { PermissionListService } from './permission-list.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './permission-list.service';
import * as ɵngcc2 from '@angular/material/card';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/progress-spinner';
import * as ɵngcc5 from '@angular/material/icon';
import * as ɵngcc6 from '@angular/material/slide-toggle';
import * as ɵngcc7 from '@angular/material/button';
import * as ɵngcc8 from '@angular/material/tooltip';
import * as ɵngcc9 from '../permission-container/permission-container.component';
import * as ɵngcc10 from '../pop-over.directive';
import * as ɵngcc11 from '@ngx-translate/core';

function PermissionListComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelement(1, "mat-progress-spinner", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("color", "primary")("mode", "indeterminate");
} }
function PermissionListComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 6);
    ɵngcc0.ɵɵtext(3, "error");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 7);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 1, "PERMISSION_MANAGER.ERROR.NOT-FOUND"));
} }
function PermissionListComponent_ng_container_6_button_13_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1, " keyboard_arrow_up ");
    ɵngcc0.ɵɵelementEnd();
} }
function PermissionListComponent_ng_container_6_button_13_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon");
    ɵngcc0.ɵɵtext(1, " keyboard_arrow_down ");
    ɵngcc0.ɵɵelementEnd();
} }
function PermissionListComponent_ng_container_6_button_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 23, 24);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵtemplate(3, PermissionListComponent_ng_container_6_button_13_mat_icon_3_Template, 2, 0, "mat-icon", 2);
    ɵngcc0.ɵɵtemplate(4, PermissionListComponent_ng_container_6_button_13_mat_icon_4_Template, 2, 0, "mat-icon", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r8 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(15);
    const _r4 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵproperty("adf-pop-over", _r6)("target", _r4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", _r8.open ? "Hide" : "Show", " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r8.open);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !_r8.open);
} }
function PermissionListComponent_ng_container_6_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 25);
    ɵngcc0.ɵɵelement(1, "adf-permission-container", 26);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const model_r3 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("isReadOnly", true)("node", model_r3.node)("permissions", model_r3.inheritedPermissions)("showLocation", true)("selectionMode", "none")("roles", model_r3.roles);
} }
const _c0 = function (a0) { return { count: a0 }; };
function PermissionListComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 8, 9);
    ɵngcc0.ɵɵelementStart(3, "div", 10);
    ɵngcc0.ɵɵelementStart(4, "span", 11);
    ɵngcc0.ɵɵelementStart(5, "h3", 12);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "mat-slide-toggle", 13);
    ɵngcc0.ɵɵlistener("change", function PermissionListComponent_ng_container_6_Template_mat_slide_toggle_change_9_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.permissionList.toggleInherited($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "span", 14);
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(13, PermissionListComponent_ng_container_6_button_13_Template, 5, 5, "button", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(14, PermissionListComponent_ng_container_6_ng_template_14_Template, 2, 6, "ng-template", null, 16, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementStart(16, "mat-card-content", 17);
    ɵngcc0.ɵɵelementStart(17, "section", 18);
    ɵngcc0.ɵɵelementStart(18, "h3");
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(21, "div", 19);
    ɵngcc0.ɵɵelementStart(22, "button", 20);
    ɵngcc0.ɵɵlistener("click", function PermissionListComponent_ng_container_6_Template_button_click_22_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.openAddPermissionDialog(); });
    ɵngcc0.ɵɵpipe(23, "translate");
    ɵngcc0.ɵɵelementStart(24, "mat-icon");
    ɵngcc0.ɵɵtext(25, "person_add_outline");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(26, "button", 21);
    ɵngcc0.ɵɵlistener("click", function PermissionListComponent_ng_container_6_Template_button_click_26_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.deleteSelection(); });
    ɵngcc0.ɵɵpipe(27, "translate");
    ɵngcc0.ɵɵelementStart(28, "mat-icon");
    ɵngcc0.ɵɵtext(29, "delete_outline");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(30, "adf-permission-container", 22);
    ɵngcc0.ɵɵlistener("update", function PermissionListComponent_ng_container_6_Template_adf_permission_container_update_30_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.updatePermission($event); })("delete", function PermissionListComponent_ng_container_6_Template_adf_permission_container_delete_30_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.deletePermission($event); })("updateAll", function PermissionListComponent_ng_container_6_Template_adf_permission_container_updateAll_30_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.updateAllPermission($event); })("row-select", function PermissionListComponent_ng_container_6_Template_adf_permission_container_row_select_30_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.onSelect($event.detail.selection); })("row-unselect", function PermissionListComponent_ng_container_6_Template_adf_permission_container_row_unselect_30_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.onSelect($event.detail.selection); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const model_r3 = ctx.ngIf;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(7, 12, "PERMISSION_MANAGER.LABELS.INHERITED-PERMISSIONS"), " ", ɵngcc0.ɵɵpipeBind1(8, 14, model_r3.node.permissions.isInheritanceEnabled ? "PERMISSION_MANAGER.LABELS.ON" : "PERMISSION_MANAGER.LABELS.OFF"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("checked", model_r3.node.permissions.isInheritanceEnabled);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(12, 16, "PERMISSION_MANAGER.LABELS.INHERITED-SUBTITLE", ɵngcc0.ɵɵpureFunction1(25, _c0, model_r3.inheritedPermissions.length)), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", model_r3.node.permissions.isInheritanceEnabled);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(20, 19, "PERMISSION_MANAGER.LABELS.DIRECT-PERMISSIONS"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("matTooltip", ɵngcc0.ɵɵpipeBind1(23, 21, "PERMISSION_MANAGER.ACTION.ADD-PERMISSION"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("matTooltip", ɵngcc0.ɵɵpipeBind1(27, 23, "PERMISSION_MANAGER.ACTION.DELETE"))("disabled", !(ctx_r2.selectedPermissions == null ? null : ctx_r2.selectedPermissions.length));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("node", model_r3.node)("permissions", model_r3.localPermissions)("roles", model_r3.roles);
} }
export class PermissionListComponent {
    constructor(permissionList) {
        this.permissionList = permissionList;
        this.selectedPermissions = [];
        this.error = this.permissionList.errored;
        this.update = this.permissionList.updated;
    }
    ngOnInit() {
        this.permissionList.fetchPermission(this.nodeId);
    }
    openAddPermissionDialog() {
        this.permissionList.updateNodePermissionByDialog();
    }
    onSelect(selections) {
        this.selectedPermissions = selections.map((selection) => selection['obj']).filter((permission) => !permission.readonly);
    }
    deleteSelection() {
        this.permissionList.deletePermissions(this.selectedPermissions);
        this.selectedPermissions = [];
    }
    updatePermission({ role, permission }) {
        this.permissionList.updateRole(role, permission);
    }
    deletePermission(permission) {
        this.selectedPermissions = [];
        this.permissionList.deletePermission(permission);
    }
    updateAllPermission(role) {
        this.permissionList.bulkRoleUpdate(role);
        this.selectedPermissions = [];
    }
}
PermissionListComponent.ɵfac = function PermissionListComponent_Factory(t) { return new (t || PermissionListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PermissionListService)); };
PermissionListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PermissionListComponent, selectors: [["adf-permission-list"]], inputs: { nodeId: "nodeId" }, outputs: { error: "error", update: "update" }, decls: 8, vars: 11, consts: [["id", "adf-permission-manager-card", 1, "adf-permission-card"], ["class", "adf-permission-loader", 4, "ngIf"], [4, "ngIf"], [1, "adf-permission-loader"], [3, "color", "mode"], ["id", "adf-permission-manager-error", 1, "adf-no-permission__template"], ["color", "warn"], [1, "adf-no-permission__template--text"], [1, "adf-permission-container"], ["target", ""], [1, "adf-permission-header"], [1, "adf-inherit-container"], [1, "adf-inherit-container-header"], ["data-automation-id", "adf-inherit-toggle-button", 1, "adf-inherit-toggle", 3, "checked", "change"], ["title", "total", 1, "adf-inherit-subtitle"], ["mat-button", "", "data-automation-id", "permission-info-button", 3, "adf-pop-over", "target", 4, "ngIf"], ["inheritedPermission", ""], [1, "adf-local-permission-container"], [1, "adf-permission-content-header"], [1, "adf-toolbar--spacer"], ["mat-button", "", "data-automation-id", "adf-add-permission-button", 3, "matTooltip", "click"], ["mat-button", "", "data-automation-id", "adf-delete-selected-permission", 3, "matTooltip", "disabled", "click"], ["data-automation-id", "adf-locally-set-permission", 1, "adf-permission-list", 3, "node", "permissions", "roles", "update", "delete", "updateAll", "row-select", "row-unselect"], ["mat-button", "", "data-automation-id", "permission-info-button", 3, "adf-pop-over", "target"], ["popOver", "adfPopOver"], [1, "adf-pop-over-card"], ["data-automation-id", "adf-inherited-permission", 3, "isReadOnly", "node", "permissions", "showLocation", "selectionMode", "roles"]], template: function PermissionListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card", 0);
        ɵngcc0.ɵɵtemplate(1, PermissionListComponent_div_1_Template, 2, 2, "div", 1);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵtemplate(4, PermissionListComponent_ng_container_4_Template, 7, 3, "ng-container", 2);
        ɵngcc0.ɵɵpipe(5, "async");
        ɵngcc0.ɵɵtemplate(6, PermissionListComponent_ng_container_6_Template, 31, 27, "ng-container", 2);
        ɵngcc0.ɵɵpipe(7, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(2, 3, !ɵngcc0.ɵɵpipeBind1(3, 5, ctx.permissionList.data$) && ctx.permissionList.loading$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(5, 7, ctx.permissionList.error$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(7, 9, ctx.permissionList.data$));
    } }, directives: [ɵngcc2.MatCard, ɵngcc3.NgIf, ɵngcc4.MatProgressSpinner, ɵngcc5.MatIcon, ɵngcc6.MatSlideToggle, ɵngcc2.MatCardContent, ɵngcc7.MatButton, ɵngcc8.MatTooltip, ɵngcc9.PermissionContainerComponent, ɵngcc10.PopOverDirective], pipes: [ɵngcc3.AsyncPipe, ɵngcc11.TranslatePipe], encapsulation: 2 });
PermissionListComponent.ctorParameters = () => [
    { type: PermissionListService }
];
PermissionListComponent.propDecorators = {
    nodeId: [{ type: Input }],
    update: [{ type: Output }],
    error: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PermissionListComponent, [{
        type: Component,
        args: [{
                selector: 'adf-permission-list',
                template: "<mat-card class=\"adf-permission-card\" id=\"adf-permission-manager-card\">\n    <div *ngIf=\"!(permissionList.data$ | async) && permissionList.loading$ | async\" class=\"adf-permission-loader\">\n        <mat-progress-spinner [color]=\"'primary'\"\n                              [mode]=\"'indeterminate'\">\n        </mat-progress-spinner>\n    </div>\n\n    <ng-container *ngIf=\"permissionList.error$ | async\">\n        <div class=\"adf-no-permission__template\" id=\"adf-permission-manager-error\">\n            <mat-icon color=\"warn\">error</mat-icon>\n            <p class=\"adf-no-permission__template--text\">{{ 'PERMISSION_MANAGER.ERROR.NOT-FOUND'| translate }}</p>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"permissionList.data$ | async as model\">\n        <div class=\"adf-permission-container\" #target>\n\n            <div class=\"adf-permission-header\">\n                <span class=\"adf-inherit-container\">\n                    <h3 class=\"adf-inherit-container-header\">\n                        {{'PERMISSION_MANAGER.LABELS.INHERITED-PERMISSIONS' | translate }}\n\n                        {{ (model.node.permissions.isInheritanceEnabled ? \"PERMISSION_MANAGER.LABELS.ON\" : \"PERMISSION_MANAGER.LABELS.OFF\") | translate }}\n                    </h3>\n\n                    <mat-slide-toggle\n                        class=\"adf-inherit-toggle\"\n                        data-automation-id=\"adf-inherit-toggle-button\"\n                        [checked]=\"model.node.permissions.isInheritanceEnabled\"\n                        (change)=\"permissionList.toggleInherited($event)\">\n                    </mat-slide-toggle>\n                </span>\n\n                <span class=\"adf-inherit-subtitle\" title=\"total\">\n                    {{'PERMISSION_MANAGER.LABELS.INHERITED-SUBTITLE' | translate: { count: model.inheritedPermissions.length } }}\n                </span>\n            </div>\n\n            <button\n                mat-button\n                data-automation-id=\"permission-info-button\"\n                [adf-pop-over]=\"inheritedPermission\"\n                [target]=\"target\"\n                #popOver=\"adfPopOver\"\n                *ngIf=\"model.node.permissions.isInheritanceEnabled\">\n                {{ popOver.open ? \"Hide\" : \"Show\" }}\n                <mat-icon *ngIf=\"popOver.open\"> keyboard_arrow_up </mat-icon>\n                <mat-icon *ngIf=\"!popOver.open\"> keyboard_arrow_down </mat-icon>\n            </button>\n        </div>\n\n        <ng-template #inheritedPermission>\n            <div class=\"adf-pop-over-card\">\n                <adf-permission-container\n                    data-automation-id=\"adf-inherited-permission\"\n                    [isReadOnly]=\"true\"\n                    [node]=\"model.node\"\n                    [permissions]=\"model.inheritedPermissions\"\n                    [showLocation]=\"true\"\n                    [selectionMode]=\"'none'\"\n                    [roles]=\"model.roles\">\n                </adf-permission-container>\n            </div>\n        </ng-template>\n\n        <mat-card-content class=\"adf-local-permission-container\">\n            <section class=\"adf-permission-content-header\">\n                <h3>{{'PERMISSION_MANAGER.LABELS.DIRECT-PERMISSIONS' | translate }}</h3>\n\n                <div class=\"adf-toolbar--spacer\"></div>\n\n                <button\n                    mat-button\n                    [matTooltip]=\"'PERMISSION_MANAGER.ACTION.ADD-PERMISSION' | translate\"\n                    (click)=\"openAddPermissionDialog()\"\n                    data-automation-id=\"adf-add-permission-button\">\n                    <mat-icon>person_add_outline</mat-icon>\n                </button>\n\n                <button\n                    mat-button\n                    [matTooltip]=\"'PERMISSION_MANAGER.ACTION.DELETE' | translate\"\n                    [disabled]=\"!selectedPermissions?.length\"\n                    (click)=\"deleteSelection()\"\n                    data-automation-id=\"adf-delete-selected-permission\">\n                    <mat-icon>delete_outline</mat-icon>\n                </button>\n            </section>\n\n            <adf-permission-container\n                class=\"adf-permission-list\"\n                data-automation-id=\"adf-locally-set-permission\"\n                [node]=\"model.node\"\n                [permissions]=\"model.localPermissions\"\n                (update)=\"updatePermission($event)\"\n                (delete)=\"deletePermission($event)\"\n                (updateAll)=\"updateAllPermission($event)\"\n                (row-select)=\"onSelect($any($event).detail.selection)\"\n                (row-unselect)=\"onSelect($any($event).detail.selection)\"\n                [roles]=\"model.roles\">\n            </adf-permission-container>\n\n        </mat-card-content>\n    </ng-container>\n</mat-card>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.PermissionListService }]; }, { error: [{
            type: Output
        }], update: [{
            type: Output
        }], nodeId: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbi1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvbnRlbnQtc2VydmljZXMvc3JjL2xpYi9wZXJtaXNzaW9uLW1hbmFnZXIvY29tcG9uZW50cy9wZXJtaXNzaW9uLWxpc3QvcGVybWlzc2lvbi1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBSUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT2xFLE1BQU0sT0FBTyx1QkFBdUI7QUFDcEMsSUFjSSxZQUE0QixjQUFxQztBQUNyRSxRQURnQyxtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7QUFBQyxRQUZsRSx3QkFBbUIsR0FBNkIsRUFBRSxDQUFDO0FBQ3ZELFFBRVEsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQztBQUNqRCxRQUFRLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUM7QUFDbEQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxRQUFRO0FBQUssUUFDVCxJQUFJLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDekQsSUFBSSxDQUFDO0FBQ0wsSUFDSSx1QkFBdUI7QUFDM0IsUUFBUSxJQUFJLENBQUMsY0FBYyxDQUFDLDRCQUE0QixFQUFFLENBQUM7QUFDM0QsSUFBSSxDQUFDO0FBQ0wsSUFDSSxRQUFRLENBQUMsVUFBMkI7QUFDeEMsUUFBUSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNoSSxJQUFJLENBQUM7QUFDTCxJQUNJLGVBQWU7QUFDbkIsUUFBUSxJQUFJLENBQUMsY0FBYyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3hFLFFBQVEsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztBQUN0QyxJQUFJLENBQUM7QUFDTCxJQUNJLGdCQUFnQixDQUFDLEVBQUMsSUFBSSxFQUFFLFVBQVUsRUFBQztBQUN2QyxRQUFRLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztBQUN6RCxJQUFJLENBQUM7QUFDTCxJQUNJLGdCQUFnQixDQUFDLFVBQWtDO0FBQ3ZELFFBQVEsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztBQUN0QyxRQUFRLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDekQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxtQkFBbUIsQ0FBQyxJQUFZO0FBQ3BDLFFBQVEsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDakQsUUFBUSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsRUFBRSxDQUFDO0FBQ3RDLElBQUksQ0FBQztBQUNMO21EQXZEQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHFCQUFxQixrQkFDL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1VEFHQztBQUFDO0FBQ1UsWUFSUCxxQkFBcUI7QUFBRztBQUFHO0FBRXpCLHFCQU9OLEtBQUs7QUFDUixxQkFHRyxNQUFNO0FBQ1Qsb0JBR0csTUFBTTtBQUNWOzs7OzttNENBZGtELGtCQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxjQUN4Qzs7Ozs7Ozs7O29CQVlFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBPYmplY3REYXRhUm93IH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IFBlcm1pc3Npb25FbGVtZW50IH0gZnJvbSAnQGFsZnJlc2NvL2pzLWFwaSc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBlcm1pc3Npb25EaXNwbGF5TW9kZWwgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGVybWlzc2lvbi5tb2RlbCc7XG5pbXBvcnQgeyBQZXJtaXNzaW9uTGlzdFNlcnZpY2UgfSBmcm9tICcuL3Blcm1pc3Npb24tbGlzdC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtcGVybWlzc2lvbi1saXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcGVybWlzc2lvbi1saXN0LmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFBlcm1pc3Npb25MaXN0Q29tcG9uZW50IHtcbiAgICAvKiogSUQgb2YgdGhlIG5vZGUgd2hvc2UgcGVybWlzc2lvbnMgeW91IHdhbnQgdG8gc2hvdy4gKi9cbiAgICBASW5wdXQoKVxuICAgIG5vZGVJZDogc3RyaW5nO1xuXG4gICAgLyoqIEVtaXR0ZWQgd2hlbiB0aGUgcGVybWlzc2lvbiBpcyB1cGRhdGVkLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIHVwZGF0ZTogRXZlbnRFbWl0dGVyPFBlcm1pc3Npb25FbGVtZW50PjtcblxuICAgIC8qKiBFbWl0dGVkIHdoZW4gYW4gZXJyb3Igb2NjdXJzLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGVycm9yOiBFdmVudEVtaXR0ZXI8YW55PjtcblxuICAgIHNlbGVjdGVkUGVybWlzc2lvbnM6IFBlcm1pc3Npb25EaXNwbGF5TW9kZWxbXSA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IHBlcm1pc3Npb25MaXN0OiBQZXJtaXNzaW9uTGlzdFNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5lcnJvciA9IHRoaXMucGVybWlzc2lvbkxpc3QuZXJyb3JlZDtcbiAgICAgICAgdGhpcy51cGRhdGUgPSB0aGlzLnBlcm1pc3Npb25MaXN0LnVwZGF0ZWQ7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucGVybWlzc2lvbkxpc3QuZmV0Y2hQZXJtaXNzaW9uKHRoaXMubm9kZUlkKTtcbiAgICB9XG5cbiAgICBvcGVuQWRkUGVybWlzc2lvbkRpYWxvZygpIHtcbiAgICAgICAgdGhpcy5wZXJtaXNzaW9uTGlzdC51cGRhdGVOb2RlUGVybWlzc2lvbkJ5RGlhbG9nKCk7XG4gICAgfVxuXG4gICAgb25TZWxlY3Qoc2VsZWN0aW9uczogT2JqZWN0RGF0YVJvd1tdKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRQZXJtaXNzaW9ucyA9IHNlbGVjdGlvbnMubWFwKChzZWxlY3Rpb24pID0+IHNlbGVjdGlvblsnb2JqJ10pLmZpbHRlcigocGVybWlzc2lvbikgPT4gIXBlcm1pc3Npb24ucmVhZG9ubHkpO1xuICAgIH1cblxuICAgIGRlbGV0ZVNlbGVjdGlvbigpIHtcbiAgICAgICAgdGhpcy5wZXJtaXNzaW9uTGlzdC5kZWxldGVQZXJtaXNzaW9ucyh0aGlzLnNlbGVjdGVkUGVybWlzc2lvbnMpO1xuICAgICAgICB0aGlzLnNlbGVjdGVkUGVybWlzc2lvbnMgPSBbXTtcbiAgICB9XG5cbiAgICB1cGRhdGVQZXJtaXNzaW9uKHtyb2xlLCBwZXJtaXNzaW9ufSkge1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25MaXN0LnVwZGF0ZVJvbGUocm9sZSwgcGVybWlzc2lvbik7XG4gICAgfVxuXG4gICAgZGVsZXRlUGVybWlzc2lvbihwZXJtaXNzaW9uOiBQZXJtaXNzaW9uRGlzcGxheU1vZGVsKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRQZXJtaXNzaW9ucyA9IFtdO1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25MaXN0LmRlbGV0ZVBlcm1pc3Npb24ocGVybWlzc2lvbik7XG4gICAgfVxuXG4gICAgdXBkYXRlQWxsUGVybWlzc2lvbihyb2xlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5wZXJtaXNzaW9uTGlzdC5idWxrUm9sZVVwZGF0ZShyb2xlKTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZFBlcm1pc3Npb25zID0gW107XG4gICAgfVxufVxuIl19