{"version":3,"sources":["../../../content-services/src/lib/material.module.ts","../../../../node_modules/tslib/tslib.es6.js","../../../content-services/src/lib/document-list/models/document-folder.model.ts","../../../content-services/src/lib/document-list/services/custom-resources.service.ts","../../../content-services/src/lib/document-list/models/node-action.enum.ts","../../../content-services/src/lib/document-list/services/document-list.service.ts","../../../content-services/src/lib/content-node-selector/content-node-selector.component.ts","../../../content-services/src/lib/dialogs/node-lock.dialog.ts","../../../content-services/src/lib/content-node-selector/content-node-dialog.service.ts","../../../content-services/src/lib/directives/node-lock.directive.ts","../../../content-services/src/lib/directives/node-counter.directive.ts","../../../content-services/src/lib/directives/content-directive.module.ts","../../../content-services/src/lib/social/services/rating.service.ts","../../../content-services/src/lib/social/rating.component.ts","../../../content-services/src/lib/social/like.component.ts","../../../content-services/src/lib/social/social.module.ts","../../../content-services/src/lib/tag/services/tag.service.ts","../../../content-services/src/lib/tag/tag-actions.component.ts","../../../content-services/src/lib/tag/tag-list.component.ts","../../../content-services/src/lib/tag/tag-node-list.component.ts","../../../content-services/src/lib/tag/tag.module.ts","../../../content-services/src/lib/webscript/webscript.component.ts","../../../content-services/src/lib/webscript/webscript.module.ts","../../../content-services/src/lib/document-list/data/share-data-row.model.ts","../../../content-services/src/lib/document-list/models/content-action.model.ts","../../../content-services/src/lib/document-list/data/share-datatable-adapter.ts","../../../content-services/src/lib/document-list/models/preset.model.ts","../../../content-services/src/lib/document-list/components/node.event.ts","../../../content-services/src/lib/document-list/components/document-list.component.ts","../../../content-services/src/lib/document-list/models/permissions.model.ts","../../../content-services/src/lib/document-list/services/node-actions.service.ts","../../../content-services/src/lib/document-list/services/document-actions.service.ts","../../../content-services/src/lib/document-list/services/folder-actions.service.ts","../../../content-services/src/lib/document-list/components/content-action/content-action-list.component.ts","../../../content-services/src/lib/document-list/components/content-action/content-action.component.ts","../../../content-services/src/lib/document-list/components/library-name-column/library-name-column.component.ts","../../../content-services/src/lib/document-list/components/library-role-column/library-role-column.component.ts","../../../content-services/src/lib/document-list/components/library-status-column/library-status-column.component.ts","../../../content-services/src/lib/document-list/components/name-column/name-column.component.ts","../../../content-services/src/lib/search/search-query-service.token.ts","../../../content-services/src/lib/search/services/base-query-builder.service.ts","../../../content-services/src/lib/search/services/search-header-query-builder.service.ts","../../../content-services/src/lib/document-list/components/filter-header/filter-header.component.ts","../../../content-services/src/lib/document-list/components/trashcan-name-column/trashcan-name-column.component.ts","../../../content-services/src/lib/document-list/models/document-library.model.ts","../../../content-services/src/lib/document-list/models/permissions-style.model.ts","../../../content-services/src/lib/upload/components/file-uploading-dialog.component.ts","../../../content-services/src/lib/upload/components/file-uploading-list-row.component.ts","../../../content-services/src/lib/upload/components/file-uploading-list.component.ts","../../../content-services/src/lib/upload/components/upload-files.event.ts","../../../content-services/src/lib/upload/components/base-upload/upload-base.ts","../../../content-services/src/lib/upload/components/upload-button.component.ts","../../../content-services/src/lib/upload/components/upload-version-button.component.ts","../../../content-services/src/lib/upload/components/upload-drag-area.component.ts","../../../content-services/src/lib/upload/pipes/file-upload-error.pipe.ts","../../../content-services/src/lib/upload/directives/file-draggable.directive.ts","../../../content-services/src/lib/upload/directives/toggle-icon.directive.ts","../../../content-services/src/lib/upload/upload.module.ts","../../../content-services/src/lib/search/components/empty-search-result.component.ts","../../../content-services/src/lib/search/components/search-control.component.ts","../../../content-services/src/lib/search/components/search.component.ts","../../../content-services/src/lib/search/components/search-text/search-text.component.ts","../../../content-services/src/lib/search/models/search-filter-list.model.ts","../../../content-services/src/lib/search/components/search-radio/search-radio.component.ts","../../../content-services/src/lib/search/components/search-slider/search-slider.component.ts","../../../content-services/src/lib/search/forms/live-error-state-matcher.ts","../../../content-services/src/lib/search/components/search-number-range/search-number-range.component.ts","../../../content-services/src/lib/search/components/search-check-list/search-check-list.component.ts","../../../content-services/src/lib/search/components/search-date-range/search-date-range.component.ts","../../../content-services/src/lib/search/components/search-datetime-range/search-datetime-range.component.ts","../../../content-services/src/lib/search/services/search-filter.service.ts","../../../content-services/src/lib/search/components/search-widget-container/search-widget-container.component.ts","../../../content-services/src/lib/search/services/search-query-builder.service.ts","../../../content-services/src/lib/search/services/search-facet-filters.service.ts","../../../content-services/src/lib/search/components/search-filter/search-filter.component.ts","../../../content-services/src/lib/search/components/search-chip-list/search-chip-list.component.ts","../../../content-services/src/lib/content-node-selector/content-node-selector-panel.service.ts","../../../content-services/src/lib/search/components/search-panel/search-panel.component.ts","../../../content-services/src/lib/search/components/search-sorting-picker/search-sorting-picker.component.ts","../../../content-services/src/lib/search/components/search-filter-container/search-filter-container.component.ts","../../../content-services/src/lib/search/components/search-form/search-form.component.ts","../../../content-services/src/lib/search/components/search-filter-chips/search-filter-chips.component.ts","../../../content-services/src/lib/search/components/search-filter-chips/search-filter-menu-card/search-filter-menu-card.component.ts","../../../content-services/src/lib/search/components/search-facet-field/search-facet-field.component.ts","../../../content-services/src/lib/search/components/search-filter-chips/search-widget-chip/search-widget-chip.component.ts","../../../content-services/src/lib/search/components/search-filter-chips/search-facet-chip/search-facet-chip.component.ts","../../../content-services/src/lib/search/components/reset-search.directive.ts","../../../content-services/src/lib/search/search.module.ts","../../../content-services/src/lib/site-dropdown/sites-dropdown.component.ts","../../../content-services/src/lib/document-list/document-list.module.ts","../../../content-services/src/lib/site-dropdown/sites-dropdown.module.ts","../../../content-services/src/lib/breadcrumb/breadcrumb.component.ts","../../../content-services/src/lib/breadcrumb/dropdown-breadcrumb.component.ts","../../../content-services/src/lib/breadcrumb/breadcrumb.module.ts","../../../content-services/src/lib/dialogs/confirm.dialog.ts","../../../content-services/src/lib/version-manager/version-list.component.ts","../../../content-services/src/lib/version-manager/version-manager.component.ts","../../../content-services/src/lib/version-manager/version-upload.component.ts","../../../content-services/src/lib/version-manager/version-comparison.component.ts","../../../content-services/src/lib/version-manager/version-manager.module.ts","../../../content-services/src/lib/content-node-selector/name-location-cell/name-location-cell.component.ts","../../../content-services/src/lib/content-node-selector/content-node-selector-panel.component.ts","../../../content-services/src/lib/content-node-selector/content-node-selector.module.ts","../../../content-services/src/lib/dialogs/folder-name.validators.ts","../../../content-services/src/lib/dialogs/folder.dialog.ts","../../../content-services/src/lib/dialogs/library/library.dialog.ts","../../../content-services/src/lib/dialogs/dialog.module.ts","../../../content-services/src/lib/folder-directive/folder-create.directive.ts","../../../content-services/src/lib/folder-directive/folder-edit.directive.ts","../../../content-services/src/lib/folder-directive/folder-directive.module.ts","../../../content-services/src/lib/content-metadata/services/basic-properties.service.ts","../../../content-services/src/lib/content-metadata/services/property-groups-translator.service.ts","../../../content-services/src/lib/content-metadata/services/config/property-group-reader.ts","../../../content-services/src/lib/content-metadata/services/config/aspect-oriented-config.service.ts","../../../content-services/src/lib/content-metadata/services/config/indifferent-config.service.ts","../../../content-services/src/lib/content-metadata/services/config/layout-oriented-config.service.ts","../../../content-services/src/lib/content-metadata/services/config/content-metadata-config.factory.ts","../../../content-services/src/lib/content-metadata/services/property-descriptors.service.ts","../../../content-services/src/lib/content-type/content-type.service.ts","../../../content-services/src/lib/content-type/content-type-dialog.component.ts","../../../content-services/src/lib/content-metadata/services/content-type-property.service.ts","../../../content-services/src/lib/content-metadata/services/content-metadata.service.ts","../../../content-services/src/lib/content-metadata/components/content-metadata/content-metadata.component.ts","../../../content-services/src/lib/aspect-list/aspect-list-dialog.component.ts","../../../content-services/src/lib/aspect-list/aspect-list.service.ts","../../../content-services/src/lib/aspect-list/node-aspect.service.ts","../../../content-services/src/lib/content-metadata/components/content-metadata-card/content-metadata-card.component.ts","../../../content-services/src/lib/content-metadata/content-metadata.module.ts","../../../content-services/src/lib/permission-manager/models/permission.model.ts","../../../content-services/src/lib/permission-manager/services/node-permission.service.ts","../../../content-services/src/lib/permission-manager/models/member.model.ts","../../../content-services/src/lib/permission-manager/components/add-permission/add-permission-dialog.component.ts","../../../content-services/src/lib/permission-manager/services/node-permission-dialog.service.ts","../../../content-services/src/lib/permission-manager/components/permission-list/permission-list.service.ts","../../../content-services/src/lib/permission-manager/components/permission-list/permission-list.component.ts","../../../content-services/src/lib/permission-manager/components/inherited-button.directive.ts","../../../content-services/src/lib/permission-manager/components/add-permission/search-config-permission.service.ts","../../../content-services/src/lib/permission-manager/components/add-permission/add-permission-panel.component.ts","../../../content-services/src/lib/permission-manager/components/add-permission/add-permission.component.ts","../../../content-services/src/lib/permission-manager/components/user-icon-column/user-icon-column.component.ts","../../../content-services/src/lib/permission-manager/components/user-name-column/user-name-column.component.ts","../../../content-services/src/lib/permission-manager/components/user-role-column/user-role-column.component.ts","../../../content-services/src/lib/permission-manager/components/node-path-column/node-path-column.component.ts","../../../content-services/src/lib/permission-manager/components/permission-container/permission-container.component.ts","../../../content-services/src/lib/permission-manager/components/pop-over.directive.ts","../../../content-services/src/lib/permission-manager/permission-manager.module.ts","../../../content-services/src/lib/content-node-share/content-node-share.dialog.ts","../../../content-services/src/lib/content-node-share/content-node-share.directive.ts","../../../content-services/src/lib/content-node-share/content-node-share.module.ts","../../../content-services/src/lib/tree-view/models/tree-view.model.ts","../../../content-services/src/lib/tree-view/services/tree-view.service.ts","../../../content-services/src/lib/tree-view/data/tree-view-datasource.ts","../../../content-services/src/lib/tree-view/components/tree-view.component.ts","../../../content-services/src/lib/tree-view/tree-view.module.ts","../../../content-services/src/lib/group/services/group.service.ts","../../../content-services/src/lib/aspect-list/aspect-list.component.ts","../../../content-services/src/lib/aspect-list/aspect-list.module.ts","../../../content-services/src/lib/content-type/content-type.module.ts","../../../content-services/src/lib/content.module.ts"],"names":["NgModule","args","imports","MatButtonModule","MatChipsModule","MatDialogModule","MatIconModule","MatCardModule","MatInputModule","MatListModule","MatProgressSpinnerModule","MatProgressBarModule","MatRippleModule","MatMenuModule","MatOptionModule","MatExpansionModule","MatSelectModule","MatCheckboxModule","MatDatepickerModule","MatSlideToggleModule","MatRadioModule","MatSliderModule","MatTreeModule","MatBadgeModule","exports","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","__values","o","s","m","i","__read","r","ar","error","__spread","arguments","concat","DocumentLoaderNode","currentNode","children","CustomResourcesService","apiService","logService","CREATE_PERMISSION","defineProperty","getInstance","_peopleApi","PeopleApi","api","_sitesApi","SitesApi","_searchApi","SearchApi","_favoritesApi","FavoritesApi","_sharedLinksApi","SharedlinksApi","_trashcanApi","TrashcanApi","_nodesApi","NodesApi","getRecentFiles","personId","pagination","filters","_this","defaultFilter","Observable","observer","peopleApi","getPerson","person","username","entry","id","filterQueries","query","join","SearchRequest","language","include","sort","type","field","ascending","paging","maxItems","skipCount","searchApi","search","searchResult","complete","err","pipe","catchError","handleError","loadFavorites","includeFields","where","includeFieldsRequest","getIncludesFields","defaultPredicate","options","favoritesApi","listFavorites","page","list","entries","map","_a","target","file","folder","properties","assign","cm:title","title","cm:description","description","loadMemberSites","sitesApi","listSiteMembershipsForPerson","SiteMemberPaging","site","allowableOperations","name","loadSites","listSites","loadTrashcan","from","trashcanApi","listDeletedNodes","loadSharedLinks","sharedLinksApi","listSharedLinks","isCustomSource","folderId","isCustomSources","indexOf","isSupportedSource","isSupportedSources","loadFolderByNodeId","nodeId","getCorrespondingNodeIds","node","getIdFromEntry","nodesApi","getNode","of","guid","targetGuid","hasCorrespondingNodeIds","filter","element","index","array","throwError","Injectable","providedIn","AlfrescoApiService","LogService","NodeAction","DocumentListService","contentService","customResourcesService","deleteNode","nodes","copyNode","targetParentId","moveNode","getFolder","opts","rootNodeId","ROOT_ID","rootFolderId","params","includeSource","relativePath","orderBy","getNodeChildren","getFolderNode","isCustomSourceService","retrieveDocumentNode","forkJoin","results","ContentService","ContentNodeSelectorComponent","translation","notificationService","uploadService","dialog","data","showingSearch","hasAllowableOperations","isLoading","selectedTabIndex","uploadStarted","emptyFolderImageUrl","action","actionName","CHOOSE","buttonActionName","currentDirectoryId","currentFolderId","ngOnInit","keydownEvents","subscribe","event","keyCode","preventDefault","stopImmediatePropagation","close","backdropClick","fileUploadStarting","onSelect","nodeList","chosenNode","onSiteChange","siteTitle","updateTitle","onNavigationChange","pathElement","onClick","select","getTitleTranslation","instant","getSelectedCount","isCounterVisible","ATTACH","isMultipleSelection","selectionMode","onError","showError","isChooseButtonDisabled","isUploading","hasNodeSelected","onShowingSearch","onCurrentFolder","currentFolder","AllowableOperationsEnum","CREATE","breadcrumbFolderNode","isNotAllowedToUpload","onFolderLoaded","onTabSelectionChange","tabIndex","isFileServerTabSelected","isLocalUploadTabSelected","isUploadEnabled","canPerformLocalUpload","showLocalUploadButton","getWarningMessage","hasNoPermissionToUpload","hasUploadError","Component","selector","template","encapsulation","ViewEncapsulation","None","TranslationService","NotificationService","UploadService","MatDialogRef","Inject","MAT_DIALOG_DATA","NodeLockDialogComponent","formBuilder","alfrescoApi","nodeName","form","group","isLocked","allowOwner","isTimeLock","time","moment","duration","diff","asSeconds","NodeBodyLock","timeToExpire","lockTimeInSeconds","lifetime","toggleLock","lockNode","nodeBodyLock","unlockNode","submit","catch","FormBuilder","Optional","ContentNodeDialogService","documentListService","siteService","thumbnailService","EventEmitter","openFileBrowseDialogByFolderId","folderNodeId","switchMap","nodeEntry","openUploadFileDialog","openLockNodeDialog","contentEntry","observable","Subject","LOCK","open","emit","width","openFileBrowseDialogBySite","getSites","response","openFileBrowseDialogByDefaultLocation","openFolderBrowseDialogBySite","openFolderBrowseDialogByFolderId","openUploadFolderDialog","openCopyMoveDialog","permission","excludeSiteContent","select_1","parentId","imageResolver","bind","isSelectionValid","isCopyMoveSelectionValid","nonDocumentSiteContent","openContentNodeDialog","afterClosed","errors","Error","JSON","stringify","statusCode","toUpperCase","hasAllowableOperationsOnNodeFolder","showFilesInResult","isFile","panelClass","disableClose","row","isNodeFolder","getMimeTypeIcon","isFolder","hasEntityCreatePermission","isSite","nodeType","MatDialog","SitesService","ThumbnailService","Output","NodeLockDirective","renderer","contentNodeDialogService","stopPropagation","ngAfterViewInit","setProperty","nativeElement","Directive","ElementRef","Renderer2","Input","HostListener","NodeCounterDirective","resolver","viewContainerRef","componentFactory","resolveComponentFactory","NodeCounterComponent","componentRef","createComponent","instance","counter","ngOnChanges","ComponentFactoryResolver","ViewContainerRef","CommonModule","MaterialModule","TranslateModule","declarations","RatingService","getRating","ratingType","core","ratingsApi","postRating","vote","ratingBody","RatingBody","myRating","rate","deleteRating","removeRating","RatingComponent","ratingService","average","ratingsCounter","changeVote","stars","onDestroy$","takeUntil","ratingEntry","refreshRating","ngOnDestroy","calculateStars","roundedAverage","Math","round","fill","updateVote","ratingValue","unRateItem","rateItem","Number","parseFloat","aggregate","numberOfRatings","LikeComponent","likesCounter","isLike","clean","ratedAt","likeClick","TagService","refresh","getTagsByNodeId","tagsApi","getNodeTags","getAllTheTags","getTags","addTag","tagName","tagBody","TagBody","tag","observableAdd","tagEntry","removeTag","observableRemove","TagActionsComponent","tagService","translateService","successAdd","disableAddTag","refreshTag","tagPaging","tagsEntries","searchTag","newTagName","errorMsg","searchTagName","find","currentTag","cleanErrorMsg","TagListComponent","size","isSizeMinimum","defaultPagination","hasMoreItems","tags","loadMoreTags","count","loadLessTags","slice","TagNodeListComponent","showDelete","FormsModule","ReactiveFormsModule","CoreModule","WebscriptComponent","showData","contextRoot","servicePath","contentType","success","undefined","webScript","executeWebScript","scriptPath","scriptArgs","webScriptData","showDataAsDataTable","log","schema","ObjectDataTableAdapter","generateSchema","isDataTableContent","ShareDataRow","obj","permissionsStyle","allowDropFiles","cache","isSelected","cssClass","ERR_OBJECT_NOT_FOUND","isDropTarget","checkNodeTypeAndPermissions","getPermissionClass","getId","isFolderAndHasPermissionToUpload","isFileAndHasParentFolderPermissionToUpload","nodeEntity","permissionsClasses","forEach","currentPermissionsStyle","applyPermissionStyleToFolder","applyPermissionStyleToFile","css","cacheValue","key","getValue","ObjectUtils","imageErrorResolver","content","mimeType","hasValue","ContentActionTarget","ShareDataTableAdapter","sorting","sortingMode","ERR_ROW_NOT_FOUND","ERR_COL_NOT_FOUND","thumbnails","rows","columns","_sortingMode","newValue","toLowerCase","getRows","setRows","getColumns","setColumns","col","dataRow","resolved","getFolderIcon","getDocumentThumbnailUrl","getDefaultMimeTypeIcon","getSorting","setSorting","sortRows","direction","DataSorting","setFilter","setImageResolver","isSmartFolder","isRuleFolder","isALinkFolder","nodeAspects","getNodeAspectNames","aspectNames","includes","numeric","a","left","Date","valueOf","toString","right","localeCompare","loadPage","nodePaging","merge","shareDataRows","nodeEntries","item","sortable","c","listPrunedDuplicate","elementToFilter","currentRow","getSelectedRows","getRowByNodeId","presetsDefaultModel","-trashcan-","srTitle","format","-sites-","-mysites-","-favorites-","-recent-","-sharedlinks-","default","disableWithNoPermission","disabled","visible","icon","handler","execute","DocumentActionModel","json","_super","ContentActionModel","FolderActionModel","NodeEntityEvent","BaseEvent","NodeEntryEvent","DocumentListComponent","ngZone","elementRef","appConfig","userPreferencesService","alfrescoApiService","lockService","DEFAULT_PAGINATION","Pagination","totalItems","DEFAULT_SORTING","display","DisplayMode","List","locationFormat","navigate","showHeader","ShowHeaderMode","Data","navigationMode","DOUBLE_CLICK_NAVIGATION","multiselect","contentActions","contentActionsPosition","contextMenuActions","additionalSorting","loading","_rowFilter","stickyHeader","headerFilters","preselectNodes","nodeClick","nodeDblClick","folderChange","preview","ready","nodeSelected","filterSelection","actions","contextActionHandler","noPermission","selection","$folderNode","allowFiltering","preselectedRows","_pagination","BehaviorSubject","sortingSubject","layoutPresets","rowMenuCache","UserPreferenceValues","PaginationSize","pagSize","rowFilter","reload","getContextActions","getNodeActions","currentAction","model","subject","columnList","getDefaultSorting","defaultSorting","isArray","_c","getLayoutPreset","ObjectDataColumn","isMobile","test","navigator","userAgent","isEmpty","loadLayoutPresets","val","contextActionCallback","enforceSingleClickNavigationForMobile","ngAfterContentInit","changes","setTableSchema","hasCustomLayout","setupDefaultColumns","resetSelection","buildOrderByArray","firstChange","currentValue","_d","_b","previousValue","loadFolder","preserveExistingSelection","onPreselectNodes","onDataReady","run","reloadWithoutResettingSelection","syncPagination","executeContentAction","target_1","refreshAction","actionsByTarget","isActionDisabled","isActionVisible","onShowContextMenu","navigateTo","resetNewFolderPagination","canNavigateFolder","getNodeFolderDestinationId","isLinkFolder","updateCustomSourceData","handlerSub","setLoadingState","clearTimeout","loadingTimeout","setTimeout","documentNode","folderNode","onPageLoaded","dataTable","onSortingChanged","detail","sortingKey","currentKey","currentDirection","preset","onPreviewFile","onNodeClick","domEvent","CustomEvent","sender","bubbles","dispatchEvent","defaultPrevented","SINGLE_CLICK_NAVIGATION","executeActionClick","onNodeDblClick","onNodeSelect","onNodeUnselect","onShowRowContextMenu","onShowRowActionsMenu","onExecuteRowAction","externalSettings","get","updatePagination","requestPaginationModel","onFilterSelectionChange","activeFilters","message","parse","getPreselectedNodesBasedOnSelectionMode","hasPreselectedNodes","isSingleSelectionMode","getPreselectedRowsBasedOnSelectionMode","hasPreselectedRows","getSelectionBasedOnSelectionMode","preselectRowsOfPreselectedNodes","selectedNodes","preselectedRows_1","preselectedRows_1_1","selectRow","isMultipleSelectionMode","_e","rowOfSelection","preselectedNode","rowOfPreselectedNode","unselectRowFromNodeId","rowToUnselect","host","class","NgZone","AppConfigService","UserPreferencesService","LockService","ContentChild","DataColumnListComponent","CustomLoadingContentTemplateDirective","CustomNoPermissionTemplateDirective","CustomEmptyContentTemplateDirective","ViewChild","static","NodeActionsService","contentDialogService","dialogRef","downloadService","downloadNode","NodeDownloadDirective","copyContent","doFileOperation","COPY","copyFolder","moveContent","MOVE","moveFolder","selections","DownloadService","DocumentActionsService","nodeActionsService","permissionEvent","handlers","setupActionHandlers","getHandler","lKey","setHandler","canExecuteAction","_target","actionObservable","prepareHandlers","fileOperationMessage","handlerObservable","PermissionModel","FolderActionsService","ContentActionListComponent","documentList","registerAction","unregisterAction","idx","splice","ContentActionComponent","documentActions","folderActions","All","subscriptions","folderActionModel","generateAction","Folder","documentActionModel","Document","subscription","unsubscribe","unregister","register","getSystemHandler","providers","LibraryNameColumnComponent","displayTooltip$","displayText$","updateValue","nodeUpdated","context","makeLibraryTitle","makeLibraryTooltip","library","isDuplicate","some","changeDetection","ChangeDetectionStrategy","OnPush","LibraryRoleColumnComponent","role","Site","RoleEnum","SiteManager","SiteCollaborator","SiteContributor","SiteConsumer","LibraryStatusColumnComponent","visibility","VisibilityEnum","PUBLIC","PRIVATE","MODERATED","NameColumnComponent","displayText","SEARCH_QUERY_SERVICE_TOKEN","InjectionToken","BaseQueryBuilderService","configUpdated","updated","executed","searchForms","ReplaySubject","categories","queryFragments","sortingOptions","_userQuery","userFacetBuckets","config","ranges","resetToDefaults","trim","currentConfig","getDefaultConfiguration","resetSearchOptions","getSearchFormDetails","setUpSearchConfiguration","configurations","loadConfiguration","selectedConfiguration","configuration","updateSelectedConfiguration","update","scope","selected","currentConfiguration","category","enabled","defaults","addUserFacetBucket","bucket","buckets","facetBucket","getUserFacetBuckets","removeUserFacetBucket","addFilterQuery","filterQuery","removeFilterQuery","getFacetQuery","hasFacetQueries","facetQueries","queries","getFacetField","facetFields","fields","getSupportedLabel","setScope","getScope","queryBody","buildQuery","resultSetPaging","error_1","promise","getFinalQuery","facetIntervals","highlight","getPrimarySorting","getSortingOptions","getQueryGroup","intervals","def","RequestSortDefinitionInner","hasFacetIntervals","interval","sets","set","start","end","startInclusive","endInclusive","hasFacetHighlight","facet","customQuery","userQuery","keys","subQuery","facets","mincount","limit","offset","prefix","configLabel","SearchHeaderQueryBuilderService","nodeApiService","customSources","isFilterServiceActive","setupCurrentPagination","setActiveFilter","columnActivated","filterValue","selectedFilter","activeFilter","resetActiveFilters","getActiveFilters","isNoFilterActive","removeActiveFilter","columnRemoved","filterIndex","dataSorting","columnSorting","fieldValue","getSortingFieldFromColumnName","optionAscending","toLocaleLowerCase","currentSort","columnName","sortOption","option","getCategoryForColumn","columnKey","foundCategory","setCurrentRootFolderId","isCustomSourceNode","currentNodeId","getNodeIdForCustomSource","customSourceId","NodesApiService","FilterHeaderComponent","searchFilterQueryBuilder","newNodePaging","initDataPagination","initDataSorting","resetFilterHeader","configureSearchParent","newPagination","initSearchHeader","provide","useClass","decorators","TrashcanNameColumnComponent","isLibrary","displayTooltip","FileUploadingDialogComponent","changeDetector","position","alwaysVisible","filesUploadingList","isDialogActive","totalCompleted","totalErrors","isDialogMinimized","isConfirmation","dialogActive","delay","querySelector","focus","listSubscription","queueChanged","fileList","counterSubscription","fileUploadComplete","fileUploadDeleted","totalComplete","detectChanges","errorSubscription","fileUploadError","totalError","fileUploadSubscription","fileUpload","fileDeleted","objId","uploadedFile","status","FileUploadStatus","Cancelled","textOrientation","toggleConfirmation","cancelAllUploads","uploadList","cancelAllFiles","toggleMinimized","clearQueue","canShowDialog","canShowCancelAll","hasUploadInProgress","canCloseDialog","isUploadCompleted","isUploadCancelled","ChangeDetectorRef","HostBinding","FileUploadingListRowComponent","cancel","remove","onCancel","onRemove","showCancelledStatus","Aborted","Deleted","isUploadVersion","newVersion","FileUploadingListComponent","files","cancelFile","Pending","cancelUpload","removeFile","notifyError","cancelNodeVersionInstances","deletedFiles","isUploadingFile","Complete","Boolean","Starting","Progress","every","permanent","_i","messageError","fileName","total","TemplateRef","UploadFilesEvent","successEmitter","errorEmitter","isDefaultPrevented","pauseUpload","resumeUpload","addToQueue","uploadFilesInTheQueue","UploadBase","translationService","acceptedFilesType","versioning","majorVersion","beginUpload","updateFileVersion","uploadFiles","filteredFiles","createFileModel","webkitRelativePath","replace","uploadQueue","uploadFilesInfo","fileInfo","relativeFolder","isFileAcceptable","isFileSizeAcceptable","split","ext","extension","path","FileModel","comment","isFileSizeAllowed","isMaxFileSizeDefined","isFileSizeCorrect","maxFilesSize","acceptableSize","UploadButtonComponent","uploadFolders","multipleFiles","tooltip","permissionValue","checkPermission","isButtonDisabled","onFilesAdded","$event","FileUtils","toFileArray","currentTarget","onClickUploadButton","onDirectoryAdded","res","nodeHasPermission","viewProviders","EXTENDIBLE_COMPONENT","useExisting","forwardRef","UploadVersionButtonComponent","fileModel","UPDATE","UploadDragAreaComponent","onFilesDropped","onFolderEntityDropped","isDirectory","flatten","filesInfo","showUndoNotificationBar","latestFilesAdded","messageTranslate","actionTranslate","openSnackMessageAction","onAction","isDroppable","onUploadFiles","isTargetNodeFolder","destinationFolderName_1","FileUploadErrorPipe","transform","errorCode","Pipe","pure","FileDraggableDirective","el","filesDropped","folderEntityDropped","cssClassName","runOutsideAngular","addEventListener","onDragEnter","onDragOver","onDragLeave","onDropFiles","removeEventListener","items","dataTransfer","webkitGetAsEntry","getAsFile","classList","dropEffect","add","ToggleIconDirective","isFocus","toggle","onMouseEnter","onMouseLeave","onFocus","onBlur","exportAs","A11yModule","SearchControlComponent","authService","inputType","liveSearchEnabled","autocomplete","expandable","liveSearchMaxResults","searchChange","optionClicked","focusSubject","noSearchResultTemplate","searchTerm","isNoSearchTemplatePresent","emptySearchTemplate","isLoggedIn","isEcmLoggedIn","inputChange","getMimeType","elementClicked","FocusEvent","getNextElementSibling","isListElement","onSelectFirstResult","listResultElement","first","_getHostElement","onRowArrowDown","nextElement","onRowArrowUp","previousElement","getPreviousElementSibling","onReset","searchAutocomplete","resetResults","relatedTarget","className","nextElementSibling","previousElementSibling","AuthenticationService","ViewChildren","MatListItem","EmptySearchResultComponent","SearchComponent","searchService","_elementRef","displayWith","maxResults","skipResults","resultLoaded","showPanel","_isOpen","keyPressedStream","_classList","debounceTime","searchedWord","loadSearchResults","dataLoaded","onSearchDataLoaded","onSearchDataError","setVisibility","cleanResults","isOpen","hidePanel","preserveWhitespaces","SearchService","SearchTextComponent","isActive","enableChangeUpdate","displayValue$","settings","pattern","match","RegExp","exec","allowUpdateOnChange","startValue","setValue","clear","updateQuery","reset","onChangedHandler","getSearchPrefix","getSearchSuffix","submitValues","hasValidValue","getCurrentValue","searchPrefix","searchSuffix","SearchFilterList","pageSize","filteredItems","_filterText","currentPageSize","_filter","applyFilter","showMoreItems","canShowMoreItems","showLessItems","canShowLessItems","filterText","addItem","deleteItem","removeIndex","pointer","visibleItems","SearchRadioComponent","initialValue","getSelectedValue","updateDisplayValue","opt","selectOptions","changeHandler","SearchSliderComponent","thumbLabel","min","max","unit","LiveErrorStateMatcher","isErrorState","control","isSubmitted","submitted","invalid","dirty","touched","pristine","SearchNumberRangeComponent","matcher","validators","Validators","compose","required","FormControl","to","FormGroup","formValidator","formGroup","parseInt","mismatch","isValid","Map","formatString","str","expr","valid","SearchCheckListComponent","operator","clearOptions","checked","displayValue","checkedValues","getCheckedValues","MOMENT_DATE_FORMATS","SearchDateRangeComponent","dateAdapter","getFromValidationMessage","hasError","hasParseError","getToValidationMessage","datePickerFormat","dateFormat","overrideDisplayFormat","Locale","locale","setLocale","maxDate","today","endOf","splitValue","fromValue","toValue","setFromMaxDate","startOf","parsedDate","markAsDirty","markAsTouched","formControl","inputValue","formatDate","setErrors","invalidOnChange","getError","text","forcePlaceholder","srcElement","click","fromMaxDate","isBefore","DateAdapter","MomentDateAdapter","deps","MAT_DATE_LOCALE","MAT_DATE_FORMATS","useValue","ɵ0","MAT_MOMENT_DATETIME_FORMATS","SearchDatetimeRangeComponent","datetimePickerFormat","datetimeFormat","maxDatetime","setFromMaxDatetime","utc","fromMaxDatetime","MAT_DATETIME_FORMATS","ɵ0$1","DatetimeAdapter","widgets","radio","slider","number-range","check-list","date-range","datetime-range","SearchWidgetContainerComponent","searchFilterService","queryBuilder","componentFactoryResolver","componentType","factory","setupWidget","ref","destroy","applyInnerWidget","hasValueSelected","getDisplayValue","resetInnerWidget","SearchFilterService","read","SearchQueryBuilderService","SearchFacetFiltersService","responseFacets","selectedBuckets","DEFAULT_PAGE_SIZE","facetQueriesPageSize","onDataLoaded","parseFacets","parseFacetFields","parseFacetIntervals","parseFacetQueries","parseFacetItems","configFacetFields","itemType","responseField","findFacet","responseBuckets","getResponseBuckets","getFilterByMinCount","alreadyExistingField","findResponseFacet","alreadyExistingBuckets","updateExistingBuckets","bucketList","getBucketFilterFunction","configFacetIntervals","facetQuerySetting","configGroups","reduce","acc","mincountFilter","getResponseQueryBuckets","configField","respBucket","getCountValue","getCorrespondingFilterQuery","configGroup","metrics","getBucketCountDisplay","mincountInput","configFacetItem","bucketLabel","configSet","buildIntervalQuery","fieldName","fieldLabel","bucketsToDelete","responseBucket","selBuckets","oldBucket","filterWithContains","startsWith","unselectFacetBucket","updateSelectedBuckets","this_1","resetAllSelectedBuckets","resetQueryFragments","SearchFilterComponent","facetFiltersService","showContextFacets","facetQueriesLabel","facetExpanded","expanded","displayResetButton","resetButton","shouldExpand","clearAll","ContentNodeSelectorPanelService","propertyTypes","modelPropertyTypeToSearchFilterTypeMap","convertCustomModelPropertiesToSearchCategories","searchConfig","customModels","propertyModel","convertModelPropertyIntoSearchFilter","modelProperty","filterSearch","isTypeSupported","dataType","prefixedName","component","placeholder","SearchPanelComponent","contentNodeSelectorPanelService","queryBuilderService","hasCustomModels","SearchSortingPickerComponent","primary","onValueChanged","getSortingOrder","applySorting","findOptionByKey","SearchFilterContainerComponent","focusTrapFactory","filterChange","onKeyPressed","menuTrigger","widgetContainer","onApply","closeMenu","resetSearchFilter","onClearButtonClick","getTooltipTranslation","columnTitle","onMenuOpen","filterContainer","focusTrap","focusInitialElement","onClosed","ConfigurableFocusTrapFactory","SearchFormComponent","formChange","onSelectionChange","getSelected","forms","SearchFilterMenuCardComponent","onClose","SearchFacetFieldComponent","searchFacetFiltersService","onToggleBucket","selectFacetBucket","canUpdateOnChange","canResetSelectedBuckets","resetSelectedBuckets","_f","SearchWidgetChipComponent","menuContainer","widgetContainerComponent","SearchFacetChipComponent","facetFieldComponent","ResetSearchDirective","filterService","SearchChipListComponent","SearchFilterChipsComponent","Relations","FlexLayoutModule","UploadModule","EditJsonDialogModule","SearchModule","DropdownSitesComponent","sitesService","hideMyFiles","siteList","change","MY_FILES_VALUE","loadSiteList","loadAllOnScroll","isInfiniteScrollingEnabled","selectedSite","extendedOptions","InfiniteSelectScrollDirective","MAX_ITEMS","relations","sitePaging","Members","filteredResultsByMember","siteEntry","SiteEntry","unshift","siteListHasMoreItems","showLoading","sites","loggedUserName","getEcmCurrentLoggedUserName","isCurrentUserMember","members","member","BreadcrumbComponent","root","rootId","route","readOnly","recalculateNodes","parseRoute","lastNodes","previousNodes","reverse","dropdown","hasPreviousNodes","elements","rootPos","getElementPosition","findIndex","breadcrumbItemIsAnchor","lastItem","onRoutePathClick","onRouteClick","DropdownBreadcrumbComponent","ConfirmDialogComponent","sanitizer","yesLabel","thirdOptionLabel","noLabel","htmlContent","sanitizedHtmlContent","sanitize","SecurityContext","HTML","DomSanitizer","VersionListComponent","versions","showComments","allowDownload","allowViewVersions","showActions","restored","deleted","viewVersion","versionsApi","loadVersionHistory","canUpdate","canDelete","restore","versionId","revertVersion","getNodeInfo","onVersionRestored","onViewVersion","listVersionHistory","versionPaging","downloadVersion","versionDownloadUrl","getVersionContentUrl","downloadContent","deleteVersion","minWidth","onVersionDeleted","attachment","contentApi","getContentUrl","url","link","document","createElement","style","href","appendChild","removeChild","VersionManagerComponent","showVersionComparison","uploadSuccess","uploadError","uploadCancel","uploadState","newFileVersion","toggleNewVersion","versionListComponent","onUploadSuccess","onUploadError","onUploadCancel","animations","trigger","state","height","opacity","transition","animate","VersionUploadComponent","semanticVersion","uploadVersion","showUploadButton","showCancelButton","versionChanged","commentChanged","canUpload","isMajorVersion","onVersionChange","onCommentChange","onSuccess","VersionComparisonComponent","NameLocationCellComponent","fullPath","defaultValidation","ContentNodeSelectorPanelComponent","nodesApiService","appConfigService","showSiteList","showSearchField","showCounter","restrictRootToCurrentFolderId","dropdownHideMyFiles","dropdownSiteList","_excludeSiteContent","navigationChange","siteChange","folderLoaded","showingSearchResults","loadingSearchResults","inDialog","_chosenNode","folderIdToShow","breadcrumbFolderTitle","startSiteGuid","hasValidQuery","Never","infiniteScroll","debounceSearch","searchInput","preselectedNodes","currentUploadBatch","searchPanelExpanded","createRowFilter","showFilesQuery","valueChanges","searchValue","prepareDialogForNewSearch","resetFolderToShow","clearSearch","showSearchResults","breadcrumbRootId","siteId","getStartSite","breadcrumbTransform","onFileUploadEvent","onFileUploadDeletedEvent","resetPagination","setSearchScopeToNodes","toggleSearchPanel","fileUploadEvent","getPreselectNodesBasedOnSelectionMode","deletedFileEvent","startNodeEntry","getSiteNameFromNodePath","getSite","startSiteEntry","isExcludedSiteContent","siteChanged","chosenSite","setTitleIfCustomSite","infinitePaginationComponent","addCorrespondingNodeIdsQuery","resetChosenNode","extraParentFiltering","nodeIds","extraId","parentFiltering","locations","onFolderChange","updatePaginationAfterRowFilter","attemptNodeSelection","showBreadcrumbs","getNextPageOfSearch","onCurrentSelection","nodesEntries","validNodesEntity","hasPreselectNodes","HighlightDirective","InfinitePaginationComponent","SitesDropdownModule","BreadcrumbModule","DocumentListModule","ContentDirectiveModule","I18N_ERRORS_PATH","forbidSpecialCharacters","forbidEndingDot","forbidOnlySpaces","FolderDialogComponent","editTitle","createTitle","parentNodeId","createFolder","edit","updateNode","editing","errorMessage","LibraryDialogComponent","libraryTitleExists","visibilityOptions","disableCreateButton","maxLength","minLength","createSiteIdValidator","visibilityOption","controls","mergeMap","checkLibraryNameExists","canGenerateId","patchValue","finalize","visibilityChangeHandler","siteBody","createSite","input","libraryTitle","findLibraryByTitle","queriesApi","findSites","timer","MatMomentDatetimeModule","MatDatetimepickerModule","FolderCreateDirective","openDialog","DIALOG_WIDTH","dialogConfig","dialogInstance","componentInstance","folderCreate","FolderEditDirective","folderEdit","BasicPropertiesService","fileSizePipe","getProperties","sizeInBytes","mimeTypeName","author","CardViewTextItemModel","editable","createdByUser","displayName","CardViewDateItemModel","createdAt","pipes","modifiedByUser","modifiedAt","multiline","FileSizePipe","D_TEXT","D_MLTEXT","D_DATE","D_DATETIME","D_INT","D_LONG","D_FLOAT","D_DOUBLE","D_BOOLEAN","PropertyGroupTranslatorService","multiValuePipe","decimalNumberPipe","valueSeparator","translateToCardViewGroups","propertyGroups","propertyValues","definition","propertyGroup","translatedPropertyGroup","translateArray","translateProperty","property","allowEditing","checkECMTypeValidity","propertyDefinition","defaultValue","isProtected","constraints","isMultiValued","translate","getPropertyConstraints","propertyValue","protected","multiValued","cardViewItemProperty","isListOfValues","parameters","allowedValues","options$","CardViewSelectItemModel","CardViewIntItemModel","multivalued","CardViewFloatItemModel","CardViewDatetimeItemModel","CardViewBoolItemModel","constraint","propertyName","ecmPropertyType","RECOGNISED_ECM_TYPES","MultiValuePipe","DecimalNumberPipe","emptyGroup","getGroup","groupName","getProperty","propertyDefinitions","object","groupDefinition","AspectOrientedConfigService","isGroupAllowed","isIncludeAllEnabled","reorganiseByConfig","aspects","groupAccumulator","aspectName","newGroup","getOrganisedPropertyGroup","organisedPropertyGroup","appendAllPreset","isAspectReadOnly","setReadOnlyProperty","isPropertyReadOnly","readOnlyAspects","readOnlyProperties","propertyGroupName","filterExcludedPreset","exclude","includeAll","aspectProperties","props","IndifferentConfigService","LayoutOrientedConfigService","getMatchingGroups","itemsGroup","layoutBlock","flattenItems","explodedItem","isProperty","setPropertyTitle","setEditableProperty","excludedConfig","includeAllProperty","itemConfig","accumulator","flattenedProperties","aspect","ContentMetadataConfigFactory","presetName","presetConfig","presets","DEFAULT_PRESET_NAME","INDIFFERENT_PRESET","createConfig","isLayoutOrientedPreset","isAspectOrientedPreset","freeze","isObject","x","PropertyDescriptorsService","load","groupNames","groupFetchStreams","defer","classesApi","getClass","convertToObject","propertyGroupsArray","ContentTypeService","getContentTypeByPrefix","prefixedType","typesApi","getType","getContentTypeChildren","listTypes","ContentTypeDialogComponent","contentTypeService","typeProperties","propertyColumns","confirmMessage","contentTypeEntry","currentContentType","namespacePrefix","ContentTypePropertiesService","versionCompatibilityService","propertyGroupTranslatorService","getContentTypeCardItem","isVersionSupported","contentTypesOptions$","getContentTypesAsSelectOption","contentTypeCard","buildContentTypeSelectCardModel","filteredProperties","getContentTypeSpecificProperties","buildCardItemsFromPropertyList","buildContentTypeTextCardModel","currentProperties","buildCardItemFromProperty","displayNoneOption","currentType","childrenTypes$","zip","distinctUntilChanged","contentTypesEntries","appendCurrentType","resultTypes","openContentTypeDialogConfirm","closeAll","VersionCompatibilityService","ContentMetadataService","basicPropertiesService","contentMetadataConfigFactory","propertyDescriptorsService","contentTypePropertyService","getBasicProperties","getContentTypeProperty","openConfirmDialog","changedProperties","getGroupedProperties","groupedProperties","contentMetadataConfig_1","groups","iif","filterEmptyPreset","setTitleToNameIfNotSet","ContentMetadataComponent","contentMetadataService","cardViewUpdateService","displayEmpty","multi","displayDefaultProperties","displayAspect","copyToClipboardAction","useChipsForMultiValueProperty","hasMetadataChanged","multiValueSeparator","DEFAULT_SEPARATOR","itemUpdated$","updatedNode","targetProperty","updateChanges","changed","updatedAspect$","loadProperties","handleUpdateError","basicProperties$","groupedProperties$","properties$","contentTypeProperty$","baseProperty","updatedNodeChanges","saveChanges","hasContentTypeChanged","updateElement","updateNodeAspect","revertChanges","cancelChanges","showGroup","canExpandTheCard","canExpandProperties","keyDown","CardViewUpdateService","AspectListDialogComponent","currentAspectSelection","overTableMessage","aspectList","AspectListService","getAspects","visibleAspectList","getVisibleAspects","standardAspects$","getStandardAspects","customAspects$","getCustomAspects","whiteList","aspectsApi","listAspects","filterAspectByConfig","aspectEntries","aspectVisibleConfig","aspectGroup","openAspectListDialog","NodeAspectService","aspectListService","updateNodeAspects","ContentMetadataCardComponent","nodeAspectService","_displayDefaultProperties","editAspectSupported","onDisplayDefaultPropertiesChange","toggleEdit","toggleExpanded","openAspectDialog","isEditAspectSupported","isInherited","authorityId","accessStatus","NodePermissionService","searchApiService","nodeService","getNodeRoles","retrieveSiteQueryBody","buildRetrieveSiteQueryBody","searchByQueryBody","siteNodeList","siteName","getGroupMembersBySiteName","permissions","settable","getNodePermissions","locallySet","permissionElement","PermissionDisplayModel","inherited","permissionInherited","updatePermissionRole","updatedPermissionRole","permissionBody","updateNodePermissions","permissionList","updateLocallySetPermissions","duplicatedPermissions","getDuplicatedPermissions","duplicatePermissionMessage","nodeLocallySet","permissionListAdded","duplicatePermissions","duplicate","localPermission","isEqualPermission","oldPermission","newPermission","removePermission","permissionToRemove","getGroupMemberByGroupName","groupMemberPaging","displayResult","formattedRoleName","groupsApi","listGroupMemberships","nodePath","getLocalPermissions","getInheritedPermission","removePermissions","updatePermissions","getNodeWithRoles","roles","_roles","transformNodeToUserPerson","firstName","lastName","email","EcmUserModel","Group","MemberModel","readonly","parseFromSearchResult","toPermissionElement","AddPermissionDialogComponent","isSearchActive","selectedMembers","existingMembers","currentSelection","onAddClicked","confirm","onSearchAddClicked","newMembers","existingMember","disableSearch","enableSearch","onBulkUpdate","onMemberDelete","onMemberUpdate","NodePermissionDialogService","nodePermissionService","openAddPermissionDialog","UPDATEPERMISSIONS","currentPanelClass","chosenWidth","restoreFocus","updateNodePermissionByDialog","PermissionListService","nodePermissionDialogService","errored","loading$","error$","nodeWithRoles$","data$","nodeLocalPermissions","localPermissions","updateReadOnlyPermission","inheritedPermissions","SITE_MANAGER_ROLE","fetchPermission","toggleInherited","updateLocalPermission$","nodeBody_1","isInheritanceEnabled","getManagerAuthority","showInfo","reloadNode","source","showWarning","isGroup","user","deletePermissions","updateRole","buildUpdatedPermission","bulkRoleUpdate","deletePermission","cloneNode","canUpdateThePermission","sitePath","hasLocalManagerPermission","PermissionListComponent","selectedPermissions","deleteSelection","updatePermission","updateAllPermission","InheritPermissionDirective","onInheritPermissionClicked","nodeBody","(click)","SEARCH_QUERY_TOKEN","SearchPermissionConfigurationService","queryProvider","generateQueryBody","getQuery","AddPermissionPanelComponent","selectedItems","EVERYONE","NodeEntry","cm:authorityName","selectionOptions","matSelectionList","selectedOptions","deselectAll","uniqueSelection","uniquesElements","currentElement","uniqueElement","SearchConfigurationService","MatSelectionList","AddPermissionComponent","currentNodeRoles","isAddEnabled","applySelection","transformNodeToPermissionElement","UserIconColumnComponent","UserNameColumnComponent","subTitleText$","permissionGroup","updatePerson","updateGroup","UserRoleColumnComponent","roleChanged","onRoleChanged","newRole","NodePathColumnComponent","PermissionContainerComponent","isReadOnly","showLocation","updateAll","delete","bulkSelectionRole","permissionRow","PopOverDirective","overlay","vcr","_open","destroy$","createOverlay","attachOverlay","detachOverlay","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","ConnectionPositionPair","originX","originY","overlayX","overlayY","withPush","overlayRef","hasBackdrop","backdropClass","hasAttached","periodSelectorPortal","TemplatePortal","popOver","attach","detach","Overlay","PipeModule","ShareDialogComponent","sharedLinksApiService","renditionService","minDate","isFileShared","isDisabled","sharedUrl","maxDebounceTime","baseShareUrl","sharedId","updateForm","createSharedLinks","onTimeChanged","date","updateEntryExpiryDate","onSlideShareChange","openConfirmationDialog","onToggleExpirationDate","slideToggle","enable","disable","onDatetimepickerClosed","dateTimePickerInput","blur","slideToggleExpirationDate","closeOnNavigation","beforeClosed","deleteSharedLink","sharedLink","qshare:sharedId","generateRenditionForNode","expiryDate","local","qshare:expiryDate","SharedLinksApiService","RenditionsService","NodeSharedDirective","zone","isShared","shareNode","openShareLinkDialog","onStable","ContentNodeShareModule","forRoot","ngModule","forChild","level","TreeViewService","nodeApi","getTreeNodes","nodePage","TreeBaseNode","TreeViewDataSource","treeControl","treeViewService","dataChange","childrenSubscription","changeSubscription","treeNodes","dataNodes","connect","collectionViewer","expansionModel","added","expandTreeNodes","removed","reduceTreeNodes","viewChange","disconnect","expandNode","toggleNode","actualNode","FlatTreeControl","TreeViewComponent","nodeClicked","getLevel","isExpandable","hasChild","nodeData","dataSource","loadTreeNode","onNodeClicked","treeNode","GroupService","listAllGroupMembershipsForPerson","listGroupMembershipsForPerson","groupsPaginated","skip","AspectListComponent","valueChanged","aspects$","nodeAspectStatus","hasEqualAspect","node$","customAspect$","customAspects","flatMap","customAspect","tap","concatMap","onCheckBoxClick","onChange","updateEqualityOfAspectList","getTitle","MatTableModule","MatTooltipModule","ContentModule","TRANSLATION_PROVIDER","SocialModule","TagModule","WebScriptModule","DialogModule","ContentNodeSelectorModule","ContentMetadataModule","FolderDirectiveModule","PermissionManagerModule","VersionManagerModule","TreeViewModule","ContentTypeModule","AspectListModule"],"mappings":"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","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatOptionModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatExpansionModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatSlideToggleModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatTreeModule,\n        MatBadgeModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatExpansionModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatSlideToggleModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatTreeModule,\n        MatBadgeModule\n    ]\n})\nexport class MaterialModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, NodePaging } from '@alfresco/js-api';\n\nexport class DocumentLoaderNode {\n    currentNode: NodeEntry;\n    children: NodePaging;\n\n    constructor(currentNode: NodeEntry, children: NodePaging) {\n        this.currentNode = currentNode;\n        this.children = children;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService, PaginationModel } from '@alfresco/adf-core';\nimport {\n    NodePaging,\n    DeletedNodesPaging,\n    SearchRequest,\n    SharedLinkPaging,\n    FavoritePaging,\n    SiteMemberPaging,\n    SiteRolePaging,\n    PeopleApi,\n    SitesApi,\n    SearchApi,\n    FavoritesApi,\n    SharedlinksApi,\n    TrashcanApi,\n    NodesApi\n} from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class CustomResourcesService {\n\n    private CREATE_PERMISSION = 'create';\n\n    private _peopleApi: PeopleApi;\n    private _sitesApi: SitesApi;\n    private _trashcanApi: TrashcanApi;\n    private _searchApi: SearchApi;\n    private _sharedLinksApi: SharedlinksApi;\n    private _favoritesApi: FavoritesApi;\n    private _nodesApi: NodesApi;\n\n    constructor(private apiService: AlfrescoApiService, private logService: LogService) {}\n\n    private get api() {\n        return this.apiService.getInstance();\n    }\n\n    get peopleApi(): PeopleApi {\n        return this._peopleApi || (this._peopleApi = new PeopleApi(this.api));\n    }\n\n    get sitesApi(): SitesApi {\n        return this._sitesApi || (this._sitesApi = new SitesApi(this.api));\n    }\n\n    get searchApi(): SearchApi {\n        return this._searchApi || (this._searchApi = new SearchApi(this.api));\n    }\n\n    get favoritesApi(): FavoritesApi {\n        return this._favoritesApi || (this._favoritesApi = new FavoritesApi(this.api));\n    }\n\n    get sharedLinksApi(): SharedlinksApi {\n        return this._sharedLinksApi || (this._sharedLinksApi = new SharedlinksApi(this.api));\n    }\n\n    get trashcanApi(): TrashcanApi {\n        return this._trashcanApi || (this._trashcanApi = new TrashcanApi(this.api));\n    }\n\n    get nodesApi(): NodesApi {\n        return this._nodesApi || (this._nodesApi = new NodesApi(this.api));\n    }\n\n    /**\n     * Gets files recently accessed by a user.\n     * @param personId ID of the user\n     * @param pagination Specifies how to paginate the results\n     * @param filters Specifies additional filters to apply (joined with **AND**)\n     * @returns List of nodes for the recently used files\n     */\n    getRecentFiles(personId: string, pagination: PaginationModel, filters?: string[]): Observable<NodePaging> {\n        const defaultFilter = [\n            'TYPE:\"content\"',\n            '-PNAME:\"0/wiki\"',\n            '-TYPE:\"app:filelink\"',\n            '-TYPE:\"cm:thumbnail\"',\n            '-TYPE:\"cm:failedThumbnail\"',\n            '-TYPE:\"cm:rating\"',\n            '-TYPE:\"dl:dataList\"',\n            '-TYPE:\"dl:todoList\"',\n            '-TYPE:\"dl:issue\"',\n            '-TYPE:\"dl:contact\"',\n            '-TYPE:\"dl:eventAgenda\"',\n            '-TYPE:\"dl:event\"',\n            '-TYPE:\"dl:task\"',\n            '-TYPE:\"dl:simpletask\"',\n            '-TYPE:\"dl:meetingAgenda\"',\n            '-TYPE:\"dl:location\"',\n            '-TYPE:\"fm:topic\"',\n            '-TYPE:\"fm:post\"',\n            '-TYPE:\"ia:calendarEvent\"',\n            '-TYPE:\"lnk:link\"'\n        ];\n\n        return new Observable((observer) => {\n            this.peopleApi.getPerson(personId)\n                .then((person) => {\n                        const username = person.entry.id;\n                        const filterQueries = [\n                            { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                            { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                            { query: defaultFilter.join(' AND ') }\n                        ];\n\n                        if (filters && filters.length > 0) {\n                            filterQueries.push({\n                                query: filters.join()\n                            });\n                        }\n\n                        const query = new SearchRequest({\n                            query: {\n                                query: '*',\n                                language: 'afts'\n                            },\n                            filterQueries,\n                            include: ['path', 'properties', 'allowableOperations'],\n                            sort: [{\n                                type: 'FIELD',\n                                field: 'cm:modified',\n                                ascending: false\n                            }],\n                            paging: {\n                                maxItems: pagination.maxItems,\n                                skipCount: pagination.skipCount\n                            }\n                        });\n                        return this.searchApi.search(query)\n                            .then((searchResult) => {\n                                    observer.next(searchResult);\n                                    observer.complete();\n                                },\n                                (err) => {\n                                    observer.error(err);\n                                    observer.complete();\n                                });\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets favorite files for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @param where A string to restrict the returned objects by using a predicate\n     * @returns List of favorite files\n     */\n    loadFavorites(pagination: PaginationModel, includeFields: string[] = [], where?: string): Observable<NodePaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n        const defaultPredicate = '(EXISTS(target/file) OR EXISTS(target/folder))';\n\n        const options = {\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where: where ? `${where} AND ${defaultPredicate}` : defaultPredicate ,\n            include: includeFieldsRequest\n        };\n\n        return new Observable((observer) => {\n            this.favoritesApi.listFavorites('-me-', options)\n                .then((result: FavoritePaging) => {\n                        const page: FavoritePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry }: any) => {\n                                            const target = entry.target.file || entry.target.folder;\n                                            target.properties = {\n                                                ...(target.properties || {\n                                                        'cm:title': entry.title || target.title,\n                                                        'cm:description': entry.description || target.description\n                                                    }),\n                                                ...(entry.properties || {})\n                                            };\n\n                                            return {\n                                                entry: target\n                                            };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets sites that the current user is a member of.\n     * @param pagination Specifies how to paginate the results\n     * @param where A string to restrict the returned objects by using a predicate\n     * @returns List of sites\n     */\n    loadMemberSites(pagination: PaginationModel, where?: string): Observable<SiteMemberPaging> {\n        const options = {\n            include: ['properties'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where\n        };\n\n        return new Observable((observer) => {\n            this.sitesApi.listSiteMembershipsForPerson('-me-', options)\n                .then((result: SiteRolePaging) => {\n                        const page: SiteMemberPaging = new SiteMemberPaging( {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { site } }: any) => {\n                                        site.allowableOperations = site.allowableOperations ? site.allowableOperations : [this.CREATE_PERMISSION];\n                                        site.name = site.name || site.title;\n                                        return {\n                                            entry: site\n                                        };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        });\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets all sites in the repository.\n     * @param pagination Specifies how to paginate the results\n     * @param where A string to restrict the returned objects by using a predicate\n     * @returns List of sites\n     */\n    loadSites(pagination: PaginationModel, where?: string): Observable<NodePaging> {\n        const options = {\n            include: ['properties', 'aspectNames'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where\n        };\n\n        return new Observable((observer) => {\n            this.sitesApi\n                .listSites(options)\n                .then(\n                    (page) => {\n                        page.list.entries.map(\n                            ({ entry }: any) => {\n                                entry.name = entry.name || entry.title;\n                                return { entry };\n                            }\n                        );\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets all items currently in the trash.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of deleted items\n     */\n    loadTrashcan(pagination: PaginationModel, includeFields: string[] = []): Observable<DeletedNodesPaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.trashcanApi.listDeletedNodes(options))\n            .pipe(catchError((err) => this.handleError(err)));\n\n    }\n\n    /**\n     * Gets shared links for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @param where A string to restrict the returned objects by using a predicate\n     * @returns List of shared links\n     */\n    loadSharedLinks(pagination: PaginationModel, includeFields: string[] = [], where?: string): Observable<SharedLinkPaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where\n        };\n\n        return from(this.sharedLinksApi.listSharedLinks(options))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Is the folder ID one of the well-known aliases?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is a well-known name, false otherwise\n     */\n    isCustomSource(folderId: string): boolean {\n        let isCustomSources = false;\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isCustomSources = true;\n        }\n\n        return isCustomSources;\n    }\n\n    /**\n     * Is the folder ID a \"-my\", \"-root-\", or \"-shared-\" alias?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is one of the supported sources, false otherwise\n     */\n    isSupportedSource(folderId: string): boolean {\n        let isSupportedSources = false;\n        const sources = ['-my-', '-root-', '-shared-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isSupportedSources = true;\n        }\n\n        return isSupportedSources;\n    }\n\n    /**\n     * Gets a folder's contents.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @param where  Filters the Node list using the *where* condition of the REST API (for example, isFolder=true). See the REST API documentation for more information.\n     * @returns List of items contained in the folder\n     */\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[] = [], where?: string): any {\n        if (nodeId === '-trashcan-') {\n            return this.loadTrashcan(pagination, includeFields);\n        } else if (nodeId === '-sharedlinks-') {\n            return this.loadSharedLinks(pagination, includeFields, where);\n        } else if (nodeId === '-sites-') {\n            return this.loadSites(pagination, where);\n        } else if (nodeId === '-mysites-') {\n            return this.loadMemberSites(pagination, where);\n        } else if (nodeId === '-favorites-') {\n            return this.loadFavorites(pagination, includeFields, where);\n        } else if (nodeId === '-recent-') {\n            return this.getRecentFiles('-me-', pagination);\n        }\n    }\n\n    // TODO: remove it from here\n\n    /**\n     * Gets the contents of one of the well-known aliases in the form of node ID strings.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @returns List of node IDs\n     */\n    getCorrespondingNodeIds(nodeId: string, pagination: PaginationModel = {}): Observable<string[]> {\n        if (this.isCustomSource(nodeId)) {\n\n            return this.loadFolderByNodeId(nodeId, pagination)\n                .pipe(map((result: any): string[] => {\n                    return result.list.entries.map((node: any): string => this.getIdFromEntry(node, nodeId));\n                }));\n\n        } else if (nodeId) {\n            // cases when nodeId is '-my-', '-root-' or '-shared-'\n            return from(this.nodesApi.getNode(nodeId)\n                .then((node) => [node.entry.id]));\n        }\n\n        return of([]);\n    }\n\n    /**\n     * Chooses the correct ID for a node entry.\n     * @param node Node object\n     * @param nodeId ID of the node object\n     * @returns ID value\n     */\n    getIdFromEntry(node: any, nodeId: string): string {\n        if (nodeId === '-sharedlinks-') {\n            return node.entry.nodeId;\n        } else if (nodeId === '-sites-' || nodeId === '-mysites-') {\n            return node.entry.guid;\n        } else if (nodeId === '-favorites-') {\n            return node.entry.targetGuid;\n        } else {\n            return node.entry.id;\n        }\n    }\n\n    /**\n     * Does the well-known alias have a corresponding node ID?\n     * @param nodeId Node to check\n     * @returns True if the alias has a corresponding node ID, false otherwise\n     */\n    hasCorrespondingNodeIds(nodeId: string): boolean {\n        return this.isCustomSource(nodeId) || this.isSupportedSource(nodeId);\n    }\n\n    private getIncludesFields(includeFields: string[]): string[] {\n        return ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n    }\n\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum NodeAction {\n    ATTACH = 'ATTACH',\n    CHOOSE = 'CHOOSE',\n    COPY = 'COPY',\n    MOVE = 'MOVE',\n    NEXT = 'NEXT'\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService, ContentService, LogService, PaginationModel\n} from '@alfresco/adf-core';\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, NodePaging } from '@alfresco/js-api';\nimport { DocumentLoaderNode } from '../models/document-folder.model';\nimport { Observable, from, throwError, forkJoin } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { DocumentListLoader } from '../interfaces/document-list-loader.interface';\nimport { CustomResourcesService } from './custom-resources.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DocumentListService implements DocumentListLoader {\n\n    static ROOT_ID = '-root-';\n\n    constructor(private contentService: ContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private customResourcesService: CustomResourcesService) {\n    }\n\n    /**\n     * Deletes a node.\n     * @param nodeId ID of the node to delete\n     * @returns Empty response when the operation is complete\n     */\n    deleteNode(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder where the node will be copied\n     * @returns NodeEntry for the copied node\n     */\n    copyNode(nodeId: string, targetParentId: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId })).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Moves a node to destination node.\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder where the node will be moved\n     * @returns NodeEntry for the moved node\n     */\n    moveNode(nodeId: string, targetParentId: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId })).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolder(folder: string, opts?: any, includeFields: string[] = []): Observable<NodePaging> {\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const params: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n            if (opts.where) {\n                params.where = opts.where;\n            }\n            if (opts.orderBy) {\n                params.orderBy = opts.orderBy;\n            }\n        }\n\n        return from(this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a node via its node ID.\n     * @param nodeId ID of the target node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'definition', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return this.contentService.getNode(nodeId, opts);\n    }\n\n    /**\n     * Gets a folder node via its node ID.\n     * @param nodeId ID of the folder node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolderNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    isCustomSourceService(nodeId): boolean {\n        return this.customResourcesService.isCustomSource(nodeId);\n    }\n\n    /**\n     * Load a folder by Node Id.\n     * @param nodeId ID of the folder node\n     * @param pagination\n     * @param includeFields List of data field names to include in the results\n     * @param where  Optionally filter the list\n     * @param orderBy order by node property\n     * @returns Details of the folder\n     */\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[], where?: string, orderBy?: string[]): Observable<DocumentLoaderNode> {\n        if (this.customResourcesService.isCustomSource(nodeId)) {\n            return this.customResourcesService.loadFolderByNodeId(nodeId, pagination, includeFields, where).pipe(\n                map((result: any) => new DocumentLoaderNode(null, result))\n            );\n        } else {\n            return this.retrieveDocumentNode(nodeId, pagination, includeFields, where, orderBy);\n        }\n    }\n\n    private retrieveDocumentNode(nodeId: string, pagination: PaginationModel, includeFields: string[], where?: string, orderBy?: string[]): Observable<DocumentLoaderNode> {\n        return forkJoin([\n            this.getFolderNode(nodeId, includeFields),\n            this.getFolder(null, {\n                maxItems: pagination.maxItems,\n                skipCount: pagination.skipCount,\n                orderBy: orderBy,\n                rootFolderId: nodeId,\n                where: where\n            }, includeFields)]).pipe(\n                map((results) => new DocumentLoaderNode(results[0], results[1]))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TranslationService, NotificationService, AllowableOperationsEnum, ContentService, UploadService } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\n\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeEntryEvent } from '../document-list/components/node.event';\nimport { NodeAction } from '../document-list/models/node-action.enum';\n\n@Component({\n    selector: 'adf-content-node-selector',\n    templateUrl: './content-node-selector.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent implements OnInit {\n    title: string;\n    action: NodeAction;\n    buttonActionName: string;\n    chosenNode: Node[];\n    currentDirectoryId: string;\n    showingSearch = false;\n    hasAllowableOperations = false;\n    isLoading = true;\n    selectedTabIndex: number = 0;\n    uploadStarted: boolean = false;\n\n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n    breadcrumbFolderNode: Node;\n\n    constructor(private translation: TranslationService,\n                private contentService: ContentService,\n                private notificationService: NotificationService,\n                private uploadService: UploadService,\n                private dialog: MatDialogRef<ContentNodeSelectorComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: ContentNodeSelectorComponentData) {\n        this.action = data.actionName ?? NodeAction.CHOOSE;\n        this.buttonActionName = `NODE_SELECTOR.${this.action}`;\n        this.title = data.title;\n        this.currentDirectoryId = data.currentFolderId;\n    }\n\n    ngOnInit() {\n        this.dialog.keydownEvents().subscribe(event => {\n            // Esc\n            if (event.keyCode === 27) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                this.close();\n            }\n        });\n\n        this.dialog.backdropClick().subscribe(() => {\n           this.close();\n        });\n\n        this.uploadService.fileUploadStarting.subscribe(() => {\n            this.uploadStarted = true;\n        });\n    }\n\n    close() {\n        this.dialog.close();\n    }\n\n    onSelect(nodeList: Node[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onSiteChange(siteTitle: string) {\n        this.updateTitle(siteTitle);\n    }\n\n    onNavigationChange(pathElement: NodeEntryEvent) {\n        this.currentDirectoryId = pathElement.value.id;\n        this.isLoading = true;\n    }\n\n    onClick(): void {\n        this.data.select.next(this.chosenNode);\n        this.close();\n    }\n\n    updateTitle(siteTitle: string) {\n        if (this.action === NodeAction.CHOOSE && siteTitle) {\n            this.title = this.getTitleTranslation(this.action, siteTitle);\n        }\n    }\n\n    getTitleTranslation(action: NodeAction, name: string): string {\n        return this.translation.instant(`NODE_SELECTOR.${action}_ITEM`, { name: this.translation.instant(name) });\n    }\n\n    getSelectedCount(): number {\n        return this.chosenNode?.length || 0;\n    }\n\n    isCounterVisible(): boolean {\n        return this.action === NodeAction.ATTACH || this.action === NodeAction.CHOOSE;\n    }\n\n    isMultipleSelection(): boolean {\n        return this.data.selectionMode === 'multiple';\n    }\n\n    onError(error) {\n        this.notificationService.showError(error);\n    }\n\n    isChooseButtonDisabled(): boolean {\n        return this.uploadService.isUploading() || !this.hasNodeSelected();\n    }\n\n    hasNodeSelected(): boolean {\n        return this.chosenNode?.length > 0;\n    }\n\n    onShowingSearch(value: boolean) {\n        this.showingSearch = value;\n    }\n\n    onCurrentFolder(currentFolder: Node) {\n        this.hasAllowableOperations = this.contentService.hasAllowableOperations(currentFolder, AllowableOperationsEnum.CREATE);\n        this.breadcrumbFolderNode = currentFolder;\n    }\n\n    isNotAllowedToUpload() {\n        return this.showingSearch || !this.hasAllowableOperations;\n    }\n\n    onFolderLoaded() {\n        this.isLoading = false;\n    }\n\n    onTabSelectionChange(tabIndex: number) {\n        this.selectedTabIndex = tabIndex;\n    }\n\n    isFileServerTabSelected (): boolean {\n        return this.selectedTabIndex === 0;\n    }\n\n    isLocalUploadTabSelected (): boolean {\n        return this.selectedTabIndex === 1;\n    }\n\n    isUploadEnabled(): boolean {\n        return this.canPerformLocalUpload() && this.isLocalUploadTabSelected();\n    }\n\n    canPerformLocalUpload(): boolean {\n        return this.data?.showLocalUploadButton;\n    }\n\n    getWarningMessage(): string {\n        return this.showingSearch ? 'NODE_SELECTOR.UPLOAD_BUTTON_SEARCH_WARNING_MESSAGE' :\n            (this.hasNoPermissionToUpload() ? 'NODE_SELECTOR.UPLOAD_BUTTON_PERMISSION_WARNING_MESSAGE' : '');\n    }\n\n    hasNoPermissionToUpload(): boolean {\n        return (!this.hasAllowableOperations && !this.showingSearch) && !this.isLoading;\n    }\n\n    hasUploadError(): boolean {\n        return this.showingSearch || this.hasNoPermissionToUpload();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\n\nimport { Component, Inject, OnInit, Optional, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { NodeBodyLock, Node, NodeEntry } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-node-lock',\n    templateUrl: './node-lock.dialog.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class NodeLockDialogComponent implements OnInit {\n\n    form: FormGroup;\n    node: Node = null;\n    nodeName: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialog: MatDialogRef<NodeLockDialogComponent>,\n        private alfrescoApi: AlfrescoApiService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n    }\n\n    ngOnInit() {\n        const { node } = this.data;\n        this.nodeName = node.name;\n\n        this.form = this.formBuilder.group({\n            isLocked: node.isLocked || false,\n            allowOwner: node.properties['cm:lockType'] === 'WRITE_LOCK',\n            isTimeLock: !!node.properties['cm:expiryDate'],\n            time: !!node.properties['cm:expiryDate'] ? moment(node.properties['cm:expiryDate']) : moment()\n        });\n    }\n\n    private get lockTimeInSeconds(): number {\n        if (this.form.value.isTimeLock) {\n            const duration = moment.duration(moment(this.form.value.time).diff(moment()));\n            return duration.asSeconds();\n        }\n\n        return 0;\n    }\n\n    private get nodeBodyLock(): NodeBodyLock {\n        return new NodeBodyLock({\n            'timeToExpire': this.lockTimeInSeconds,\n            'type': this.form.value.allowOwner ? 'ALLOW_OWNER_CHANGES' : 'FULL',\n            'lifetime': 'PERSISTENT'\n        });\n    }\n\n    private toggleLock(): Promise<NodeEntry> {\n        const { alfrescoApi: { nodesApi }, data: { node } } = this;\n\n        if (this.form.value.isLocked) {\n            return nodesApi.lockNode(node.id, this.nodeBodyLock);\n        }\n\n        return nodesApi.unlockNode(node.id);\n    }\n\n    submit(): void {\n        this.toggleLock()\n            .then((node: NodeEntry) => {\n                this.data.node.isLocked = this.form.value.isLocked;\n                this.dialog.close(node.entry);\n            })\n            .catch((error: any) => this.data.onError(error));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ContentService, ThumbnailService, SitesService, TranslationService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { ShareDataRow } from '../document-list/data/share-data-row.model';\nimport { Node, NodeEntry, SitePaging } from '@alfresco/js-api';\nimport { DocumentListService } from '../document-list/services/document-list.service';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeAction } from '../document-list/models/node-action.enum';\nimport { NodeLockDialogComponent } from '../dialogs/node-lock.dialog';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\n// tslint:disable-next-line: directive-class-suffix\nexport class ContentNodeDialogService {\n    static nonDocumentSiteContent = [\n        'blog',\n        'calendar',\n        'dataLists',\n        'discussions',\n        'links',\n        'wiki'\n    ];\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private contentService: ContentService,\n                private documentListService: DocumentListService,\n                private siteService: SitesService,\n                private translation: TranslationService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    /**\n     * Opens a file browser at a chosen folder location.\n     * shows files and folders in the dialog search result.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((nodeEntry: NodeEntry) => {\n            return this.openUploadFileDialog(NodeAction.CHOOSE, nodeEntry.entry, true);\n        }));\n    }\n\n    /**\n     * Opens a lock node dialog.\n     * @param contentEntry Node to lock\n     * @returns Error/status message (if any)\n     */\n    public openLockNodeDialog(contentEntry: Node): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasAllowableOperations(contentEntry, AllowableOperationsEnum.LOCK)) {\n            this.dialog.open(NodeLockDialogComponent, {\n                data: {\n                    node: contentEntry,\n                    onError: (error) => {\n                        this.error.emit(error);\n                        observable.error(error);\n                    }\n                },\n                width: '400px'\n            });\n        } else {\n            observable.error('OPERATION.FAIL.NODE.NO_PERMISSION');\n        }\n\n        return observable;\n    }\n\n    /**\n     * Opens a file browser at a chosen site location.\n     * shows files and folders in the dialog search result.\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogBySite(): Observable<Node[]> {\n        return this.siteService.getSites().pipe(switchMap((response: SitePaging) => {\n            return this.openFileBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        }));\n    }\n\n    /**\n     * Opens a file browser at a default myFile location.\n     * shows files and folders in the dialog search result.\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogByDefaultLocation(): Observable<Node[]> {\n        return this.openFileBrowseDialogByFolderId('-my-');\n    }\n\n    /**\n     * Opens a folder browser at a chosen site location.\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogBySite(): Observable<Node[]> {\n        return this.openFolderBrowseDialogByFolderId('-my-');\n    }\n\n    /**\n     * Opens a folder browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((node: NodeEntry) => {\n            return this.openUploadFolderDialog(NodeAction.CHOOSE, node.entry);\n        }));\n    }\n\n    /**\n     * Opens a dialog to copy or move an item to a new location.\n     * @param action Name of the action (eg, \"Copy\" or \"Move\") to show in the title\n     * @param contentEntry Item to be copied or moved\n     * @param permission Permission for the operation\n     * @param excludeSiteContent The site content that should be filtered out\n     * @returns Information about files that were copied/moved\n     */\n    openCopyMoveDialog(action: NodeAction, contentEntry: Node, permission?: string, excludeSiteContent?: string[]): Observable<Node[]> {\n        if (this.contentService.hasAllowableOperations(contentEntry, permission)) {\n\n            const select = new Subject<Node[]>();\n\n            const data: ContentNodeSelectorComponentData = {\n                title: this.getTitleTranslation(action, contentEntry.name),\n                actionName: action,\n                selectionMode: 'single',\n                currentFolderId: contentEntry.parentId,\n                imageResolver: this.imageResolver.bind(this),\n                where: '(isFolder=true)',\n                isSelectionValid: this.isCopyMoveSelectionValid.bind(this),\n                excludeSiteContent: excludeSiteContent || ContentNodeDialogService.nonDocumentSiteContent,\n                select: select\n            };\n\n            const dialogRef = this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n            dialogRef.afterClosed().subscribe({ next: () => select.complete() });\n\n            return select;\n        } else {\n            const errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            return throwError(errors);\n        }\n    }\n\n    /**\n     * Gets the translation of the dialog title.\n     * @param action Name of the action to display in the dialog title\n     * @param name Name of the item on which the action is being performed\n     * @returns Translated version of the title\n     */\n    getTitleTranslation(action: string, name: string): string {\n        return this.translation.instant(`NODE_SELECTOR.${action.toUpperCase()}_ITEM`, { name });\n    }\n\n    /**\n     * Opens a dialog to choose folders to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry  Item to upload\n     * @returns Information about the chosen folder(s)\n     */\n    openUploadFolderDialog(action: NodeAction, contentEntry: Node): Observable<Node[]> {\n        const select = new Subject<Node[]>();\n\n        const data: ContentNodeSelectorComponentData = {\n            title: this.getTitleTranslation(action, this.translation.instant('DROPDOWN.MY_FILES_OPTION')),\n            actionName: action,\n            selectionMode: 'single',\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.hasAllowableOperationsOnNodeFolder.bind(this),\n            where: '(isFolder=true)',\n            select: select\n        };\n\n        const dialogRef = this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        dialogRef.afterClosed().subscribe({ next: () => select.complete() });\n\n        return select;\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @param showFilesInResult Show files in dialog search result\n     * @returns Information about the chosen file(s)\n     */\n    openUploadFileDialog(action: NodeAction, contentEntry: Node, showFilesInResult = false): Observable<Node[]> {\n        const select = new Subject<Node[]>();\n\n        const data: ContentNodeSelectorComponentData = {\n            title: this.getTitleTranslation(action, this.translation.instant('DROPDOWN.MY_FILES_OPTION')),\n            actionName: action,\n            selectionMode: 'single',\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: (entry: Node) => entry.isFile,\n            select: select,\n            showFilesInResult\n        };\n\n        const dialogRef = this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        dialogRef.afterClosed().subscribe({ next: () => select.complete() });\n\n        return select;\n    }\n\n    private openContentNodeDialog(data: ContentNodeSelectorComponentData, panelClass: string, width: string): MatDialogRef<ContentNodeSelectorComponent> {\n        return this.dialog.open(ContentNodeSelectorComponent, {\n            data,\n            panelClass,\n            width,\n            disableClose: true\n        });\n    }\n\n    private imageResolver(row: ShareDataRow): string | null {\n        const entry: Node = row.node.entry;\n        if (!this.contentService.hasAllowableOperations(entry, 'create')) {\n            if (this.isNodeFolder(entry)) {\n                return this.thumbnailService.getMimeTypeIcon('disable/folder');\n            }\n        }\n\n        return null;\n    }\n\n    private hasAllowableOperationsOnNodeFolder(entry: Node): boolean {\n        return this.isNodeFolder(entry) && this.contentService.hasAllowableOperations(entry, 'create');\n    }\n\n    private isNodeFolder(entry: Node): boolean {\n        return entry.isFolder;\n    }\n\n    private isCopyMoveSelectionValid(entry: Node): boolean {\n        return this.hasEntityCreatePermission(entry) && !this.isSite(entry);\n    }\n\n    private hasEntityCreatePermission(entry: Node): boolean {\n        return this.contentService.hasAllowableOperations(entry, 'create');\n    }\n\n    private isSite(entry) {\n        return !!entry.guid || entry.nodeType === 'st:site' || entry.nodeType === 'st:sites';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { AllowableOperationsEnum, ContentService } from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '../content-node-selector/content-node-dialog.service';\n\n@Directive({\n    selector: '[adf-node-lock]'\n})\nexport class NodeLockDirective implements AfterViewInit {\n\n    /** Node to lock/unlock. */\n    @Input('adf-node-lock')\n    node: Node;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.stopPropagation();\n        this.contentNodeDialogService.openLockNodeDialog(this.node);\n    }\n\n    constructor(\n        public element: ElementRef,\n        private renderer: Renderer2,\n        private contentService: ContentService,\n        private contentNodeDialogService: ContentNodeDialogService\n    ) {}\n\n    ngAfterViewInit() {\n        const hasAllowableOperations = this.contentService.hasAllowableOperations(this.node, AllowableOperationsEnum.LOCK);\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', !hasAllowableOperations);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, Component, OnInit, OnChanges, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-node-counter]'\n})\nexport class NodeCounterDirective implements OnInit, OnChanges {\n    @Input('adf-node-counter')\n    counter: number;\n\n    componentRef: NodeCounterComponent;\n\n    constructor(\n        private resolver: ComponentFactoryResolver,\n        public viewContainerRef: ViewContainerRef\n    ) {}\n\n    ngOnInit() {\n        const componentFactory = this.resolver.resolveComponentFactory(NodeCounterComponent);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory).instance;\n        this.componentRef.counter = this.counter;\n    }\n\n    ngOnChanges() {\n        if (this.componentRef) {\n            this.componentRef.counter = this.counter;\n        }\n    }\n}\n\n@Component({\n    selector: 'adf-node-counter',\n    template: `\n        <div>{{ 'NODE_COUNTER.SELECTED_COUNT' | translate: { count: counter } }}</div>\n    `\n})\nexport class NodeCounterComponent {\n    counter: number;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { NodeLockDirective } from './node-lock.directive';\nimport { NodeCounterComponent, NodeCounterDirective } from './node-counter.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule\n    ],\n    declarations: [\n        NodeLockDirective,\n        NodeCounterDirective,\n        NodeCounterComponent\n    ],\n    exports: [\n        NodeLockDirective,\n        NodeCounterDirective\n    ]\n})\nexport class ContentDirectiveModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { RatingEntry, RatingBody } from '@alfresco/js-api';\nimport { from, throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService, private logService: LogService) {\n    }\n\n    /**\n     * Gets the current user's rating for a node.\n     * @param nodeId Node to get the rating from\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @returns The rating value\n     */\n    getRating(nodeId: string, ratingType: any): Observable<RatingEntry | {}> {\n        return from(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Adds the current user's rating for a node.\n     * @param nodeId Target node for the rating\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @param vote Rating value (boolean for \"likes\", numeric 0..5 for \"fiveStar\")\n     * @returns Details about the rating, including the new value\n     */\n    postRating(nodeId: string, ratingType: string, vote: any): Observable<RatingEntry | {}> {\n        const ratingBody: RatingBody = new RatingBody({\n            'id': ratingType,\n            'myRating': vote\n        });\n        return from(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Removes the current user's rating for a node.\n     * @param nodeId Target node\n     * @param ratingType Type of rating to remove (can be \"likes\" or \"fiveStar\")\n     * @returns Null response indicating that the operation is complete\n     */\n    deleteRating(nodeId: string, ratingType: any): Observable<any> {\n        return from(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    private handleError(error: any): any {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nimport { RatingEntry } from '@alfresco/js-api';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-rating',\n    styleUrls: ['./rating.component.scss'],\n    templateUrl: './rating.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    /** Identifier of the node to apply the rating to. */\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingsCounter = 0;\n\n    ratingType: string = 'fiveStar';\n\n    ratingValue: number;\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    onDestroy$ = new Subject<boolean>();\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        this.ratingService.getRating(this.nodeId, this.ratingType)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(\n            (ratingEntry: RatingEntry) => {\n                this.refreshRating(ratingEntry);\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    calculateStars() {\n        this.stars = [];\n        const roundedAverage = Math.round(this.average);\n\n        for (let i = 0; i < 5; i++) {\n            if (i < roundedAverage) {\n                this.stars.push({fill: true});\n            } else {\n                this.stars.push({fill: false});\n            }\n        }\n    }\n\n    updateVote(vote: number) {\n        if (this.ratingValue === vote) {\n            this.unRateItem();\n        } else {\n            this.rateItem(vote);\n        }\n    }\n\n    rateItem(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(\n            (ratingEntry: RatingEntry) => {\n                this.refreshRating(ratingEntry);\n            }\n        );\n    }\n\n    unRateItem() {\n        this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n            () => {\n                this.ratingService.getRating(this.nodeId, this.ratingType)\n                    .pipe(takeUntil(this.onDestroy$))\n                    .subscribe(\n                    (ratingEntry: RatingEntry) => {\n                        this.refreshRating(ratingEntry);\n                    }\n                );\n            });\n    }\n\n    refreshRating(ratingEntry: RatingEntry) {\n        this.ratingValue = Number.parseFloat(ratingEntry.entry.myRating);\n        this.average = ratingEntry.entry.aggregate.average;\n        this.ratingsCounter = ratingEntry.entry.aggregate.numberOfRatings;\n        this.calculateStars();\n        this.changeVote.emit(this.average);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nimport { RatingEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-like',\n    styleUrls: ['./like.component.scss'],\n    templateUrl: './like.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n    /** Identifier of a node to apply likes to. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    likesCounter: number = 0;\n    ratingType: string = 'likes';\n    isLike: boolean = false;\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        this.clean();\n\n        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe(\n            (ratingEntry: RatingEntry) => {\n                if (ratingEntry.entry.aggregate) {\n                    this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;\n                    if (ratingEntry.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (ratingEntry: RatingEntry) => {\n                    this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        }\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ]\n})\nexport class SocialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TagBody,  TagPaging, TagEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\n// tslint:disable-next-line: directive-class-suffix\nexport class TagService {\n\n    /** Emitted when tag information is updated. */\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of tags added to a node.\n     * @param nodeId ID of the target node\n     * @returns TagPaging object (defined in JS-API) containing the tags\n     */\n    getTagsByNodeId(nodeId: string): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a list of all the tags already defined in the repository.\n     * @param opts Options supported by JS-API\n     * @returns TagPaging object (defined in JS-API) containing the tags\n     */\n    getAllTheTags(opts?: any): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getTags(opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Adds a tag to a node.\n     * @param nodeId ID of the target node\n     * @param tagName Name of the tag to add\n     * @returns TagEntry object (defined in JS-API) with details of the new tag\n     */\n    addTag(nodeId: string, tagName: string): Observable<TagEntry> {\n        const tagBody = new TagBody();\n        tagBody.tag = tagName;\n\n        const observableAdd = from(this.apiService.getInstance().core.tagsApi.addTag(nodeId, [tagBody]));\n\n        observableAdd.subscribe((tagEntry: TagEntry) => {\n            this.refresh.emit(tagEntry);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return observableAdd;\n    }\n\n    /**\n     * Removes a tag from a node.\n     * @param nodeId ID of the target node\n     * @param tag Name of the tag to remove\n     * @returns Null object when the operation completes\n     */\n    removeTag(nodeId: string, tag: string): Observable<any> {\n        const observableRemove = from(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        observableRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return observableRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation, OnDestroy, OnInit } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { Subject } from 'rxjs';\nimport { TagPaging } from '@alfresco/js-api';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    templateUrl: './tag-actions.component.html',\n    styleUrls: ['./tag-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a tag is added successfully. */\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an action is chosen. */\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n    tagsEntries: any;\n    errorMsg: string;\n    disableAddTag: boolean = true;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private tagService: TagService, private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        this.tagService.refresh\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => this.refreshTag());\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((tagPaging: TagPaging) => {\n                this.tagsEntries = tagPaging.list.entries;\n                this.disableAddTag = false;\n                this.result.emit(this.tagsEntries);\n            }, () => {\n                this.tagsEntries = null;\n                this.disableAddTag = true;\n                this.result.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.errorMsg = this.translateService.instant('TAG.MESSAGES.EXIST');\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { PaginationModel } from '@alfresco/adf-core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TagEntry } from '@alfresco/js-api';\n\n/**\n * This component provide a list of all the tag inside the ECM\n */\n@Component({\n    selector: 'adf-tag-list',\n    templateUrl: './tag-list.component.html',\n    styleUrls: ['./tag-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit, OnDestroy {\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Array of tags that are displayed\n     */\n    tagsEntries: TagEntry[] = [];\n\n    /**\n     * Number of items per iteration\n     */\n    size: number = 10;\n\n    defaultPagination: PaginationModel;\n    pagination: PaginationModel;\n\n    isLoading = false;\n    isSizeMinimum = true;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n\n        this.defaultPagination = {\n            skipCount: 0,\n            maxItems: this.size,\n            hasMoreItems: false\n        };\n\n        this.pagination = this.defaultPagination;\n\n        this.tagService.refresh\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n                this.tagsEntries = [];\n                this.refreshTag(this.defaultPagination);\n            });\n    }\n\n    ngOnInit() {\n        this.refreshTag(this.defaultPagination);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    refreshTag(opts?: any) {\n        this.tagService.getAllTheTags(opts).subscribe((tags) => {\n            this.tagsEntries = this.tagsEntries.concat(tags.list.entries);\n            this.pagination = tags.list.pagination;\n            this.result.emit(this.tagsEntries);\n            this.isLoading = false;\n        });\n    }\n\n    loadMoreTags() {\n        if (this.pagination.hasMoreItems) {\n            this.isLoading = true;\n            this.isSizeMinimum = false;\n\n            this.refreshTag({\n                skipCount: this.pagination.skipCount + this.pagination.count,\n                maxItems: this.size\n            });\n        }\n    }\n\n    loadLessTags() {\n        this.isSizeMinimum = false;\n        this.tagsEntries = this.tagsEntries.slice(0, this.tagsEntries.length - this.pagination.count);\n        this.pagination.skipCount = this.pagination.skipCount - this.pagination.count;\n        this.pagination.hasMoreItems = true;\n\n        if (this.tagsEntries.length <= this.size) {\n            this.isSizeMinimum = true;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation, OnDestroy, OnInit } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { TagEntry } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    templateUrl: './tag-node-list.component.html',\n    styleUrls: ['./tag-node-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges, OnDestroy, OnInit {\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Show delete button */\n    @Input()\n    showDelete = true;\n\n    tagsEntries: TagEntry[];\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    results = new EventEmitter();\n\n    private onDestroy$ = new Subject<boolean>();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n    }\n\n    ngOnChanges() {\n        this.refreshTag();\n    }\n\n    ngOnInit() {\n        this.tagService.refresh\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => this.refreshTag());\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((tagPaging) => {\n                this.tagsEntries = tagPaging.list.entries;\n                this.results.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ]\n})\nexport class TagModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectDataTableAdapter, AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are received\n *\n */\n@Component({\n    selector: 'adf-webscript-get',\n    templateUrl: './webscript.component.html'\n})\nexport class WebscriptComponent implements OnChanges {\n\n    /** (required) Path to the webscript (as defined by webscript). */\n    @Input()\n    scriptPath: string;\n\n    /** Arguments to pass to the webscript. */\n    @Input()\n    scriptArgs: any;\n\n    /** Toggles whether to show or hide the data. */\n    @Input()\n    showData: boolean = true;\n\n    /** Path where the application is deployed */\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    /** Path that the webscript service is mapped to. */\n    @Input()\n    servicePath: string = 'service';\n\n    /** Content type to interpret the data received from the webscript.\n     * Can be \"JSON\" , \"HTML\" , \"DATATABLE\" or \"TEXT\"\n     */\n    @Input()\n    contentType: string = 'TEXT';\n\n    /** Emitted when the operation succeeds. You can get the plain data from\n     * the webscript through the **success** event parameter and use it as you\n     * need in your application.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges() {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptData) => {\n\n                this.data = webScriptData;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptData);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @returns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        const datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (error) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ]\n})\nexport class WebScriptModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRow, ObjectUtils, ThumbnailService, ContentService } from '@alfresco/adf-core';\nimport { MinimalNode, NodeEntry } from '@alfresco/js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n    id: string;\n\n    get node(): NodeEntry {\n        return this.obj;\n    }\n\n    set node(value: NodeEntry) {\n        this.obj = value;\n        this.cache = {};\n    }\n\n    constructor(private obj: NodeEntry,\n                private contentService: ContentService,\n                private permissionsStyle: PermissionStyleModel[],\n                private thumbnailService?: ThumbnailService,\n                private allowDropFiles?: boolean) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = allowDropFiles !== undefined ? this.allowDropFiles && this.checkNodeTypeAndPermissions(obj) : this.checkNodeTypeAndPermissions(obj);\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n        this.id = this.getId();\n    }\n\n    checkNodeTypeAndPermissions(nodeEntry: NodeEntry) {\n        return this.isFolderAndHasPermissionToUpload(nodeEntry) || this.isFileAndHasParentFolderPermissionToUpload(nodeEntry);\n    }\n\n    getPermissionClass(nodeEntity: NodeEntry): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.contentService.hasAllowableOperations(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(nodeEntry: NodeEntry): boolean {\n        return this.isFolder(nodeEntry) && this.contentService.hasAllowableOperations(nodeEntry.entry, 'create');\n    }\n\n    isFileAndHasParentFolderPermissionToUpload(nodeEntry: NodeEntry): boolean {\n        return this.isFile(nodeEntry) && this.contentService.hasAllowableOperations(nodeEntry.entry, 'update');\n    }\n\n    isFile(nodeEntry: NodeEntry): boolean {\n        return nodeEntry.entry && nodeEntry.entry.isFile;\n    }\n\n    isFolder(nodeEntry: NodeEntry): boolean {\n        return nodeEntry.entry && nodeEntry.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    imageErrorResolver(): any {\n        if (this.obj.entry.content) {\n            return this.thumbnailService.getMimeTypeIcon(this.obj.entry.content.mimeType);\n        }\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n\n    getId(): string {\n        return this.obj.entry.id || undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean | Function = false;\n    visible: boolean | Function = true;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n\n            if (obj.hasOwnProperty('disabled')) {\n                this.disabled = obj.disabled;\n            }\n\n            if (obj.hasOwnProperty('visible')) {\n                this.visible = obj.visible;\n            }\n        }\n    }\n}\n\nexport enum ContentActionTarget {\n    Document = 'document',\n    Folder = 'folder',\n    All = 'all'\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataColumn,\n    DataRow,\n    DataSorting,\n    DataTableAdapter,\n    ThumbnailService,\n    ContentService\n} from '@alfresco/adf-core';\nimport { NodePaging, NodeEntry } from '@alfresco/js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { ShareDataRow } from './share-data-row.model';\nimport { RowFilter } from './row-filter.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private _sortingMode: string;\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n\n    private filter: RowFilter;\n    private imageResolver: any;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n    allowDropFiles: boolean;\n\n    set sortingMode(value: string) {\n        let newValue = (value || 'client').toLowerCase();\n        if (newValue !== 'client' && newValue !== 'server') {\n            newValue = 'client';\n        }\n        this._sortingMode = newValue;\n    }\n\n    get sortingMode(): string {\n        return this._sortingMode;\n    }\n\n    constructor(private thumbnailService: ThumbnailService,\n                private contentService: ContentService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting,\n                sortingMode: string = 'client',\n                allowDropFiles: boolean = false) {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n        this.sortingMode = sortingMode;\n        this.allowDropFiles = allowDropFiles;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        const dataRow: ShareDataRow = <ShareDataRow> row;\n        const value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                const resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                return this.getFolderIcon(node);\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.thumbnailService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.thumbnailService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.thumbnailService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                const resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        const sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: RowFilter) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: any) {\n        this.imageResolver = resolver;\n    }\n\n    private getFolderIcon(node: any) {\n        if (this.isSmartFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('smartFolder');\n        } else if (this.isRuleFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('ruleFolder');\n        } else if (this.isALinkFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('linkFolder');\n        } else {\n            return this.thumbnailService.getMimeTypeIcon('folder');\n        }\n    }\n\n    isSmartFolder(node: any) {\n        const nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('smf:customConfigSmartFolder') > -1 ||\n            (nodeAspects.indexOf('smf:systemConfigSmartFolder') > -1);\n    }\n\n    isRuleFolder(node: any) {\n        const nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('rule:rules') > -1 ||\n            (nodeAspects.indexOf('rule:rules') > -1);\n    }\n\n    isALinkFolder(node: any) {\n        const nodeType = node.entry ? node.entry.nodeType : node.nodeType;\n        return nodeType === 'app:folderlink';\n    }\n\n    private getNodeAspectNames(node: any): any[] {\n        return node.entry?.aspectNames ? node.entry.aspectNames : (node.aspectNames ? node.aspectNames : []);\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        if (this.sortingMode === 'server') {\n            return;\n        }\n\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting?.key && rows?.length) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(nodePaging: NodePaging, merge: boolean = false, allowDropFiles?: boolean) {\n        let shareDataRows: ShareDataRow[] = [];\n        if (allowDropFiles !== undefined) {\n            this.allowDropFiles = allowDropFiles;\n        }\n        if (nodePaging?.list) {\n            const nodeEntries: NodeEntry[] = nodePaging.list.entries;\n            if (nodeEntries?.length) {\n                shareDataRows = nodeEntries.map((item) => new ShareDataRow(item, this.contentService, this.permissionsStyle, this.thumbnailService, this.allowDropFiles));\n\n                if (this.filter) {\n                    shareDataRows = shareDataRows.filter(this.filter);\n                }\n\n                if (this.sortingMode !== 'server') {\n                    // Sort by first sortable or just first column\n                    if (this.columns?.length) {\n                        const sorting = this.getSorting();\n                        if (sorting) {\n                            this.sortRows(shareDataRows, sorting);\n                        } else {\n                            const sortable = this.columns.filter((c) => c.sortable);\n                            if (sortable.length > 0) {\n                                this.sort(sortable[0].key, 'asc');\n                            } else {\n                                this.sort(this.columns[0].key, 'asc');\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            const listPrunedDuplicate = shareDataRows.filter((elementToFilter: any) => {\n                const isPresent = this.rows.find((currentRow: any) => {\n                    return currentRow.obj.entry.id === elementToFilter.obj.entry.id;\n                });\n\n                return !isPresent;\n            });\n\n            this.rows = this.rows.concat(listPrunedDuplicate);\n        } else {\n            this.rows = shareDataRows;\n        }\n    }\n\n    getSelectedRows(): DataRow[] {\n        return this.rows.filter((row: DataRow) => row.isSelected);\n    }\n\n    getRowByNodeId(nodeId: string): DataRow {\n       return this.rows.find((row: DataRow) => row.node.entry.id === nodeId);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '@alfresco/adf-core';\nimport { NodeEntry, Node } from '@alfresco/js-api';\n\nexport class NodeEntityEvent extends BaseEvent<NodeEntry> {\n    constructor(nodeEntry: NodeEntry) {\n        super();\n        this.value = nodeEntry;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<Node> {\n    constructor(node: Node) {\n        super();\n        this.value = node;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    ContentService,\n    DataCellEvent,\n    DataColumn,\n    DataRowActionEvent,\n    DataSorting,\n    DataTableComponent,\n    DisplayMode,\n    ShowHeaderMode,\n    ObjectDataColumn,\n    PaginatedComponent,\n    AppConfigService,\n    DataColumnListComponent,\n    UserPreferencesService,\n    PaginationModel,\n    ThumbnailService,\n    CustomLoadingContentTemplateDirective,\n    CustomNoPermissionTemplateDirective,\n    CustomEmptyContentTemplateDirective,\n    RequestPaginationModel,\n    AlfrescoApiService,\n    UserPreferenceValues,\n    LockService,\n    DataRow\n} from '@alfresco/adf-core';\n\nimport { Node, NodeEntry, NodePaging, Pagination } from '@alfresco/js-api';\nimport { Subject, BehaviorSubject, of } from 'rxjs';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\nimport { NavigableComponentInterface } from '../../breadcrumb/navigable-component.interface';\nimport { FilterSearch } from './../../search/models/filter-search.interface';\nimport { RowFilter } from '../data/row-filter.model';\nimport { DocumentListService } from '../services/document-list.service';\nimport { DocumentLoaderNode } from '../models/document-folder.model';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-document-list',\n    templateUrl: './document-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-document-list' }\n})\nexport class DocumentListComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, PaginatedComponent, NavigableComponentInterface {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n\n    DEFAULT_PAGINATION: Pagination = new Pagination({\n        hasMoreItems: false,\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    DEFAULT_SORTING: DataSorting[] = [\n        new DataSorting('name', 'asc'),\n        new DataSorting('isFolder', 'desc')\n    ];\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    @ContentChild(CustomNoPermissionTemplateDirective)\n    customNoPermissionsTemplate: CustomNoPermissionTemplateDirective;\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customNoContentTemplate: CustomEmptyContentTemplateDirective;\n\n    /** Include additional information about the node in the server request. For example: association, isLink, isLocked and others. */\n    @Input()\n    includeFields: string[];\n\n    /**\n     * Filters the Node list using the *where* condition of the REST API\n     * (for example, isFolder=true). See the REST API documentation for more information.\n     */\n    @Input()\n    where: string;\n\n    /** Change the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** Define a set of CSS styles to apply depending on the permission\n     * of the user on that node. See the Permission Style model\n     * page for further details and examples.\n     */\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    /** The default route for all the location-based columns (if declared). */\n    @Input()\n    locationFormat: string = '/';\n\n    /** Toggles navigation to folder content or file preview */\n    @Input()\n    navigate: boolean = true;\n\n    /** Toggles the header */\n    @Input()\n    showHeader = ShowHeaderMode.Data;\n\n    /** User interaction for folder navigation or file preview.\n     * Valid values are \"click\" and \"dblclick\". Default value: \"dblclick\"\n     */\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    /** Show document thumbnails rather than icons */\n    @Input()\n    thumbnails: boolean = false;\n\n    /** Row selection mode. Can be null, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    /** Toggles multiselect mode */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles content actions for each row */\n    @Input()\n    contentActions: boolean = false;\n\n    /** Position of the content actions dropdown menu. Can be set to \"left\" or \"right\". */\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    /** Toggles context menus for each row */\n    @Input()\n    contextMenuActions: boolean = false;\n\n    /** Custom image for empty folder. Default value: './assets/images/empty_doc_lib.svg' */\n    @Input()\n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    /**\n     * When true, this enables you to drop files directly into subfolders shown\n     * as items in the list or into another file to trigger updating it's version.\n     * When false, the dropped file will be added to the\n     * current folder (ie, the one containing all the items shown in the list).\n     * See the Upload directive for further details about how the file drop is\n     * handled.\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** Defines default sorting. The format is an array of 2 strings `[key, direction]`\n     * i.e. `['name', 'desc']` or `['name', 'asc']`. Set this value only if you want to\n     * override the default sorting detected by the component based on columns.\n     */\n    @Input()\n    sorting: string[] | DataSorting = ['name', 'asc'];\n\n    /** Defines default sorting. The format is an array of strings `[key direction, otherKey otherDirection]`\n     * i.e. `['name desc', 'nodeType asc']` or `['name asc']`. Set this value if you want a base\n     * rule to be added to the sorting apart from the one driven by the header.\n     */\n    @Input()\n    additionalSorting: DataSorting = new DataSorting('isFolder', 'desc');\n\n    /** Defines sorting mode. Can be either `client` (items in the list\n     * are sorted client-side) or `server` (the ordering supplied by the\n     * server is used without further client-side sorting).\n     * Note that the `server` option *does not* request the server to sort the data\n     * before delivering it.\n     */\n    @Input()\n    sortingMode: 'server' | 'client' = 'server';\n\n    /** The inline style to apply to every row. See\n     * the Angular NgStyle\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: { [key: string]: any; };\n\n    /** The CSS class to apply to every row */\n    @Input()\n    rowStyleClass: string;\n\n    /** Toggles the loading state and animated spinners for the component. Used in\n     * combination with `navigate=false` to perform custom navigation and loading\n     * state indication.\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** @hidden */\n    @Input()\n    _rowFilter: RowFilter | null = null;\n\n    /**\n     * Custom function to choose whether to show or hide rows.\n     * See the [Row Filter Model](row-filter.model.md) page for\n     * more information.\n     */\n    @Input()\n    set rowFilter(rowFilter: RowFilter) {\n        this._rowFilter = rowFilter;\n        if (this.data) {\n            this.data.setFilter(this._rowFilter);\n            if (this.currentFolderId) {\n                this.reload();\n            }\n        }\n    }\n\n    get rowFilter(): RowFilter {\n        return this._rowFilter;\n    }\n\n    /**\n     * Custom function to choose image file paths to show. See the\n     * [Image Resolver Model](image-resolver.model.md) page for\n     * more information.\n     */\n    @Input()\n    imageResolver: any | null = null;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Toggles the header filters mode. */\n    @Input()\n    headerFilters: boolean = false;\n\n    /** Initial value for filter. */\n    @Input()\n    filterValue: any;\n\n    /** The ID of the folder node to display or a reserved string alias for special sources */\n    @Input()\n    currentFolderId: string = null;\n\n    /** Array of nodes to be pre-selected. All nodes in the\n     * array are pre-selected in multi selection mode, but only the first node\n     * is pre-selected in single selection mode.\n     */\n    @Input()\n    preselectNodes: NodeEntry[] = [];\n\n    /** The Document list will show all the nodes contained in the NodePaging entity */\n    @Input()\n    node: NodePaging = null;\n\n    /** Default value is stored in the user preference settings. Use this only if you are not using pagination. */\n    @Input()\n    maxItems: number = this.DEFAULT_PAGINATION.maxItems;\n\n    /** Emitted when the user clicks a list node */\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the user double-clicks a list node */\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the current display folder changes */\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    /** Emitted when the user acts upon files with either single or double click\n     * (depends on `navigation-mode`). Useful for integration with the\n     * Viewer component.\n     */\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the Document List has loaded all items and is ready for use */\n    @Output()\n    ready: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when the API fails to get the Document List data */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the node selection change */\n    @Output()\n    nodeSelected: EventEmitter<NodeEntry[]> = new EventEmitter<NodeEntry[]>();\n\n    /** Emitted when a filter value is selected */\n    @Output()\n    filterSelection: EventEmitter<FilterSearch[]> = new EventEmitter();\n\n    @ViewChild('dataTable', { static: true })\n    dataTable: DataTableComponent;\n\n    actions: ContentActionModel[] = [];\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n    noPermission: boolean = false;\n    selection = new Array<NodeEntry>();\n    $folderNode: Subject<Node> = new Subject<Node>();\n    allowFiltering: boolean = true;\n    orderBy: string[] = null;\n    preselectedRows: DataRow[] = [];\n\n    // @deprecated 3.0.0\n    folderNode: Node;\n\n    private _pagination: PaginationModel = this.DEFAULT_PAGINATION;\n    pagination: BehaviorSubject<PaginationModel> = new BehaviorSubject<PaginationModel>(this.DEFAULT_PAGINATION);\n    sortingSubject: BehaviorSubject<DataSorting[]> = new BehaviorSubject<DataSorting[]>(this.DEFAULT_SORTING);\n\n    private layoutPresets = {};\n    private rowMenuCache: { [key: string]: ContentActionModel[] } = {};\n    private loadingTimeout;\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private appConfig: AppConfigService,\n                private userPreferencesService: UserPreferencesService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private alfrescoApiService: AlfrescoApiService,\n                private lockService: LockService) {\n        this.userPreferencesService\n            .select(UserPreferenceValues.PaginationSize)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(pagSize => {\n                this.maxItems = this._pagination.maxItems = pagSize;\n            });\n    }\n\n    getContextActions(node: NodeEntry) {\n        if (node && node.entry) {\n            const actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map((currentAction: ContentActionModel) => {\n                    return {\n                        model: currentAction,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (Array.isArray(this.sorting)) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        } else {\n            defaultSorting = new DataSorting(this.sorting.key, this.sorting.direction);\n        }\n\n        return defaultSorting;\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    ngOnInit() {\n        this.rowMenuCache = {};\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.thumbnailService, this.contentService, null, this.getDefaultSorting(),\n            this.sortingMode, this.allowDropFiles);\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this._rowFilter) {\n            this.data.setFilter(this._rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.contextActionHandler\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(val => this.contextActionCallback(val));\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.columnList.columns.changes\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe(() => this.setTableSchema());\n        }\n        this.setTableSchema();\n    }\n\n    private setTableSchema() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.thumbnailService, this.contentService, schema, this.getDefaultSorting(), this.sortingMode);\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        const columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!changes['preselectNodes']) {\n            this.resetSelection();\n        }\n\n        if (Array.isArray(this.sorting)) {\n            const [key, direction] = this.sorting;\n            this.orderBy = this.buildOrderByArray(key, direction);\n        } else {\n            this.orderBy = this.buildOrderByArray(this.sorting.key, this.sorting.direction);\n        }\n\n        if (this.data) {\n            this.data.thumbnails = this.thumbnails;\n        }\n\n        if (changes.sortingMode && !changes.sortingMode.firstChange && this.data) {\n            this.data.sortingMode = changes.sortingMode.currentValue;\n        }\n\n        if (changes.sorting && !changes.sorting.firstChange && this.data) {\n            const newValue = changes.sorting.currentValue;\n            if (newValue && newValue.length > 0) {\n                const [key, direction] = newValue;\n                this.data.setSorting(new DataSorting(key, direction));\n            }\n        }\n\n        if (this.currentFolderId && changes['currentFolderId']?.currentValue !== changes['currentFolderId']?.previousValue) {\n            this.loadFolder();\n        }\n\n        if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                const merge = this._pagination ? this._pagination.merge : false;\n                this.data.loadPage(changes.node.currentValue, merge, null);\n                this.preserveExistingSelection();\n                this.onPreselectNodes();\n                this.onDataReady(changes.node.currentValue);\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload() {\n        this.ngZone.run(() => {\n            this.resetSelection();\n            this.reloadWithoutResettingSelection();\n        });\n    }\n\n    reloadWithoutResettingSelection() {\n        if (this.node) {\n            if (this.data) {\n                this.data.loadPage(this.node, this._pagination.merge, null);\n                this.preserveExistingSelection();\n            }\n            this.onPreselectNodes();\n            this.syncPagination();\n            this.onDataReady(this.node);\n        } else {\n            this.loadFolder();\n        }\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    getNodeActions(node: NodeEntry | any): ContentActionModel[] {\n        if (node && node.entry) {\n            let target = null;\n\n            if (node.entry.isFile) {\n                target = 'document';\n            } else if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                const actions = this.rowMenuCache[node.entry.id];\n                if (actions) {\n                    actions.forEach((action) => {\n                        this.refreshAction(action, node);\n                    });\n                    return actions;\n                }\n\n                const actionsByTarget = this.actions\n                    .filter((entry) => {\n                        const isVisible = (typeof entry.visible === 'function')\n                            ? entry.visible(node)\n                            : entry.visible;\n\n                        return isVisible && entry.target.toLowerCase() === target;\n                    })\n                    .map((action) => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.refreshAction(action, node);\n                });\n\n                this.rowMenuCache[node.entry.id] = actionsByTarget;\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    private refreshAction(action: ContentActionModel, node: NodeEntry) {\n        action.disabled = this.isActionDisabled(action, node);\n        action.visible = this.isActionVisible(action, node);\n    }\n\n    private isActionVisible(action: ContentActionModel, node: NodeEntry): boolean {\n        if (typeof action.visible === 'function') {\n            return action.visible(node);\n        }\n\n        return action.visible;\n    }\n\n    private isActionDisabled(action: ContentActionModel, node: NodeEntry): boolean {\n        if (typeof action.disabled === 'function') {\n            return action.disabled(node);\n        }\n\n        if ((action.permission &&\n            action.disableWithNoPermission &&\n            !this.contentService.hasAllowableOperations(node.entry, action.permission)) ||\n            this.lockService.isLocked(node.entry)) {\n            return true;\n        } else {\n            return action.disabled;\n        }\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    navigateTo(node: Node | string): boolean {\n        if (typeof node === 'string') {\n            this.resetNewFolderPagination();\n            this.currentFolderId = node;\n            this.folderChange.emit(new NodeEntryEvent(<Node> { id: node }));\n            this.reload();\n            return true;\n        } else {\n            if (this.canNavigateFolder(node)) {\n                this.resetNewFolderPagination();\n                this.currentFolderId = this.getNodeFolderDestinationId(node);\n                this.folderChange.emit(new NodeEntryEvent(<Node> { id: this.currentFolderId }));\n                this.reload();\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private getNodeFolderDestinationId(node: Node) {\n        return this.isLinkFolder(node) ? node.properties['cm:destination'] : node.id;\n    }\n\n    private isLinkFolder(node: Node) {\n        return node.nodeType === 'app:folderlink' && node.properties &&\n            node.properties['cm:destination'];\n    }\n\n    updateCustomSourceData(nodeId: string): void {\n        this.currentFolderId = nodeId;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: NodeEntry, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            const handlerSub = (typeof action.handler === 'function') ? action.handler(node, this, action.permission) : of(true);\n\n            if (typeof action.execute === 'function' && handlerSub) {\n                handlerSub\n                    .pipe(takeUntil(this.onDestroy$))\n                    .subscribe(() => action.execute(node));\n            }\n        }\n    }\n\n    private setLoadingState(value: boolean) {\n        if (this.data?.getRows().length > 0) {\n            if (value) {\n                clearTimeout(this.loadingTimeout);\n                this.loadingTimeout = setTimeout(() => {\n                    this.loading = true;\n                }, 1000);\n            } else {\n                clearTimeout(this.loadingTimeout);\n                this.loading = false;\n            }\n        } else {\n            clearTimeout(this.loadingTimeout);\n            this.loading = value;\n        }\n    }\n\n    loadFolder() {\n        if (!this._pagination.merge) {\n            this.setLoadingState(true);\n        }\n\n        if (!this.hasCustomLayout) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n\n        if (this.documentListService.isCustomSourceService(this.currentFolderId)) {\n            this.updateCustomSourceData(this.currentFolderId);\n        }\n\n        this.documentListService.loadFolderByNodeId(this.currentFolderId, this._pagination, this.includeFields, this.where, this.orderBy)\n            .subscribe((documentNode: DocumentLoaderNode) => {\n                if (documentNode.currentNode) {\n                    this.folderNode = documentNode.currentNode.entry;\n                    this.$folderNode.next(documentNode.currentNode.entry);\n                }\n                this.onPageLoaded(documentNode.children);\n            }, (err) => {\n                this.handleError(err);\n            });\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n        this.noPermission = false;\n    }\n\n    onPageLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            if (this.data) {\n                this.data.loadPage(nodePaging, this._pagination.merge, this.allowDropFiles);\n                this.preserveExistingSelection();\n            }\n            this.onPreselectNodes();\n            this.setLoadingState(false);\n            this.onDataReady(nodePaging);\n        }\n    }\n\n    onSortingChanged(event: CustomEvent) {\n        this.orderBy = this.buildOrderByArray(event.detail.sortingKey, event.detail.direction);\n        this.sortingSubject.next([this.additionalSorting, event.detail]);\n\n        if (this.sortingMode === 'server') {\n            this.reload();\n        }\n    }\n\n    private buildOrderByArray(currentKey: string, currentDirection: string): string[] {\n        return [\n            `${this.additionalSorting.key} ${this.additionalSorting.direction}`,\n            `${currentKey} ${currentDirection}`\n        ];\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: NodeEntry) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(nodeEntry: NodeEntry) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: nodeEntry\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(nodeEntry);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                this.executeActionClick(nodeEntry);\n            }\n        }\n\n    }\n\n    onNodeDblClick(nodeEntry: NodeEntry) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: nodeEntry\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(nodeEntry);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                this.executeActionClick(nodeEntry);\n            }\n        }\n    }\n\n    executeActionClick(nodeEntry: NodeEntry) {\n        if (nodeEntry && nodeEntry.entry) {\n            if (nodeEntry.entry.isFile) {\n                this.onPreviewFile(nodeEntry);\n            }\n\n            if (nodeEntry.entry.isFolder) {\n                this.navigateTo(nodeEntry.entry);\n            }\n\n            if (nodeEntry.entry['guid']) {\n                const options = {\n                    include: this.includeFields\n                };\n\n                this.alfrescoApiService.nodesApi.getNode(nodeEntry.entry['guid'], options)\n                    .then((node: NodeEntry) => {\n                        this.navigateTo(node.entry);\n                    });\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map((entry) => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row ? event.row.node : null,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.nodeSelected.emit(this.selection);\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map((entry) => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row ? event.row.node : null,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.nodeSelected.emit(this.selection);\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            const action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    canNavigateFolder(node: Node): boolean {\n        let canNavigateFolder: boolean = false;\n\n        if (node && node.isFolder) {\n            canNavigateFolder = true;\n        }\n\n        return canNavigateFolder;\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n        this.layoutPresets = externalSettings ? Object.assign({}, presetsDefaultModel, externalSettings) : presetsDefaultModel;\n    }\n\n    private onDataReady(nodePaging: NodePaging) {\n        this.ready.emit(nodePaging);\n        this.pagination.next(nodePaging.list.pagination);\n    }\n\n    updatePagination(requestPaginationModel: RequestPaginationModel) {\n        this._pagination.maxItems = requestPaginationModel.maxItems;\n        this._pagination.merge = requestPaginationModel.merge;\n        this._pagination.skipCount = requestPaginationModel.skipCount;\n        this.reload();\n    }\n\n    private syncPagination() {\n        this.node.list.pagination.maxItems = this._pagination.maxItems;\n        this.node.list.pagination.skipCount = this._pagination.skipCount;\n    }\n\n    onFilterSelectionChange(activeFilters: FilterSearch[]) {\n        this.filterSelection.emit(activeFilters);\n    }\n\n    resetNewFolderPagination() {\n        this._pagination.skipCount = 0;\n        this._pagination.maxItems = this.maxItems;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    private handleError(err: any) {\n        if (err.message) {\n            try {\n                if (JSON.parse(err.message).error.statusCode === 403) {\n                    this.noPermission = true;\n                }\n            } catch (error) {\n            }\n        }\n        this.setLoadingState(false);\n        this.error.emit(err);\n    }\n\n    getPreselectedNodesBasedOnSelectionMode(): NodeEntry[] {\n        return this.hasPreselectedNodes() ? (this.isSingleSelectionMode() ? [this.preselectNodes[0]] : this.preselectNodes) : [];\n    }\n\n    getPreselectedRowsBasedOnSelectionMode(): DataRow[] {\n        return this.hasPreselectedRows() ? (this.isSingleSelectionMode() ? [this.preselectedRows[0]] : this.preselectedRows) : [];\n    }\n\n    getSelectionBasedOnSelectionMode(): DataRow[] {\n        return this.hasPreselectedRows() ? (this.isSingleSelectionMode() ? [this.preselectedRows[0]] : this.data.getSelectedRows()) : this.data.getSelectedRows();\n    }\n\n    onPreselectNodes() {\n        if (this.hasPreselectedNodes()) {\n            this.preselectRowsOfPreselectedNodes();\n            const preselectedRows = this.getPreselectedRowsBasedOnSelectionMode();\n            const selectedNodes = this.data.getSelectedRows();\n\n            for (const node of preselectedRows) {\n                this.dataTable.selectRow(node, true);\n            }\n            this.onNodeSelect({ row: undefined, selection: <ShareDataRow[]> selectedNodes });\n        }\n    }\n\n    preserveExistingSelection() {\n        if (this.isMultipleSelectionMode()) {\n            for (const selection of this.selection) {\n                const rowOfSelection = this.data.getRowByNodeId(selection.entry.id);\n                if (rowOfSelection) {\n                    rowOfSelection.isSelected = true;\n                }\n            }\n        }\n    }\n\n    preselectRowsOfPreselectedNodes() {\n        this.preselectedRows = [];\n        const preselectedNodes = this.getPreselectedNodesBasedOnSelectionMode();\n\n        preselectedNodes.forEach((preselectedNode: NodeEntry) => {\n            const rowOfPreselectedNode = this.data.getRowByNodeId(preselectedNode.entry.id);\n            if (rowOfPreselectedNode) {\n                rowOfPreselectedNode.isSelected = true;\n                this.preselectedRows.push(rowOfPreselectedNode);\n            }\n        });\n    }\n\n    unselectRowFromNodeId(nodeId: string) {\n        const rowToUnselect = this.data.getRowByNodeId(nodeId);\n        if (rowToUnselect?.isSelected) {\n            rowToUnselect.isSelected = false;\n            this.dataTable.selectRow(rowToUnselect, false);\n            const selection = this.getSelectionBasedOnSelectionMode();\n            this.onNodeUnselect({ row: undefined, selection: <ShareDataRow[]> selection });\n        }\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode === 'single';\n    }\n\n    isMultipleSelectionMode(): boolean {\n        return this.selectionMode === 'multiple';\n    }\n\n    hasPreselectedNodes(): boolean {\n        return this.preselectNodes?.length > 0;\n    }\n\n    hasPreselectedRows(): boolean {\n        return this.preselectedRows?.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Node, NodeEntry } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, ContentService, NodeDownloadDirective, DownloadService } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { DocumentListService } from './document-list.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\nimport { NodeAction } from '../models/node-action.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\n// tslint:disable-next-line: directive-class-suffix\nexport class NodeActionsService {\n\n    @Output()\n    error = new EventEmitter<any>();\n\n    constructor(private contentDialogService: ContentNodeDialogService,\n                public dialogRef: MatDialog,\n                public content: ContentService,\n                private documentListService?: DocumentListService,\n                private apiService?: AlfrescoApiService,\n                private dialog?: MatDialog,\n                private downloadService?: DownloadService) {}\n\n    downloadNode(node: NodeEntry) {\n        new NodeDownloadDirective(this.apiService, this.downloadService, this.dialog)\n            .downloadNode(node);\n    }\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    copyContent(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation(NodeAction.COPY, 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    copyFolder(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation(NodeAction.COPY, 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    moveContent(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation(NodeAction.MOVE, 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    moveFolder(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation(NodeAction.MOVE, 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: NodeAction.COPY | NodeAction.MOVE, type: 'content' | 'folder', contentEntry: Node, permission?: string): Subject<string> {\n        const observable = new Subject<string>();\n\n        this.contentDialogService\n            .openCopyMoveDialog(action, contentEntry, permission)\n            .subscribe((selections: Node[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action.toLowerCase()}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                    observable.next.bind(observable, `OPERATION.SUCCESS.${type.toUpperCase()}.${action}`),\n                    observable.error.bind(observable)\n                    );\n            },\n            (error) => {\n                observable.error(error);\n                return observable;\n            });\n        return observable;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, throwError, of } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private contentNodeDialogService: ContentNodeDialogService,\n                private translation: TranslationService,\n                private documentListService?: DocumentListService,\n                private contentService?: ContentService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler for an action.\n     * @param key Identifier of the action\n     * @returns The handler for the action\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            const lKey = key.toLowerCase();\n            return this.handlers[lKey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler for an action.\n     * @param key Identifier of the action\n     * @param handler Handler for the action\n     * @returns False if the key was an empty/null string, true otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            const lKey = key.toLowerCase();\n            this.handlers[lKey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if actions can be executed for an item.\n     * @param nodeEntry Item to receive an action\n     * @returns True if the action can be executed on this item, false otherwise\n     */\n    canExecuteAction(nodeEntry: NodeEntry): boolean {\n        return this.documentListService && nodeEntry && nodeEntry.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n        this.handlers['lock'] = this.lockNode.bind(this);\n    }\n\n    private lockNode(node: NodeEntry) {\n        return this.contentNodeDialogService.openLockNodeDialog(node.entry);\n    }\n\n    private downloadNode(obj: NodeEntry) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(node: NodeEntry, _target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(node.entry, permission);\n        this.prepareHandlers(actionObservable);\n        return actionObservable;\n    }\n\n    private moveNode(node: NodeEntry, _target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(node.entry, permission);\n        this.prepareHandlers(actionObservable);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: NodeEntry, _target?: any, permission?: string): Observable<any> {\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasAllowableOperations(node.entry, permission)) {\n                const handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({\n                    type: 'content',\n                    action: 'delete',\n                    permission: permission\n                }));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n\n        return of();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, throwError, of } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: ContentService,\n                private translation: TranslationService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler function for an action.\n     * @param key Identifier for the action\n     * @returns The handler function\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            const lKey = key.toLowerCase();\n            return this.handlers[lKey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler function for an action.\n     * @param key Identifier for the action\n     * @param handler The new handler function\n     * @returns True if the key was a valid action identifier, false otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            const lKey = key.toLowerCase();\n            this.handlers[lKey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if an action is available for a particular item.\n     * @param nodeEntry Item to check\n     * @returns True if the action is available, false otherwise\n     */\n    canExecuteAction(nodeEntry: NodeEntry): boolean {\n        return this.documentListService && nodeEntry && nodeEntry.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n    }\n\n    private downloadNode(nodeEntry: NodeEntry) {\n        this.nodeActionsService.downloadNode(nodeEntry);\n    }\n\n    private copyNode(nodeEntry: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(nodeEntry.entry, permission);\n        this.prepareHandlers(actionObservable, target);\n        return actionObservable;\n    }\n\n    private moveNode(nodeEntry: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(nodeEntry.entry, permission);\n        this.prepareHandlers(actionObservable, target);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable: Observable<any>, target?: any): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: NodeEntry, target?: any, permission?: string): Observable<any> {\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasAllowableOperations(node.entry, permission)) {\n                const handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n\n                    const message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n\n        return of();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n\n    unregisterAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            const idx = this.documentList.actions.indexOf(action);\n            if (idx >= 0) {\n                this.documentList.actions.splice(idx, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel, ContentActionTarget } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** The title of the action as shown in the menu. */\n    @Input()\n    title: string = 'Action';\n\n    /** The name of the icon to display next to the menu command (can be left blank). */\n    @Input()\n    icon: string;\n\n    /** Visibility state (see examples). */\n    @Input()\n    visible: boolean | Function = true;\n\n    /** System actions. Can be \"delete\", \"download\", \"copy\" or \"move\". */\n    @Input()\n    handler: string;\n\n    /** Type of item that the action applies to. Can be \"document\" or \"folder\" */\n    @Input()\n    target: string = ContentActionTarget.All;\n\n    /** The permission type. */\n    @Input()\n    permission: string;\n\n    /** Should this action be disabled in the menu if the user doesn't have permission for it? */\n    @Input()\n    disableWithNoPermission: boolean;\n\n    /** Is the menu item disabled? */\n    @Input()\n    disabled: boolean | Function = false;\n\n    /** Emitted when the user selects the action from the menu. */\n    @Output()\n    execute = new EventEmitter();\n\n    /** Emitted when a permission error occurs */\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    /** Emitted when an error occurs during the action.\n     * Applies to copy and move actions.\n     */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the action succeeds with the success string message.\n     * Applies to copy, move and delete actions.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    documentActionModel: ContentActionModel;\n    folderActionModel: ContentActionModel;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n    }\n\n    ngOnInit() {\n        if (this.target === ContentActionTarget.All) {\n            this.folderActionModel = this.generateAction(ContentActionTarget.Folder);\n            this.documentActionModel = this.generateAction(ContentActionTarget.Document);\n        } else {\n            this.documentActionModel = this.generateAction(this.target);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.visible && !changes.visible.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.visible = changes.visible.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.visible = changes.visible.currentValue;\n            }\n        }\n\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.disabled = changes.disabled.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.disabled = changes.disabled.currentValue;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.documentActionModel) {\n            this.unregister(this.documentActionModel);\n            this.documentActionModel = null;\n        }\n\n        if (this.folderActionModel) {\n            this.unregister(this.folderActionModel);\n            this.folderActionModel = null;\n        }\n    }\n\n    register(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.registerAction(model);\n        }\n        return false;\n    }\n\n    unregister(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.unregisterAction(model);\n        }\n        return false;\n    }\n\n    private generateAction(target: string): ContentActionModel {\n        const model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: target,\n            disabled: this.disabled,\n            visible: this.visible\n        });\n        if (this.handler) {\n            model.handler = this.getSystemHandler(target, this.handler);\n        }\n\n        if (this.execute) {\n            model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register(model);\n        return model;\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            target = target.toLowerCase();\n\n            if (target === ContentActionTarget.Document) {\n                if (this.documentActions) {\n                    this.subscriptions.push(\n                        this.documentActions.permissionEvent.subscribe((permission) => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.documentActions.error.subscribe((errors) => {\n                            this.error.emit(errors);\n                        }),\n                        this.documentActions.success.subscribe((message) => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (target === ContentActionTarget.Folder) {\n                if (this.folderActions) {\n                    this.subscriptions.push(\n                        this.folderActions.permissionEvent.subscribe((permission) => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.folderActions.error.subscribe((errors) => {\n                            this.error.emit(errors);\n                        }),\n                        this.folderActions.success.subscribe((message) => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnInit,\n    Input,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { NodeEntry, Site } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-library-name-column',\n    template: `\n        <span\n            role=\"link\"\n            [attr.aria-label]=\"'NAME_COLUMN_LINK.ACCESSIBILITY.ARIA_LABEL' | translate:{\n                name:  displayText$ | async\n            }\"\n            class=\"adf-datatable-cell-value\"\n            title=\"{{ displayTooltip$ | async }}\"\n            (click)=\"onClick()\">\n\n            {{ displayText$ | async }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-datatable-content-cell adf-datatable-link adf-library-name-column'\n    }\n})\nexport class LibraryNameColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayTooltip$ = new BehaviorSubject<string>('');\n    displayText$ = new BehaviorSubject<string>('');\n    node: NodeEntry;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private element: ElementRef,\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.alfrescoApiService.nodeUpdated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(node => {\n                const row: ShareDataRow = this.context.row;\n                if (row) {\n                    const { entry } = row.node;\n\n                    if (entry === node) {\n                        row.node = { entry };\n                        this.updateValue();\n                    }\n                }\n            });\n    }\n\n    protected updateValue() {\n        this.node = this.context.row.node;\n        const rows: Array<ShareDataRow> = this.context.data.rows || [];\n        if (this.node && this.node.entry) {\n            this.displayText$.next(\n                this.makeLibraryTitle(<any> this.node.entry, rows)\n            );\n            this.displayTooltip$.next(this.makeLibraryTooltip(this.node.entry));\n        }\n    }\n\n    onClick() {\n        this.element.nativeElement.dispatchEvent(\n            new CustomEvent('name-click', {\n                bubbles: true,\n                detail: {\n                    node: this.node\n                }\n            })\n        );\n    }\n\n    makeLibraryTooltip(library: any): string {\n        const { description, title } = library;\n\n        return description || title || '';\n    }\n\n    makeLibraryTitle(library: Site, rows: Array<ShareDataRow>): string {\n        const entries = rows.map((row: ShareDataRow) => row.node.entry);\n        const { title, id } = library;\n\n        let isDuplicate = false;\n\n        if (entries) {\n            isDuplicate = entries.some((entry: any) => {\n                return entry.id !== id && entry.title === title;\n            });\n        }\n\n        return isDuplicate ? `${title} (${id})` : `${title}`;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    OnInit,\n    Input,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { SiteEntry, Site } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-library-role-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ (displayText$ | async) | translate }}\">\n            {{ (displayText$ | async) | translate }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-library-role-column adf-datatable-content-cell' }\n})\nexport class LibraryRoleColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private api: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.api.nodeUpdated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(node => {\n                const row: ShareDataRow = this.context.row;\n                if (row) {\n                    const { entry } = row.node;\n\n                    if (entry === node) {\n                        row.node = { entry };\n                        this.updateValue();\n                    }\n                }\n            });\n    }\n\n    protected updateValue() {\n        const node: SiteEntry = this.context.row.node;\n        if (node && node.entry) {\n            const role: string = node.entry.role;\n            switch (role) {\n                case Site.RoleEnum.SiteManager:\n                    this.displayText$.next('LIBRARY.ROLE.MANAGER');\n                    break;\n                case Site.RoleEnum.SiteCollaborator:\n                    this.displayText$.next('LIBRARY.ROLE.COLLABORATOR');\n                    break;\n                case Site.RoleEnum.SiteContributor:\n                    this.displayText$.next('LIBRARY.ROLE.CONTRIBUTOR');\n                    break;\n                case Site.RoleEnum.SiteConsumer:\n                    this.displayText$.next('LIBRARY.ROLE.CONSUMER');\n                    break;\n                default:\n                    this.displayText$.next('LIBRARY.ROLE.NONE');\n                    break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Site, SiteEntry } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-library-status-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ (displayText$ | async) | translate }}\">\n            {{ (displayText$ | async) | translate }}\n        </span>\n    `,\n    host: { class: 'adf-library-status-column adf-datatable-content-cell' }\n})\nexport class LibraryStatusColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private api: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.api.nodeUpdated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(node => {\n                const row: ShareDataRow = this.context.row;\n                if (row) {\n                    const { entry } = row.node;\n\n                    if (entry === node) {\n                        row.node = { entry };\n                        this.updateValue();\n                    }\n                }\n            });\n    }\n\n    protected updateValue() {\n        const node: SiteEntry = this.context.row.node;\n        if (node && node.entry) {\n            const visibility: string = node.entry.visibility;\n\n            switch (visibility) {\n                case Site.VisibilityEnum.PUBLIC:\n                    this.displayText$.next('LIBRARY.VISIBILITY.PUBLIC');\n                    break;\n                case Site.VisibilityEnum.PRIVATE:\n                    this.displayText$.next('LIBRARY.VISIBILITY.PRIVATE');\n                    break;\n                case Site.VisibilityEnum.MODERATED:\n                    this.displayText$.next('LIBRARY.VISIBILITY.MODERATED');\n                    break;\n                default:\n                    this.displayText$.next('UNKNOWN');\n                    break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnInit,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { ShareDataRow } from '../../data/share-data-row.model';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-name-column',\n    template: `\n        <span\n            role=\"link\"\n            [attr.aria-label]=\"'NAME_COLUMN_LINK.ACCESSIBILITY.ARIA_LABEL' | translate:{\n                name:  displayText$ | async\n            }\"\n            class=\"adf-datatable-cell-value\"\n            title=\"{{ node | adfNodeNameTooltip }}\"\n            (click)=\"onClick()\">\n\n            {{ displayText$ | async }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell adf-datatable-link adf-name-column' }\n})\nexport class NameColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    @Input()\n    key = 'name';\n\n    displayText$ = new BehaviorSubject<string>('');\n    node: NodeEntry;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private element: ElementRef, private alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.alfrescoApiService.nodeUpdated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(node => {\n                const row: ShareDataRow = this.context.row;\n                if (row) {\n                    const { entry } = row.node;\n\n                    if (entry === node) {\n                        row.node = { entry };\n                        this.updateValue();\n                    }\n                }\n            });\n    }\n\n    protected updateValue() {\n        this.node = this.context.row.node;\n\n        if (this.node && this.node.entry) {\n            const displayText = this.context.row.getValue(this.key);\n            this.displayText$.next(displayText || this.node.entry.id);\n        }\n    }\n\n    onClick() {\n        this.element.nativeElement.dispatchEvent(\n            new CustomEvent('name-click', {\n                bubbles: true,\n                detail: {\n                    node: this.node\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { BaseQueryBuilderService } from './services/base-query-builder.service';\n\nexport const SEARCH_QUERY_SERVICE_TOKEN = new InjectionToken<BaseQueryBuilderService>('QueryService');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable, from, ReplaySubject } from 'rxjs';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport {\n    QueryBody,\n    RequestFacetFields,\n    RequestFacetField,\n    RequestSortDefinitionInner,\n    ResultSetPaging,\n    RequestHighlight,\n    RequestScope\n} from '@alfresco/js-api';\nimport { SearchCategory } from '../models/search-category.interface';\nimport { FilterQuery } from '../models/filter-query.interface';\nimport { SearchRange } from '../models/search-range.interface';\nimport { SearchConfiguration } from '../models/search-configuration.interface';\nimport { FacetQuery } from '../models/facet-query.interface';\nimport { SearchSortingDefinition } from '../models/search-sorting-definition.interface';\nimport { FacetField } from '../models/facet-field.interface';\nimport { FacetFieldBucket } from '../models/facet-field-bucket.interface';\nimport { SearchForm } from '../models/search-form.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport abstract class BaseQueryBuilderService {\n\n    /*  Stream that emits the search configuration whenever the user change the search forms */\n    configUpdated = new Subject<SearchConfiguration>();\n\n    /*  Stream that emits the query before search whenever user search  */\n    updated = new Subject<QueryBody>();\n\n    /*  Stream that emits the results whenever user search  */\n    executed = new Subject<ResultSetPaging>();\n\n    /*  Stream that emits the error whenever user search  */\n    error = new Subject();\n\n    /*  Stream that emits search forms  */\n    searchForms = new ReplaySubject<SearchForm[]>(1);\n\n    categories: SearchCategory[] = [];\n    queryFragments: { [id: string]: string } = {};\n    filterQueries: FilterQuery[] = [];\n    paging: { maxItems?: number; skipCount?: number } = null;\n    sorting: SearchSortingDefinition[] = [];\n    sortingOptions: SearchSortingDefinition[] = [];\n    private scope: RequestScope;\n    private selectedConfiguration: number;\n    private _userQuery = '';\n\n    protected userFacetBuckets: { [key: string]: FacetFieldBucket[] } = {};\n\n    get userQuery(): string {\n        return this._userQuery;\n    }\n\n    set userQuery(value: string) {\n        value = (value || '').trim();\n        this._userQuery = value ? `(${value})` : '';\n    }\n\n    config: SearchConfiguration = {\n        categories: []\n    };\n\n    // TODO: to be supported in future iterations\n    ranges: { [id: string]: SearchRange } = {};\n\n    constructor(protected appConfig: AppConfigService, protected alfrescoApiService: AlfrescoApiService) {\n        this.resetToDefaults();\n    }\n\n    public abstract loadConfiguration(): SearchConfiguration | SearchConfiguration[];\n\n    public abstract isFilterServiceActive(): boolean;\n\n    public resetToDefaults() {\n        const currentConfig = this.getDefaultConfiguration();\n        this.resetSearchOptions();\n        this.configUpdated.next(currentConfig);\n        this.searchForms.next(this.getSearchFormDetails());\n        this.setUpSearchConfiguration(currentConfig);\n    }\n\n    public getDefaultConfiguration(): SearchConfiguration | undefined {\n        const configurations = this.loadConfiguration();\n\n        if (this.selectedConfiguration !== undefined) {\n            return configurations[this.selectedConfiguration];\n        }\n\n        if (Array.isArray(configurations)) {\n            return configurations.find((configuration) => configuration.default);\n        }\n        return configurations;\n    }\n\n    public updateSelectedConfiguration(index: number): void {\n        const currentConfig = this.loadConfiguration();\n        if (Array.isArray(currentConfig) && currentConfig[index] !== undefined) {\n            this.selectedConfiguration = index;\n            this.configUpdated.next(currentConfig[index]);\n            this.searchForms.next(this.getSearchFormDetails());\n            this.resetSearchOptions();\n            this.setUpSearchConfiguration(currentConfig[index]);\n            this.update();\n        }\n    }\n\n    private resetSearchOptions(): void {\n        this.categories = [];\n        this.queryFragments = {};\n        this.filterQueries = [];\n        this.sorting = [];\n        this.sortingOptions = [];\n        this.userFacetBuckets = {};\n        this.scope = null;\n    }\n\n    public getSearchFormDetails(): SearchForm[] {\n        const configurations = this.loadConfiguration();\n        if (Array.isArray(configurations)) {\n            return configurations.map((configuration, index) => ({\n                index,\n                name: configuration.name || 'SEARCH.UNKNOWN_CONFIGURATION',\n                default: configuration.default || false,\n                selected: this.selectedConfiguration !== undefined ? index === this.selectedConfiguration : configuration.default\n           }));\n        } else if (!!configurations) {\n            return [{ index: 0, name: configurations.name || 'SEARCH.UNKNOWN_CONFIGURATION', default: true, selected: true }];\n        }\n        return [];\n    }\n\n    private setUpSearchConfiguration(currentConfiguration: SearchConfiguration) {\n        if (currentConfiguration) {\n            this.config = JSON.parse(JSON.stringify(currentConfiguration));\n            this.categories = (this.config.categories || []).filter(\n                category => category.enabled\n            );\n            this.filterQueries = this.config.filterQueries || [];\n            this.userFacetBuckets = {};\n            if (this.config.sorting) {\n                this.sorting = this.config.sorting.defaults || [];\n                this.sortingOptions = this.config.sorting.options || [];\n            }\n        }\n    }\n\n    /**\n     * Adds a facet bucket to a field.\n     * @param field The target field\n     * @param bucket Bucket to add\n     */\n    addUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            const existing = buckets.find((facetBucket) => facetBucket.label === bucket.label);\n            if (!existing) {\n                buckets.push(bucket);\n            }\n            this.userFacetBuckets[field.field] = buckets;\n        }\n    }\n\n    /**\n     * Gets the buckets currently added to a field\n     * @param field The target fields\n     * @returns Bucket array\n     */\n    getUserFacetBuckets(field: string) {\n        return this.userFacetBuckets[field] || [];\n    }\n\n    /**\n     * Removes an existing bucket from a field.\n     * @param field The target field\n     * @param bucket Bucket to remove\n     */\n    removeUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            this.userFacetBuckets[field.field] = buckets\n                .filter((facetBucket) => facetBucket.label !== bucket.label);\n        }\n    }\n\n    /**\n     * Adds a filter query to the current query.\n     * @param query Query string to add\n     */\n    addFilterQuery(query: string): void {\n        if (query) {\n            const existing = this.filterQueries.find((filterQuery) => filterQuery.query === query);\n            if (!existing) {\n                this.filterQueries.push({ query: query });\n            }\n        }\n    }\n\n    /**\n     * Removes an existing filter query.\n     * @param query The query to remove\n     */\n    removeFilterQuery(query: string): void {\n        if (query) {\n            this.filterQueries = this.filterQueries\n                .filter((filterQuery) => filterQuery.query !== query);\n        }\n    }\n\n    /**\n     * Gets a facet query by label.\n     * @param label Label of the query\n     * @returns Facet query data\n     */\n    getFacetQuery(label: string): FacetQuery {\n        if (label && this.hasFacetQueries) {\n            const result = this.config.facetQueries.queries.find((query) => query.label === label);\n            if (result) {\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Gets a facet field by label.\n     * @param label Label of the facet field\n     * @returns Facet field data\n     */\n    getFacetField(label: string): FacetField {\n        if (label) {\n            const fields = this.config.facetFields.fields || [];\n            const result = fields.find((field) => field.label === label);\n            if (result) {\n                result.label = this.getSupportedLabel(result.label);\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    setScope(scope: RequestScope) {\n        this.scope = scope;\n    }\n\n    getScope(): RequestScope {\n        return this.scope;\n    }\n\n    /**\n     * Builds the current query and triggers the `updated` event.\n     */\n    update(queryBody?: QueryBody): void {\n        const query = queryBody ? queryBody : this.buildQuery();\n        this.updated.next(query);\n    }\n\n    /**\n     * Builds and executes the current query.\n     * @returns Nothing\n     */\n    async execute(queryBody?: QueryBody) {\n        try {\n            const query = queryBody ? queryBody : this.buildQuery();\n            if (query) {\n                const resultSetPaging: ResultSetPaging = await this.alfrescoApiService.getInstance().search.searchApi.search(query);\n                this.executed.next(resultSetPaging);\n            }\n        } catch (error) {\n            this.error.next(error);\n\n            this.executed.next({\n                list: {\n                    pagination: {\n                        totalItems: 0\n                    },\n                    entries: []\n                }\n            });\n        }\n    }\n\n    search(queryBody: QueryBody): Observable<ResultSetPaging> {\n        const promise = this.alfrescoApiService.searchApi.search(queryBody);\n\n        promise.then((resultSetPaging) => {\n            this.executed.next(resultSetPaging);\n        });\n\n        return from(promise);\n    }\n\n    /**\n     * Builds the current query.\n     * @returns The finished query\n     */\n    buildQuery(): QueryBody {\n        const query = this.getFinalQuery();\n\n        const include = this.config.include || [];\n        if (include.length === 0) {\n            include.push('path', 'allowableOperations');\n        }\n\n        if (query) {\n\n            const result: QueryBody = <QueryBody> {\n                query: {\n                    query: query,\n                    language: 'afts'\n                },\n                include: include,\n                paging: this.paging,\n                fields: this.config.fields,\n                filterQueries: this.filterQueries,\n                facetQueries: this.facetQueries,\n                facetIntervals: this.facetIntervals,\n                facetFields: this.facetFields,\n                sort: this.sort,\n                highlight: this.highlight\n            };\n\n            if (this.scope) {\n                result['scope'] = this.scope;\n            }\n\n            result['facetFormat'] = 'V2';\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets the primary sorting definition.\n     * @returns The primary sorting definition\n     */\n    getPrimarySorting(): SearchSortingDefinition {\n        if (this.sorting && this.sorting.length > 0) {\n            return this.sorting[0];\n        }\n        return null;\n    }\n\n    /**\n     * Gets all pre-configured sorting options that users can choose from.\n     * @returns Pre-configured sorting options\n     */\n    getSortingOptions(): SearchSortingDefinition[] {\n        if (this.config && this.config.sorting) {\n            return this.config.sorting.options || [];\n        }\n        return [];\n    }\n\n    /**\n     * Gets the query group.\n     * @param query Target query\n     * @returns Query group\n     */\n    getQueryGroup(query) {\n        return query.group || this.config.facetQueries.label || 'Facet Queries';\n    }\n\n    /**\n     * Checks if FacetQueries has been defined\n     * @returns True if defined, false otherwise\n     */\n    get hasFacetQueries(): boolean {\n        if (this.config\n            && this.config.facetQueries\n            && this.config.facetQueries.queries\n            && this.config.facetQueries.queries.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if FacetIntervals has been defined\n     * @returns True if defined, false otherwise\n     */\n    get hasFacetIntervals(): boolean {\n        return this.config\n            && this.config.facetIntervals\n            && this.config.facetIntervals.intervals\n            && this.config.facetIntervals.intervals.length > 0;\n\n    }\n\n    get hasFacetHighlight(): boolean {\n        return this.config && this.config.highlight ? true : false;\n    }\n\n    protected get sort(): RequestSortDefinitionInner[] {\n        return this.sorting.map((def) => {\n            return new RequestSortDefinitionInner({\n                type: def.type,\n                field: def.field,\n                ascending: def.ascending\n            });\n        });\n    }\n\n    protected get facetQueries(): FacetQuery[] {\n        if (this.hasFacetQueries) {\n            return this.config.facetQueries.queries.map((query) => {\n                query.group = this.getQueryGroup(query);\n                return <FacetQuery> { ...query };\n            });\n        }\n\n        return null;\n    }\n\n    protected get facetIntervals(): any {\n        if (this.hasFacetIntervals) {\n            const configIntervals = this.config.facetIntervals;\n\n            return {\n                intervals: configIntervals.intervals.map((interval) => <any> {\n                    label: this.getSupportedLabel(interval.label),\n                    field: interval.field,\n                    sets: interval.sets.map((set) => <any> {\n                        label: this.getSupportedLabel(set.label),\n                        start: set.start,\n                        end: set.end,\n                        startInclusive: set.startInclusive,\n                        endInclusive: set.endInclusive\n                    })\n                })\n            };\n        }\n\n        return null;\n    }\n\n    protected get highlight(): RequestHighlight {\n        return this.hasFacetHighlight ? this.config.highlight : null;\n    }\n\n    protected getFinalQuery(): string {\n        let query = '';\n\n        this.categories.forEach((facet) => {\n            const customQuery = this.queryFragments[facet.id];\n            if (customQuery) {\n                if (query.length > 0) {\n                    query += ' AND ';\n                }\n                query += `(${customQuery})`;\n            }\n        });\n\n        let result = [this.userQuery, query]\n            .filter((entry) => entry)\n            .join(' AND ');\n\n        if (this.userFacetBuckets) {\n            Object.keys(this.userFacetBuckets).forEach((key) => {\n                const subQuery = (this.userFacetBuckets[key] || [])\n                    .filter((bucket) => bucket.filterQuery)\n                    .map((bucket) => bucket.filterQuery)\n                    .join(' OR ');\n                if (subQuery) {\n                    if (result.length > 0) {\n                        result += ' AND ';\n                    }\n                    result += `(${subQuery})`;\n                }\n            });\n        }\n\n        return result;\n    }\n\n    protected get facetFields(): RequestFacetFields {\n        const facetFields = this.config.facetFields && this.config.facetFields.fields;\n\n        if (facetFields && facetFields.length > 0) {\n            return {\n                facets: facetFields.map((facet) => <RequestFacetField> {\n                    field: facet.field,\n                    mincount: facet.mincount,\n                    label: this.getSupportedLabel(facet.label),\n                    limit: facet.limit,\n                    offset: facet.offset,\n                    prefix: facet.prefix\n                })\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * Encloses a label name with double quotes if it contains whitespace characters.\n     * @param configLabel Original label text\n     * @returns Label, possibly with quotes if it contains spaces\n     */\n    getSupportedLabel(configLabel: string): string {\n        const spaceInsideLabelIndex = configLabel.search(/\\s/g);\n        if (spaceInsideLabelIndex > -1) {\n            return `\"${configLabel}\"`;\n        }\n        return configLabel;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, AppConfigService, NodesApiService, DataSorting } from '@alfresco/adf-core';\nimport { SearchConfiguration } from '../models/search-configuration.interface';\nimport { BaseQueryBuilderService } from './base-query-builder.service';\nimport { SearchCategory } from '../models/search-category.interface';\nimport { MinimalNode, QueryBody } from '@alfresco/js-api';\nimport { filter } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { SearchSortingDefinition } from '../models/search-sorting-definition.interface';\nimport { FilterSearch } from '../models/filter-search.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchHeaderQueryBuilderService extends BaseQueryBuilderService {\n\n    private customSources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-', '-my-'];\n\n    activeFilters: FilterSearch[] = [];\n\n    constructor(appConfig: AppConfigService,\n                alfrescoApiService: AlfrescoApiService,\n                private nodeApiService: NodesApiService) {\n        super(appConfig, alfrescoApiService);\n\n        this.updated.pipe(\n            filter((query: QueryBody) => !!query)).subscribe(() => {\n            this.execute();\n        });\n    }\n\n    public isFilterServiceActive(): boolean {\n        return true;\n    }\n\n    loadConfiguration(): SearchConfiguration {\n        return this.appConfig.get<SearchConfiguration>('search-headers');\n    }\n\n    setupCurrentPagination(maxItems: number, skipCount: number) {\n        if (!this.paging ||\n            (this.paging &&\n                this.paging.maxItems !== maxItems || this.paging.skipCount !== skipCount)) {\n            this.paging = { maxItems, skipCount };\n            this.execute();\n        }\n    }\n\n    setActiveFilter(columnActivated: string, filterValue: string) {\n        const selectedFilter = this.activeFilters.find((activeFilter) => activeFilter.key === columnActivated);\n        if (!selectedFilter) {\n            this.activeFilters.push(<FilterSearch> {\n                key: columnActivated,\n                value: filterValue\n            });\n        } else {\n            selectedFilter.value = filterValue;\n        }\n    }\n\n    resetActiveFilters() {\n        this.activeFilters = [];\n    }\n\n    getActiveFilters(): FilterSearch[] {\n        return this.activeFilters;\n    }\n\n    isNoFilterActive(): boolean {\n        return this.activeFilters.length === 0;\n    }\n\n    removeActiveFilter(columnRemoved: string) {\n        const filterIndex = this.activeFilters.map((activeFilter) => activeFilter.key).indexOf(columnRemoved);\n        if (filterIndex >= 0) {\n            this.activeFilters.splice(filterIndex, 1);\n        }\n    }\n\n    setSorting(dataSorting: DataSorting[]) {\n        this.sorting = [];\n        dataSorting.forEach((columnSorting: DataSorting) => {\n            const fieldValue = this.getSortingFieldFromColumnName(columnSorting.key);\n            if (fieldValue) {\n                const optionAscending = columnSorting.direction.toLocaleLowerCase() === 'asc';\n                const type = fieldValue === 'score' ? 'SCORE' : 'FIELD';\n                const currentSort: SearchSortingDefinition = {\n                    key: columnSorting.key,\n                    label: 'current',\n                    type: type,\n                    field: fieldValue,\n                    ascending: optionAscending\n                };\n                this.sorting.push(currentSort);\n            }\n        });\n\n        this.execute();\n    }\n\n    private getSortingFieldFromColumnName(columnName: string) {\n        if (this.sortingOptions.length > 0) {\n            const sortOption: SearchSortingDefinition = this.sortingOptions.find((option: SearchSortingDefinition) => option.key === columnName);\n            return sortOption ? sortOption.field : '';\n        }\n        return '';\n    }\n\n    getCategoryForColumn(columnKey: string): SearchCategory {\n        let foundCategory = null;\n        if (this.categories !== null) {\n            foundCategory = this.categories.find(\n                category => category.columnKey === columnKey\n            );\n        }\n        return foundCategory;\n    }\n\n    setCurrentRootFolderId(currentFolderId: string) {\n        const alreadyAddedFilter = this.filterQueries.find(filterQueries =>\n            filterQueries.query.includes(currentFolderId)\n        );\n\n        if (alreadyAddedFilter !== undefined) {\n            this.filterQueries = [];\n        }\n\n        this.filterQueries = [{\n            query: `PARENT:\"workspace://SpacesStore/${currentFolderId}\"`\n        }];\n\n        this.execute();\n    }\n\n    isCustomSourceNode(currentNodeId: string): boolean {\n        return this.customSources.includes(currentNodeId);\n    }\n\n    getNodeIdForCustomSource(customSourceId: string): Observable<MinimalNode> {\n        return this.nodeApiService.getNode(customSourceId);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { PaginationModel, DataSorting } from '@alfresco/adf-core';\nimport { DocumentListComponent } from '../document-list.component';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../../search/search-query-service.token';\nimport { SearchHeaderQueryBuilderService } from '../../../search/services/search-header-query-builder.service';\nimport { FilterSearch } from './../../../search/models/filter-search.interface';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NodePaging, MinimalNode } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-filter-header',\n    templateUrl: './filter-header.component.html',\n    providers: [{ provide: SEARCH_QUERY_SERVICE_TOKEN, useClass: SearchHeaderQueryBuilderService}]\n})\nexport class FilterHeaderComponent implements OnInit, OnChanges {\n\n    /** (optional) Initial filter value to sort . */\n    @Input()\n    value: any = {};\n\n    /** The id of the current folder of the document list. */\n    @Input()\n    currentFolderId: string;\n\n    /** Emitted when a filter value is selected */\n    @Output()\n    filterSelection: EventEmitter<FilterSearch[]> = new EventEmitter();\n\n    isFilterServiceActive: boolean;\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(@Inject(DocumentListComponent) private documentList: DocumentListComponent,\n                @Inject(SEARCH_QUERY_SERVICE_TOKEN) private searchFilterQueryBuilder: SearchHeaderQueryBuilderService) {\n        this.isFilterServiceActive = this.searchFilterQueryBuilder.isFilterServiceActive();\n    }\n\n    ngOnInit() {\n        this.searchFilterQueryBuilder.executed\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((newNodePaging: NodePaging) => {\n                this.documentList.node = newNodePaging;\n                this.documentList.reload();\n            });\n\n        this.initDataPagination();\n        this.initDataSorting();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['currentFolderId'] && changes['currentFolderId'].currentValue) {\n            this.resetFilterHeader();\n            this.configureSearchParent(changes['currentFolderId'].currentValue);\n        }\n    }\n\n    onFilterSelectionChange() {\n        this.filterSelection.emit(this.searchFilterQueryBuilder.getActiveFilters());\n        if (this.searchFilterQueryBuilder.isNoFilterActive()) {\n            this.documentList.node = null;\n            this.documentList.reload();\n        }\n    }\n\n    resetFilterHeader() {\n        this.searchFilterQueryBuilder.resetActiveFilters();\n    }\n\n    initDataPagination() {\n        this.documentList.pagination\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((newPagination: PaginationModel) => {\n                this.searchFilterQueryBuilder.setupCurrentPagination(newPagination.maxItems, newPagination.skipCount);\n            });\n    }\n\n    initDataSorting() {\n        this.documentList.sortingSubject\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((sorting: DataSorting[]) => {\n                this.searchFilterQueryBuilder.setSorting(sorting);\n            });\n    }\n\n    private configureSearchParent(currentFolderId: string) {\n        if (this.searchFilterQueryBuilder.isCustomSourceNode(currentFolderId)) {\n            this.searchFilterQueryBuilder.getNodeIdForCustomSource(currentFolderId).subscribe((node: MinimalNode) => {\n                this.initSearchHeader(node.id);\n            });\n        } else {\n            this.initSearchHeader(currentFolderId);\n        }\n    }\n\n    private initSearchHeader(currentFolderId: string) {\n        this.searchFilterQueryBuilder.setCurrentRootFolderId(currentFolderId);\n        if (this.value) {\n            Object.keys(this.value).forEach((columnKey) => {\n                this.searchFilterQueryBuilder.setActiveFilter(columnKey, this.value[columnKey]);\n            });\n        }\n\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnInit,\n  Input\n} from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n  selector: 'adf-trashcan-name-column',\n  template: `\n    <ng-container *ngIf=\"!isLibrary\">\n      <span class=\"adf-datatable-cell-value\" title=\"{{ node | adfNodeNameTooltip }}\">{{ displayText }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"isLibrary\">\n      <span class=\"adf-datatable-cell-value\" title=\"{{ displayTooltip }}\">{{ displayText }}</span>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'adf-datatable-content-cell adf-trashcan-name-column' }\n})\nexport class TrashcanNameColumnComponent implements OnInit {\n  @Input()\n  context: any;\n\n  isLibrary = false;\n  displayText: string;\n  displayTooltip: string;\n  node: NodeEntry;\n\n  ngOnInit() {\n    this.node = this.context.row.node;\n    const rows: Array<ShareDataRow> = this.context.data.rows || [];\n\n    if (this.node && this.node.entry) {\n      this.isLibrary = this.node.entry.nodeType === 'st:site';\n\n      if (this.isLibrary) {\n        const { properties } = this.node.entry;\n\n        this.displayText = this.makeLibraryTitle(this.node.entry, rows);\n        this.displayTooltip =\n          properties['cm:description'] || properties['cm:title'];\n      } else {\n        this.displayText = this.node.entry.name || this.node.entry.id;\n      }\n    }\n  }\n\n  makeLibraryTitle(library: any, rows: Array<ShareDataRow>): string {\n    const entries = rows.map((r: ShareDataRow) => r.node.entry);\n    const { id } = library;\n    const title = library.properties['cm:title'];\n\n    let isDuplicate = false;\n\n    if (entries) {\n      isDuplicate = entries.some((entry: any) => {\n        return entry.id !== id && entry.properties['cm:title'] === title;\n      });\n    }\n\n    return isDuplicate\n      ? `${library.properties['cm:title']} (${library.name})`\n      : `${library.properties['cm:title']}`;\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { NodeEntry, Node } from '@alfresco/js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements NodeEntry {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements Node {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n    aspectNames: string[];\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum } from '@alfresco/adf-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: AllowableOperationsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: AllowableOperationsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus, UploadService, UserPreferencesService, FileUploadDeleteEvent, FileUploadCompleteEvent } from '@alfresco/adf-core';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnDestroy, OnInit, ViewChild, HostBinding, ElementRef } from '@angular/core';\nimport { Subscription, merge, Subject } from 'rxjs';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\nimport { Direction } from '@angular/cdk/bidi';\nimport { takeUntil, delay } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-file-uploading-dialog',\n    templateUrl: './file-uploading-dialog.component.html'\n})\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    /** Dialog direction. Can be 'ltr' or 'rtl. */\n    private direction: Direction = 'ltr';\n    private onDestroy$ = new Subject<boolean>();\n\n    @ViewChild('uploadList')\n    uploadList: FileUploadingListComponent;\n\n    /** Dialog position. Can be 'left' or 'right'. */\n    @Input()\n    position: string = 'right';\n\n    /** Makes the dialog always visible even when there are no uploads. */\n    @Input()\n    alwaysVisible: boolean = false;\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @HostBinding('attr.adfUploadDialogRight')\n    public get isPositionRight(): boolean {\n        return (this.direction === 'ltr' && this.position === 'right')\n            || (this.direction === 'rtl' && this.position === 'left')\n            || null;\n    }\n    @HostBinding('attr.adfUploadDialogLeft')\n    public get isPositionLeft(): boolean {\n        return (this.direction === 'ltr' && this.position === 'left')\n            || (this.direction === 'rtl' && this.position === 'right')\n            || null;\n    }\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\n\n    private listSubscription: Subscription;\n    private counterSubscription: Subscription;\n    private fileUploadSubscription: Subscription;\n    private errorSubscription: Subscription;\n    private dialogActive = new Subject<boolean>();\n\n    constructor(\n        private uploadService: UploadService,\n        private changeDetector: ChangeDetectorRef,\n        private userPreferencesService: UserPreferencesService,\n        private elementRef: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.dialogActive\n            .pipe(\n                delay(100),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(() => {\n                const element: any = this.elementRef.nativeElement.querySelector('#upload-dialog');\n                if (element) {\n                    element.focus();\n                }\n            });\n\n        this.listSubscription = this.uploadService.queueChanged\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(fileList => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length && !this.isDialogActive) {\n                    this.isDialogActive = true;\n                    this.dialogActive.next();\n                } else {\n                    this.dialogActive.next();\n                }\n            });\n\n        this.counterSubscription = merge(\n            this.uploadService.fileUploadComplete,\n            this.uploadService.fileUploadDeleted\n        )\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((event: FileUploadCompleteEvent | FileUploadDeleteEvent) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetector.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(event => {\n                this.totalErrors = event.totalError;\n                this.changeDetector.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService.fileUpload\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n                this.changeDetector.detectChanges();\n            });\n\n        this.uploadService.fileDeleted\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(objId => {\n                if (this.filesUploadingList) {\n                    const uploadedFile = this.filesUploadingList.find((file) => {\n                        return file.data ? file.data.entry.id === objId : false;\n                    });\n                    if (uploadedFile) {\n                        uploadedFile.status = FileUploadStatus.Cancelled;\n                        this.changeDetector.detectChanges();\n                    }\n                }\n            });\n\n        this.userPreferencesService.select('textOrientation')\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((textOrientation: Direction) => {\n                this.direction = textOrientation;\n            });\n    }\n\n    /**\n     * Toggle confirmation message.\n     */\n    toggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (!this.isConfirmation) {\n            this.dialogActive.next();\n        }\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n\n    /**\n     * Cancel uploads and hide confirmation\n     */\n    cancelAllUploads() {\n        this.toggleConfirmation();\n        this.dialogActive.next();\n        this.uploadList.cancelAllFiles();\n    }\n\n    /**\n     * Toggle dialog minimized state.\n     */\n    toggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetector.detectChanges();\n    }\n\n    /**\n     * Dismiss dialog\n     */\n    close(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetector.detectChanges();\n    }\n\n    ngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    canShowDialog(): boolean {\n        return this.isDialogActive || this.alwaysVisible;\n    }\n\n    canShowCancelAll(): boolean {\n        return this.filesUploadingList?.length && this.hasUploadInProgress();\n    }\n\n    canCloseDialog(): boolean {\n        return !this.hasUploadInProgress() && !this.alwaysVisible;\n    }\n\n    hasUploadInProgress(): boolean {\n        return (!this.uploadList?.isUploadCompleted() && !this.uploadList?.isUploadCancelled());\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'adf-file-uploading-list-row',\n    templateUrl: './file-uploading-list-row.component.html'\n})\nexport class FileUploadingListRowComponent {\n    @Input()\n    file: FileModel;\n\n    @Output()\n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    @Output()\n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n\n    onCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n\n    onRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\n\n    showCancelledStatus(): boolean {\n        return this.file.status === FileUploadStatus.Cancelled ||\n            this.file.status === FileUploadStatus.Aborted ||\n            this.file.status === FileUploadStatus.Deleted;\n    }\n\n    get versionNumber(): string {\n        return this.file.data.entry.properties['cm:versionLabel'];\n    }\n\n    get mimeType(): string {\n        if (this.file && this.file.file && this.file.file.type) {\n            return this.file.file.type;\n        }\n\n        return 'default';\n    }\n\n    isUploadVersion(): boolean {\n        return (\n            !!this.file.data &&\n            this.file.options &&\n            this.file.options.newVersion &&\n            this.file.data.entry.properties &&\n            this.file.data.entry.properties['cm:versionLabel']\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel,\n    FileUploadStatus,\n    NodesApiService,\n    TranslationService,\n    UploadService\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    ContentChild,\n    Input,\n    Output,\n    TemplateRef,\n    EventEmitter\n} from '@angular/core';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-file-uploading-list',\n    templateUrl: './file-uploading-list.component.html',\n    styleUrls: ['./file-uploading-list.component.scss']\n})\nexport class FileUploadingListComponent {\n    FileUploadStatus = FileUploadStatus;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    files: FileModel[] = [];\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    constructor(\n        private uploadService: UploadService,\n        private nodesApi: NodesApiService,\n        private translateService: TranslationService) {\n    }\n\n    /**\n     * Cancel file upload\n     *\n     * @param file File model to cancel upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    cancelFile(file: FileModel): void {\n        if (file.status === FileUploadStatus.Pending) {\n            file.status = FileUploadStatus.Cancelled;\n        } else {\n            this.uploadService.cancelUpload(file);\n        }\n    }\n\n    /**\n     * Remove uploaded file\n     *\n     * @param file File model to remove upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    removeFile(file: FileModel): void {\n        this.deleteNode(file).subscribe(() => {\n            if (file.status === FileUploadStatus.Error) {\n                this.notifyError(file);\n            }\n\n            this.cancelNodeVersionInstances(file);\n            this.uploadService.cancelUpload(file);\n        });\n    }\n\n    /**\n     * Calls the appropriate methods for each file, depending on state\n     */\n    cancelAllFiles(): void {\n        const deletedFiles: Observable<FileModel>[] = [];\n\n        this.files.forEach((file) => {\n            if (this.isUploadingFile(file)) {\n                this.uploadService.cancelUpload(file);\n            } else if (file.status === FileUploadStatus.Complete) {\n                deletedFiles.push(this.deleteNode(file));\n            }\n        });\n\n        forkJoin(...deletedFiles).subscribe((files: FileModel[]) => {\n            const errors = files.filter(\n                (file) => file.status === FileUploadStatus.Error\n            );\n\n            if (errors.length) {\n                this.notifyError(...errors);\n            }\n\n            this.uploadService.cancelUpload(...files);\n        });\n    }\n\n    /**\n     * Checks if all the files are uploaded false if there is at least one file in Progress | Starting | Pending\n     */\n    isUploadCompleted(): boolean {\n        return (\n            !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files.some(\n                ({ status }) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n            )\n        );\n    }\n\n    /**\n     * Check if all the files are Cancelled | Aborted | Error. false if there is at least one file in uploading states\n     */\n    isUploadCancelled(): boolean {\n        return (\n            !!this.files.length &&\n            this.files.every(\n                ({ status }) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n            )\n        );\n    }\n\n    private deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi.deleteNode(id, { permanent: true }).pipe(\n            map(() => {\n                file.status = FileUploadStatus.Deleted;\n                return file;\n            }),\n            catchError(() => {\n                file.status = FileUploadStatus.Error;\n                return of(file);\n            })\n        );\n    }\n\n    private cancelNodeVersionInstances(file: FileModel) {\n        this.files\n            .filter(\n                (item) =>\n                    item.options.newVersion &&\n                    item.data.entry.id === file.data.entry.id\n\n            )\n            .map((item) => {\n                item.status = FileUploadStatus.Deleted;\n            });\n    }\n\n    private notifyError(...files: FileModel[]) {\n        let messageError: string = null;\n\n        if (files.length === 1) {\n            messageError = this.translateService.instant(\n                'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                { fileName: files[0].name }\n            );\n        } else {\n            messageError = this.translateService.instant(\n                'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                { total: files.length }\n            );\n        }\n\n        this.error.emit(messageError);\n    }\n\n    private isUploadingFile(file: FileModel): boolean {\n        return file.status === FileUploadStatus.Pending ||\n            file.status === FileUploadStatus.Starting ||\n            file.status === FileUploadStatus.Progress;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, UploadService } from '@alfresco/adf-core';\nimport { EventEmitter } from '@angular/core';\n\nexport class UploadFilesEvent {\n    private isDefaultPrevented: boolean = false;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n    constructor(\n        public files: Array<FileModel>,\n        private uploadService: UploadService,\n        private successEmitter: EventEmitter<any>,\n        private errorEmitter: EventEmitter<any>\n    ) {}\n\n    pauseUpload() {\n        this.preventDefault();\n    }\n\n    resumeUpload() {\n        if (this.files && this.files.length > 0) {\n            this.uploadService.addToQueue(...this.files);\n            this.uploadService.uploadFilesInTheQueue(this.successEmitter, this.errorEmitter);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileInfo, UploadService, TranslationService, FileUploadErrorEvent } from '@alfresco/adf-core';\nimport { EventEmitter, Input, Output, OnInit, OnDestroy, NgZone, Directive } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { UploadFilesEvent } from '../upload-files.event';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive()\n// tslint:disable-next-line: directive-class-suffix\nexport abstract class UploadBase implements OnInit, OnDestroy {\n\n    /** Sets a limit on the maximum size (in bytes) of a file to be uploaded.\n     * Has no effect if undefined.\n     */\n    @Input()\n    maxFilesSize: number;\n\n    /** The ID of the root. Use the nodeId for\n     * Content Services or the taskId/processId for Process Services.\n     */\n    @Input()\n    rootFolderId: string = '-root-';\n\n    /** Toggles component disabled state (if there is no node permission checking). */\n    @Input()\n    disabled: boolean = false;\n\n    /** Filter for accepted file types. */\n    @Input()\n    acceptedFilesType: string = '*';\n\n    /** Toggles versioning. */\n    @Input()\n    versioning: boolean = false;\n\n    /** majorVersion boolean field to true to indicate a major version should be created. */\n    @Input()\n    majorVersion: boolean = false;\n\n    /** When you overwrite existing content, you can use the comment field to add a version comment that appears in the version history */\n    @Input()\n    comment: string;\n\n    /** Custom node type for uploaded file */\n    @Input()\n    nodeType: string = 'cm:content';\n\n    /** Emitted when the file is uploaded successfully. */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<FileUploadErrorEvent>();\n\n    /** Emitted when the upload begins. */\n    @Output()\n    beginUpload = new EventEmitter<UploadFilesEvent>();\n\n    /** Emitted when dropping a file over another file to update the version. */\n    @Output()\n    updateFileVersion = new EventEmitter<CustomEvent>();\n\n    protected onDestroy$ = new Subject<boolean>();\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                protected ngZone: NgZone) {\n    }\n\n    ngOnInit() {\n        this.uploadService.fileUploadError\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(error => this.error.emit(error));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    /**\n     * Upload a list of file in the specified path\n     * @param files\n     */\n    uploadFiles(files: File[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((file: File) => {\n                return this.createFileModel(file, this.rootFolderId, ((<any> file).webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''));\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    uploadFilesInfo(files: FileInfo[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((fileInfo: FileInfo) => {\n                return this.createFileModel(fileInfo.file, this.rootFolderId, fileInfo.relativeFolder);\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    private uploadQueue(files: FileModel[]) {\n        const filteredFiles = files\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        this.ngZone.run(() => {\n            const event = new UploadFilesEvent(\n                [...filteredFiles],\n                this.uploadService,\n                this.success,\n                this.error\n            );\n            this.beginUpload.emit(event);\n\n            if (!event.defaultPrevented) {\n                if (filteredFiles.length > 0) {\n                    this.uploadService.addToQueue(...filteredFiles);\n                    this.uploadService.uploadFilesInTheQueue(this.success, this.error);\n                }\n            }\n        });\n    }\n\n    /**\n     * Checks if the given file is allowed by the extension filters\n     *\n     * @param file FileModel\n     */\n    protected isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map((ext) => ext.trim().replace(/^\\./, ''));\n\n        return allowedExtensions.indexOf(file.extension) !== -1;\n    }\n\n    /**\n     * Creates FileModel from File\n     *\n     * @param file\n     * @param parentId\n     * @param path\n     * @param id\n     */\n    protected createFileModel(file: File, parentId: string, path: string, id?: string): FileModel {\n        return new FileModel(file, {\n            comment: this.comment,\n            majorVersion: this.majorVersion,\n            newVersion: this.versioning,\n            parentId: parentId,\n            path: path,\n            nodeType: this.nodeType\n        }, id);\n    }\n\n    protected isFileSizeAllowed(file: FileModel) {\n        let isFileSizeAllowed = true;\n        if (this.isMaxFileSizeDefined()) {\n            isFileSizeAllowed = this.isFileSizeCorrect(file);\n        }\n\n        return isFileSizeAllowed;\n    }\n\n    protected isMaxFileSizeDefined() {\n        return this.maxFilesSize !== undefined && this.maxFilesSize !== null;\n    }\n\n    protected isFileSizeCorrect(file: FileModel) {\n        return this.maxFilesSize >= 0 && file.size <= this.maxFilesSize;\n    }\n\n    /**\n     * Checks if the given file is an acceptable size\n     *\n     * @param file FileModel\n     */\n    private isFileSizeAcceptable(file: FileModel): boolean {\n        let acceptableSize = true;\n\n        if (!this.isFileSizeAllowed(file)) {\n            acceptableSize = false;\n\n            const message = this.translationService.instant(\n                'FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE',\n                { fileName: file.name }\n            );\n\n            this.error.emit(message);\n        }\n\n        return acceptableSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentService, EXTENDIBLE_COMPONENT, FileUtils,\n    LogService, NodeAllowableOperationSubject, TranslationService, UploadService, AllowableOperationsEnum\n} from '@alfresco/adf-core';\nimport {\n    Component, EventEmitter, forwardRef, Input,\n    OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation, NgZone\n} from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadButtonComponent extends UploadBase implements OnInit, OnChanges, NodeAllowableOperationSubject {\n\n    /** Allows/disallows upload folders (only for Chrome). */\n    @Input()\n    uploadFolders: boolean = false;\n\n    /** Allows/disallows multiple files */\n    @Input()\n    multipleFiles: boolean = false;\n\n    /** Defines the text of the upload button. */\n    @Input()\n    staticTitle: string;\n\n    /** Custom tooltip text. */\n    @Input()\n    tooltip: string = null;\n\n    /** Custom added file. The upload button type will be 'button' instead of 'file' */\n    @Input()\n    file: File;\n\n    /** Emitted when create permission is missing. */\n    @Output()\n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\n\n    private hasAllowableOperations: boolean = false;\n\n    protected permissionValue: Subject<boolean> = new Subject<boolean>();\n\n    constructor(protected uploadService: UploadService,\n                private contentService: ContentService,\n                protected translationService: TranslationService,\n                protected logService: LogService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    ngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasAllowableOperations = permission;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n\n    isButtonDisabled(): boolean {\n        return this.disabled ? true : undefined;\n    }\n\n    onFilesAdded($event: any): void {\n        const files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasAllowableOperations) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    onClickUploadButton(): void {\n        if (this.file) {\n            const files: File[] = [this.file];\n\n            if (this.hasAllowableOperations) {\n                this.uploadFiles(files);\n            } else {\n                this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n            }\n        }\n    }\n\n    onDirectoryAdded($event: any): void {\n        if (this.hasAllowableOperations) {\n            const files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    checkPermission() {\n        if (this.rootFolderId) {\n            const opts: any = {\n                includeSource: true,\n                include: ['allowableOperations']\n            };\n\n            this.contentService.getNode(this.rootFolderId, opts).subscribe(\n                (res) => this.permissionValue.next(this.nodeHasPermission(res.entry, AllowableOperationsEnum.CREATE)),\n                (error: { error: Error }) => {\n                    if (error && error.error) {\n                        this.error.emit({ error: error.error.message } as any);\n                    } else {\n                        this.error.emit({ error: 'FILE_UPLOAD.BUTTON.PERMISSION_CHECK_ERROR'} as any);\n                    }\n                }\n            );\n        }\n    }\n\n    nodeHasPermission(node: Node, permission: AllowableOperationsEnum | string): boolean {\n        return this.contentService.hasAllowableOperations(node, permission);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum, FileModel, EXTENDIBLE_COMPONENT } from '@alfresco/adf-core';\nimport { Component, forwardRef, Input, OnChanges, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { UploadButtonComponent } from './upload-button.component';\n\n@Component({\n    selector: 'adf-upload-version-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadVersionButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-upload-version-button' }\n})\nexport class UploadVersionButtonComponent extends UploadButtonComponent implements OnChanges, OnInit {\n\n    /** (**Required**) The node to be versioned. */\n    @Input()\n    node: Node;\n\n    protected createFileModel(file: File): FileModel {\n        const fileModel = super.createFileModel(file, this.rootFolderId, ((<any> file).webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''), this.node.id);\n\n        if (!this.isFileAcceptable(fileModel)) {\n            const message = this.translationService.instant('FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION');\n            this.error.emit(message);\n        }\n\n        return fileModel;\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.checkPermission();\n    }\n\n    checkPermission() {\n        this.permissionValue.next(this.nodeHasPermission(this.node, AllowableOperationsEnum.UPDATE));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    EXTENDIBLE_COMPONENT, FileInfo, FileModel, FileUtils, NodeAllowableOperationSubject,\n    NotificationService, TranslationService, UploadService, ContentService, AllowableOperationsEnum\n} from '@alfresco/adf-core';\nimport { Component, forwardRef, ViewEncapsulation, NgZone } from '@angular/core';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-drag-area',\n    templateUrl: './upload-drag-area.component.html',\n    host: {'class': 'adf-upload-drag-area'},\n    viewProviders: [\n        {provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent)}\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadDragAreaComponent extends UploadBase implements NodeAllowableOperationSubject {\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                private notificationService: NotificationService,\n                private contentService: ContentService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    /**\n     * Method called when files are dropped in the drag area.\n     *\n     * @param files - files dropped in the drag area.\n     */\n    onFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            this.uploadFiles(files);\n        }\n    }\n\n    /**\n     * Called when a folder are dropped in the drag area\n     *\n     * @param folder - name of the dropped folder\n     */\n    onFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flatten(folder).then((filesInfo) => {\n                this.uploadFilesInfo(filesInfo);\n            });\n        }\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    showUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translationService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translationService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    /** Returns true or false considering the component options and node permissions */\n    isDroppable(): boolean {\n        return !this.disabled;\n    }\n\n    /**\n     * Handles 'upload-files' events raised by child components.\n     *\n     * @param event DOM event\n     */\n    onUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        const isAllowed: boolean = this.isTargetNodeFolder(event) ?\n            this.contentService.hasAllowableOperations(event.detail.data.obj.entry, AllowableOperationsEnum.CREATE)\n            : this.contentService.hasAllowableOperations(event.detail.data.obj.entry, AllowableOperationsEnum.UPDATE);\n        if (isAllowed) {\n            if (!this.isTargetNodeFolder(event) && event.detail.files.length === 1) {\n                this.updateFileVersion.emit(event);\n            } else {\n                const fileInfo: FileInfo[] = event.detail.files;\n                if (this.isTargetNodeFolder(event)) {\n                    const destinationFolderName = event.detail.data.obj.entry.name;\n                    fileInfo.map((file) => file.relativeFolder = destinationFolderName ? destinationFolderName.concat(file.relativeFolder) : file.relativeFolder);\n                }\n                if (fileInfo && fileInfo.length > 0) {\n                    this.uploadFilesInfo(fileInfo);\n                }\n            }\n        }\n    }\n\n    private isTargetNodeFolder(event: CustomEvent): boolean {\n        return event.detail.data.obj && event.detail.data.obj.entry.isFolder;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '@alfresco/adf-core';\n\n@Pipe({\n    name: 'adfFileUploadError',\n    pure: true\n})\nexport class FileUploadErrorPipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(errorCode: number): string {\n        return this.translation.instant(`FILE_UPLOAD.ERRORS.${errorCode || 'GENERIC'}`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { FileUtils } from '@alfresco/adf-core';\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\n@Directive({\n    selector: '[adf-file-draggable]'\n})\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    /** Enables/disables drag-and-drop functionality. */\n    @Input('adf-file-draggable')\n    enabled = true;\n\n    /** Emitted when one or more files are dragged and dropped onto the draggable element. */\n    @Output()\n    filesDropped = new EventEmitter<File[]>();\n\n    /** Emitted when a directory is dragged and dropped onto the draggable element. */\n    @Output()\n    folderEntityDropped = new EventEmitter<any>();\n\n    private cssClassName = 'adf-file-draggable__input-focus';\n    private element: HTMLElement;\n\n    constructor(el: ElementRef, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n\n    /**\n     * Method called when files is dropped in the drag and drop area.\n     * @param event DOM event.\n     */\n    onDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            // Chrome, Edge, Firefox, Opera (Files + Folders)\n            const items = event.dataTransfer.items;\n            if (items) {\n                const files: File[] = [];\n\n                for (let i = 0; i < items.length; i++) {\n                    if (items[i].webkitGetAsEntry) {\n                        const item = items[i].webkitGetAsEntry();\n\n                        if (item) {\n                            if (item.isFile) {\n                                const file = items[i].getAsFile();\n\n                                if (file) {\n                                    files.push(file);\n                                }\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    }\n                }\n                if (files.length > 0) {\n                    this.filesDropped.emit(files);\n                }\n            } else {\n                // IE, Safari, Chrome, Edge, Firefox, Opera (Files only)\n                const files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag in.\n     *\n     * @param event - DOM event.\n     */\n    onDragEnter(event: DragEvent): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            event.dataTransfer.dropEffect = 'copy';\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag out.\n     *\n     * @param event - DOM event.\n     */\n    onDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file is over the drag area.\n     *\n     * @param event\n     */\n    onDragOver(event: DragEvent): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            event.dataTransfer.dropEffect = 'copy';\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Prevent default and stop propagation of the DOM event.\n     *\n     * @param $event - DOM event.\n     */\n    preventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[adf-toggle-icon]',\n    exportAs: 'toggleIcon'\n})\nexport class ToggleIconDirective {\n    private isFocus: boolean = false;\n    private toggle: boolean = false;\n\n    @HostListener('mouseenter') onMouseEnter() {\n        if (!this.isFocus) {\n            this.toggle = true;\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (!this.isFocus) {\n            this.toggle = false;\n        }\n\n        if (this.isFocus && this.toggle) {\n            this.isFocus = false;\n            this.toggle = false;\n        }\n    }\n\n    @HostListener('focus') onFocus() {\n        this.isFocus = true;\n        this.toggle = true;\n    }\n\n    @HostListener('blur') onBlur() {\n        this.isFocus = false;\n        this.toggle = false;\n    }\n\n    get isToggled(): boolean {\n        return this.toggle;\n    }\n\n    get isFocused(): boolean {\n        return this.isFocus;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadVersionButtonComponent } from './components/upload-version-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\nimport { FileUploadErrorPipe } from './pipes/file-upload-error.pipe';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\nimport { ToggleIconDirective } from './directives/toggle-icon.directive';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        CommonModule,\n        MaterialModule,\n        A11yModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent,\n        FileUploadErrorPipe,\n        ToggleIconDirective\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent,\n        FileUploadErrorPipe,\n        ToggleIconDirective\n    ]\n})\nexport class UploadModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-search-result',\n    templateUrl: './empty-search-result.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptySearchResultComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthenticationService, ThumbnailService, SearchTextInputComponent } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnDestroy, Output,\n         QueryList, ViewEncapsulation, ViewChild, ViewChildren, TemplateRef, ContentChild } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { MatListItem } from '@angular/material/list';\nimport { EmptySearchResultComponent } from './empty-search-result.component';\n\n@Component({\n    selector: 'adf-search-control',\n    templateUrl: './search-control.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-control' }\n})\nexport class SearchControlComponent implements OnDestroy {\n\n    /** Toggles highlighting of the search term in the results. */\n    @Input()\n    highlight: boolean = false;\n\n    /** Type of the input field to render, e.g. \"search\" or \"text\" (default). */\n    @Input()\n    inputType: string = 'text';\n\n    /** Toggles \"find-as-you-type\" suggestions for possible matches. */\n    @Input()\n    liveSearchEnabled: boolean = true;\n\n    /** Toggles auto-completion of the search input field. */\n    @Input()\n    autocomplete: boolean = false;\n\n    /** Toggles whether to use an expanding search control. If false\n     * then a regular input is used.\n     */\n    @Input()\n    expandable: boolean = true;\n\n    /** Maximum number of results to show in the live search. */\n    @Input()\n    liveSearchMaxResults: number = 5;\n\n    /** Emitted when the search is submitted by pressing the ENTER key.\n     * The search term is provided as the value of the event.\n     */\n    @Output()\n    submit: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the search term is changed. The search term is provided\n     * in the 'value' property of the returned object.  If the term is less\n     * than three characters in length then it is truncated to an empty\n     * string.\n     */\n    @Output()\n    searchChange: EventEmitter<string> = new EventEmitter();\n\n    /** Emitted when a file item from the list of \"find-as-you-type\" results is selected. */\n    @Output()\n    optionClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('searchTextInput')\n    searchTextInput: SearchTextInputComponent;\n\n    @ViewChild('search')\n    searchAutocomplete: SearchComponent;\n\n    @ViewChildren(MatListItem)\n    private listResultElement: QueryList<MatListItem>;\n\n    @ContentChild(EmptySearchResultComponent)\n    emptySearchTemplate: EmptySearchResultComponent;\n\n    focusSubject = new Subject<FocusEvent>();\n    noSearchResultTemplate: TemplateRef <any> = null;\n    searchTerm: string = '';\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        public authService: AuthenticationService,\n        private thumbnailService: ThumbnailService\n    ) {}\n\n    isNoSearchTemplatePresent(): boolean {\n        return !!this.emptySearchTemplate;\n    }\n\n    ngOnDestroy(): void {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isEcmLoggedIn();\n    }\n\n    inputChange(value: string) {\n        this.searchTerm = value;\n        this.searchChange.emit(value);\n    }\n\n    getMimeTypeIcon(node: NodeEntry): string {\n        const mimeType = this.getMimeType(node);\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    getMimeType(node: NodeEntry): string {\n        let mimeType: string;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n        return mimeType;\n    }\n\n    elementClicked(item: any) {\n        if (item.entry) {\n            this.optionClicked.next(item);\n            this.focusSubject.next(new FocusEvent('blur'));\n        }\n    }\n\n    onFocus(event: FocusEvent): void {\n        this.focusSubject.next(event);\n    }\n\n    onBlur(event: FocusEvent): void {\n        const nextElement: any = this.getNextElementSibling(<Element> event.target);\n        if (!nextElement && !this.isListElement(event)) {\n            this.focusSubject.next(event);\n        }\n    }\n\n    onSelectFirstResult() {\n        if ( this.listResultElement && this.listResultElement.length > 0) {\n            const firstElement: MatListItem = <MatListItem> this.listResultElement.first;\n            firstElement._getHostElement().focus();\n        }\n    }\n\n    onRowArrowDown(event: Event): void {\n        const nextElement: any = this.getNextElementSibling(<Element> event.target);\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n\n    onRowArrowUp(event: Event): void {\n        const previousElement: any = this.getPreviousElementSibling(<Element> event.target);\n        if (previousElement) {\n            previousElement.focus();\n        } else {\n            this.focusSubject.next(new FocusEvent('focus'));\n        }\n    }\n\n    onReset(status: boolean) {\n        if (status) {\n            this.searchAutocomplete.resetResults();\n        }\n    }\n\n    private isListElement(event: any): boolean {\n        return event.relatedTarget && event.relatedTarget.children[0] && event.relatedTarget.children[0].className === 'mat-list-item-content';\n    }\n\n    private getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n\n    private getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService, SearchComponentInterface } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { NodePaging, ResultSetPaging } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    exportAs: 'searchAutocomplete',\n    host: {\n        'class': 'adf-search'\n    }\n})\nexport class SearchComponent implements SearchComponentInterface, AfterContentInit, OnChanges, OnDestroy {\n\n    @ViewChild('panel', { static: true })\n    panel: ElementRef;\n\n    @ContentChild(TemplateRef)\n    template: TemplateRef<any>;\n\n    /** Function that maps an option's value to its display value in the trigger. */\n    @Input()\n    displayWith: ((value: any) => string) | null = null;\n\n    /** Maximum number of results to show in the search. */\n    @Input()\n    maxResults: number = 20;\n\n    /** Number of results to skip from the results pagination. */\n    @Input()\n    skipResults: number = 0;\n\n    /** Search term to use when executing the search. Updating this value will\n     * run a new search and update the results.\n     */\n    @Input()\n    searchTerm: string = '';\n\n    /** CSS class for display. */\n    @Input('class')\n    set classList(classList: string) {\n        if (classList && classList.length) {\n            classList.split(' ').forEach((className) => this._classList[className.trim()] = true);\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Emitted when search results have fully loaded. */\n    @Output()\n    resultLoaded: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    showPanel: boolean = false;\n    results: NodePaging;\n\n    get isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    _isOpen: boolean = false;\n    keyPressedStream = new Subject<string>();\n    _classList: { [key: string]: boolean } = {};\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private searchService: SearchService,\n                private _elementRef: ElementRef) {\n        this.keyPressedStream\n            .pipe(\n                debounceTime(200),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(searchedWord => {\n                this.loadSearchResults(searchedWord);\n            });\n\n        searchService.dataLoaded\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(\n                nodePaging => this.onSearchDataLoaded(nodePaging),\n                error => this.onSearchDataError(error)\n            );\n    }\n\n    ngAfterContentInit() {\n        this.setVisibility();\n    }\n\n    ngOnChanges(changes) {\n        if (changes.searchTerm && changes.searchTerm.currentValue) {\n            this.loadSearchResults(changes.searchTerm.currentValue);\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    resetResults() {\n        this.cleanResults();\n        this.setVisibility();\n    }\n\n    reload() {\n        this.loadSearchResults(this.searchTerm);\n    }\n\n    private cleanResults() {\n        if (this.results) {\n            this.results = {};\n        }\n    }\n\n    private loadSearchResults(searchTerm?: string) {\n        this.resetResults();\n        if (searchTerm) {\n            this.searchService.search(searchTerm, this.maxResults, this.skipResults).subscribe(\n                (result) => this.onSearchDataLoaded(result),\n                (err) => this.onSearchDataError(err)\n            );\n        } else {\n            this.cleanResults();\n        }\n    }\n\n    onSearchDataLoaded(resultSetPaging: ResultSetPaging) {\n        if (resultSetPaging) {\n            this.results = <NodePaging> resultSetPaging;\n            this.resultLoaded.emit(this.results);\n            this.isOpen = true;\n            this.setVisibility();\n        }\n    }\n\n    onSearchDataError(error) {\n        if (error && error.status !== 400) {\n            this.results = null;\n            this.error.emit(error);\n        }\n    }\n\n    hidePanel() {\n        if (this.isOpen) {\n            this._classList['adf-search-show'] = false;\n            this._classList['adf-search-hide'] = true;\n            this.isOpen = false;\n        }\n    }\n\n    setVisibility() {\n        this.showPanel = !!this.results && !!this.results.list;\n        this._classList['adf-search-show'] = this.showPanel;\n        this._classList['adf-search-hide'] = !this.showPanel;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-search-text',\n    templateUrl: './search-text.component.html',\n    styleUrls: ['./search-text.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-text' }\n})\nexport class SearchTextComponent implements SearchWidget, OnInit {\n\n    /** The content of the text box. */\n    @Input()\n    value = '';\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    startValue: string;\n    isActive = false;\n    enableChangeUpdate = true;\n    displayValue$: Subject<string> = new Subject<string>();\n\n    ngOnInit() {\n        if (this.context && this.settings && this.settings.pattern) {\n            const pattern = new RegExp(this.settings.pattern, 'g');\n            const match = pattern.exec(this.context.queryFragments[this.id] || '');\n            if (this.settings.allowUpdateOnChange !== undefined &&\n                this.settings.allowUpdateOnChange !== null) {\n                this.enableChangeUpdate = this.settings.allowUpdateOnChange;\n            }\n\n            if (match && match.length > 1) {\n                this.value = match[1];\n            }\n\n            if (this.startValue) {\n                this.setValue(this.startValue);\n            }\n        }\n    }\n\n    clear() {\n        this.isActive = false;\n        this.value = '';\n        if (this.enableChangeUpdate) {\n            this.updateQuery(null);\n        }\n    }\n\n    reset() {\n        this.value = '';\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event) {\n        this.value = event.target.value;\n        this.isActive = !!this.value;\n        if (this.enableChangeUpdate) {\n            this.updateQuery(this.value);\n        }\n    }\n\n    private updateQuery(value: string) {\n        this.displayValue$.next(value);\n        if (this.context && this.settings && this.settings.field) {\n            this.context.queryFragments[this.id] = value ? `${this.settings.field}:'${this.getSearchPrefix()}${value}${this.getSearchSuffix()}'` : '';\n            this.context.update();\n        }\n    }\n\n    submitValues() {\n        this.updateQuery(this.value);\n    }\n\n    hasValidValue() {\n        return !!this.value;\n    }\n\n    getCurrentValue() {\n        return this.value;\n    }\n\n    setValue(value: string) {\n        this.value = value;\n        this.displayValue$.next(this.value);\n        this.submitValues();\n    }\n\n    private getSearchPrefix(): string {\n        return this.settings.searchPrefix ? this.settings.searchPrefix : '';\n    }\n\n    private getSearchSuffix(): string {\n        return this.settings.searchSuffix ? this.settings.searchSuffix : '';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport class SearchFilterList<T> implements Iterable<T> {\n\n    private filteredItems: T[] = [];\n    private _filterText: string = '';\n\n    items: T[] = [];\n    pageSize: number = DEFAULT_PAGE_SIZE;\n    currentPageSize: number = DEFAULT_PAGE_SIZE;\n\n    get filterText(): string {\n        return this._filterText;\n    }\n\n    set filterText(value: string) {\n        this._filterText = value;\n        this.applyFilter();\n    }\n\n    private _filter: (item: T) => boolean = () => true;\n\n    get filter(): (item: T) => boolean {\n        return this._filter;\n    }\n\n    set filter(value: (item: T) => boolean ) {\n        this._filter = value;\n        this.applyFilter();\n    }\n\n    private applyFilter() {\n        if (this.filter) {\n            this.filteredItems = this.items.filter(this.filter);\n        } else {\n            this.filteredItems = this.items;\n        }\n        this.currentPageSize = this.pageSize;\n    }\n\n    /** Returns visible portion of the items.  */\n    get visibleItems(): T[] {\n        return this.filteredItems.slice(0, this.currentPageSize);\n    }\n\n    /** Returns entire collection length including items not displayed on the page. */\n    get length(): number {\n        return this.items.length;\n    }\n\n    /** Detects whether more items can be displayed. */\n    get canShowMoreItems(): boolean {\n        return this.filteredItems.length > this.currentPageSize;\n    }\n\n    /** Detects whether less items can be displayed. */\n    get canShowLessItems(): boolean {\n        return this.currentPageSize > this.pageSize;\n    }\n\n    /** Detects whether content fits single page. */\n    get fitsPage(): boolean {\n        return this.pageSize >= this.filteredItems.length;\n    }\n\n    constructor(items: T[] = [], pageSize?: number) {\n        this.items = items;\n        this.filteredItems = items;\n        this.pageSize = pageSize || DEFAULT_PAGE_SIZE;\n        this.currentPageSize = pageSize || DEFAULT_PAGE_SIZE;\n    }\n\n    /** Display more items. */\n    showMoreItems() {\n        if (this.canShowMoreItems) {\n            this.currentPageSize += this.pageSize;\n        }\n    }\n\n    /** Display less items. */\n    showLessItems() {\n        if (this.canShowLessItems) {\n            this.currentPageSize -= this.pageSize;\n        }\n    }\n\n    /** Reset entire collection and page settings. */\n    clear() {\n        this.currentPageSize = this.pageSize;\n        this.items = [];\n        this.filteredItems = [];\n        this.filterText = '';\n    }\n\n    addItem(item: T) {\n        if (!item) {\n            return;\n        }\n        this.items.push(item);\n        this.applyFilter();\n    }\n\n    deleteItem(item: T) {\n        const removeIndex = this.items.indexOf(item);\n        if (removeIndex > -1) {\n            this.items.splice(removeIndex, 1);\n            this.filteredItems.splice(removeIndex, 1);\n        }\n    }\n\n    [Symbol.iterator](): Iterator<T> {\n        let pointer = 0;\n        const items = this.visibleItems;\n\n        return {\n            next(): IteratorResult<T> {\n                if (pointer < items.length) {\n                    return {\n                        done: false,\n                        value: items[pointer++]\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: null\n                    };\n                }\n            }\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatRadioChange } from '@angular/material/radio';\n\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { SearchFilterList } from '../../models/search-filter-list.model';\nimport { Subject } from 'rxjs';\n\nexport interface SearchRadioOption {\n    name: string;\n    value: string;\n}\n\n@Component({\n    selector: 'adf-search-radio',\n    templateUrl: './search-radio.component.html',\n    styleUrls: ['./search-radio.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-radio' }\n})\nexport class SearchRadioComponent implements SearchWidget, OnInit {\n\n    /** The value of the selected radio button. */\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    options: SearchFilterList<SearchRadioOption>;\n    pageSize = 5;\n    isActive = false;\n    startValue: any;\n    enableChangeUpdate: boolean;\n    displayValue$: Subject<string> = new Subject<string>();\n\n    constructor() {\n        this.options = new SearchFilterList<SearchRadioOption>();\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList<SearchRadioOption>(\n                    this.settings.options, this.pageSize\n                );\n            }\n        }\n\n        const initialValue = this.getSelectedValue();\n\n        if (initialValue !== null) {\n            this.value = initialValue;\n            this.context.queryFragments[this.id] = initialValue;\n        } else if (this.startValue !== null) {\n            this.value = initialValue;\n            this.context.queryFragments[this.id] = initialValue;\n        }\n        this.enableChangeUpdate = this.settings.allowUpdateOnChange ?? true;\n        this.updateDisplayValue();\n    }\n\n    private getSelectedValue(): string {\n        const options: any[] = this.settings['options'] || [];\n        if (options && options.length > 0) {\n            this.isActive = true;\n\n            let selected = options.find((opt) => opt.default);\n            if (!selected) {\n                selected = options[0];\n            }\n            return selected.value;\n        }\n        return null;\n    }\n\n    submitValues() {\n        this.setValue(this.value);\n        this.updateDisplayValue();\n        this.context.update();\n    }\n\n    hasValidValue() {\n        const currentValue = this.getSelectedValue();\n        return !!currentValue;\n    }\n\n    setValue(newValue: string) {\n        this.value = newValue;\n        this.context.queryFragments[this.id] = newValue;\n        if (this.enableChangeUpdate) {\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n\n    getCurrentValue() {\n        return this.getSelectedValue();\n    }\n\n    updateDisplayValue(): void {\n        const selectOptions = this.options.items.find(({ value}) => value === this.value);\n        if (selectOptions) {\n            this.displayValue$.next(selectOptions.name);\n        } else {\n            this.displayValue$.next('');\n        }\n    }\n\n    changeHandler(event: MatRadioChange) {\n        this.setValue(event.value);\n    }\n\n    clear() {\n        this.isActive = false;\n        const initialValue = this.getSelectedValue();\n        if (initialValue !== null) {\n            this.setValue(initialValue);\n        }\n    }\n\n    reset() {\n        const initialValue = this.getSelectedValue();\n        if (initialValue !== null) {\n            this.setValue(initialValue);\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { MatSliderChange } from '@angular/material/slider';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-search-slider',\n    templateUrl: './search-slider.component.html',\n    styleUrls: ['./search-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-slider' }\n})\nexport class SearchSliderComponent implements SearchWidget, OnInit {\n    isActive?: boolean;\n    startValue: any;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    step: number;\n    min: number;\n    max: number;\n    thumbLabel = false;\n    enableChangeUpdate: boolean;\n    displayValue$: Subject<string> = new Subject<string>();\n\n    /** The numeric value represented by the slider. */\n    @Input()\n    value: number | null;\n\n    ngOnInit() {\n        if (this.settings) {\n            if (this.settings.hasOwnProperty('min')) {\n                this.min = this.settings['min'];\n            }\n\n            if (this.settings.hasOwnProperty('max')) {\n                this.max = this.settings['max'];\n            }\n\n            if (this.settings.hasOwnProperty('step')) {\n                this.step = this.settings['step'];\n            }\n\n            this.thumbLabel = this.settings['thumbLabel'] ? true : false;\n            this.enableChangeUpdate = this.settings.allowUpdateOnChange ?? true;\n        }\n\n        if (this.startValue) {\n            this.setValue(this.startValue);\n        }\n    }\n\n    clear() {\n        this.value = this.min || 0;\n        if (this.enableChangeUpdate) {\n            this.updateQuery(null);\n        }\n    }\n\n    reset() {\n        this.value = this.min || 0;\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event: MatSliderChange) {\n        this.value = event.value;\n        if (this.enableChangeUpdate) {\n            this.updateQuery(this.value);\n        }\n    }\n\n    submitValues() {\n        this.updateQuery(this.value);\n    }\n\n    hasValidValue() {\n        return !!this.value;\n    }\n\n    getCurrentValue() {\n        return this.value;\n    }\n\n    setValue(value: any) {\n        this.value = value;\n        this.submitValues();\n    }\n\n    private updateQuery(value: number | null) {\n        this.displayValue$.next( this.value ? `${this.value} ${this.settings.unit ?? ''}` : '' );\n        if (this.id && this.context && this.settings && this.settings.field) {\n            if (value === null) {\n                this.context.queryFragments[this.id] = '';\n            } else {\n                this.context.queryFragments[this.id] = `${this.settings.field}:[0 TO ${value}]`;\n            }\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\nexport class LiveErrorStateMatcher implements ErrorStateMatcher {\n\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || (!control.pristine && isSubmitted)));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-search-number-range',\n    templateUrl: './search-number-range.component.html',\n    styleUrls: ['./search-number-range.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-number-range' }\n})\nexport class SearchNumberRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n\n    field: string;\n    format = '[{FROM} TO {TO}]';\n\n    isActive = false;\n    startValue: any;\n\n    validators: Validators;\n    enableChangeUpdate: boolean;\n    displayValue$: Subject<string> = new Subject<string>();\n\n    ngOnInit(): void {\n\n        if (this.settings) {\n            this.field = this.settings.field;\n            this.format = this.settings.format || '[{FROM} TO {TO}]';\n        }\n\n        this.validators = Validators.compose([\n            Validators.required,\n            Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n            Validators.min(0)\n        ]);\n\n        if (this.startValue) {\n            this.from = new FormControl(this.startValue['from'], this.validators);\n            this.to = new FormControl(this.startValue['to'], this.validators);\n        } else {\n            this.from = new FormControl('', this.validators);\n            this.to = new FormControl('', this.validators);\n        }\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        }, this.formValidator);\n\n        this.enableChangeUpdate = this.settings?.allowUpdateOnChange ?? true;\n        this.updateDisplayValue();\n    }\n\n    formValidator(formGroup: FormGroup) {\n        return parseInt(formGroup.get('from').value, 10) < parseInt(formGroup.get('to').value, 10) ? null : {'mismatch': true};\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.field) {\n            this.updateDisplayValue();\n            this.isActive = true;\n\n            const map = new Map<string, string>();\n            map.set('FROM', model.from);\n            map.set('TO', model.to);\n\n            const value = this.formatString(this.format, map);\n\n            this.context.queryFragments[this.id] = `${this.field}:${value}`;\n            this.context.update();\n        }\n    }\n\n    private formatString(str: string, map: Map<string, string>): string {\n        let result = str;\n\n        map.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n\n    submitValues() {\n        this.apply(this.form.value, this.form.valid);\n    }\n\n    hasValidValue() {\n        return this.form.valid;\n    }\n\n    getCurrentValue() {\n        return this.form.value;\n    }\n\n    updateDisplayValue(): void {\n        if (this.form.invalid || this.form.pristine) {\n            this.displayValue$.next('');\n        } else {\n            this.displayValue$.next(`${this.form.value.from} - ${this.form.value.to} ${this.settings.unit ?? ''}`);\n        }\n    }\n\n    setValue(value: any) {\n        this.form['from'].setValue(value);\n        this.form['to'].setValue(value);\n        this.updateDisplayValue();\n    }\n\n    clear() {\n        this.isActive = false;\n\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.updateDisplayValue();\n            if (this.enableChangeUpdate) {\n                this.context.update();\n            }\n        }\n    }\n\n    reset() {\n        this.clear();\n        if (this.id && this.context) {\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { SearchFilterList } from '../../models/search-filter-list.model';\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Subject } from 'rxjs';\n\nexport interface SearchListOption {\n    name: string;\n    value: string;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'adf-search-check-list',\n    templateUrl: './search-check-list.component.html',\n    styleUrls: ['./search-check-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-check-list' }\n})\nexport class SearchCheckListComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    options: SearchFilterList<SearchListOption>;\n    operator: string = 'OR';\n    startValue: SearchListOption = null;\n    pageSize = 5;\n    isActive = false;\n    enableChangeUpdate = true;\n    displayValue$: Subject<string> = new Subject<string>();\n\n    constructor(private translationService: TranslationService) {\n        this.options = new SearchFilterList<SearchListOption>();\n    }\n\n    ngOnInit(): void {\n        if (this.settings) {\n            this.operator = this.settings.operator || 'OR';\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList(this.settings.options, this.pageSize);\n            }\n            this.enableChangeUpdate = this.settings.allowUpdateOnChange ?? true;\n        }\n\n        if (this.startValue) {\n            this.setValue(this.startValue);\n        }\n    }\n\n    clear() {\n        this.isActive = false;\n        this.clearOptions();\n        if (this.id && this.context && this.enableChangeUpdate) {\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n\n    clearOptions() {\n        this.options.items.forEach((opt) => {\n            opt.checked = false;\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n        }\n    }\n\n    reset() {\n        this.isActive = false;\n        this.clearOptions();\n        if (this.id && this.context) {\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n\n    updateDisplayValue(): void {\n        const displayValue = this.options.items\n            .filter((option) => option.checked)\n            .map(({name}) => this.translationService.instant(name))\n            .join(', ');\n        this.displayValue$.next(displayValue);\n    }\n\n    changeHandler(event: MatCheckboxChange, option: any) {\n        option.checked = event.checked;\n        const checkedValues = this.getCheckedValues();\n        this.isActive = !!checkedValues.length;\n        if (this.enableChangeUpdate) {\n            this.submitValues();\n        }\n    }\n\n    hasValidValue() {\n        const checkedValues = this.getCheckedValues();\n        return !!checkedValues.length;\n    }\n\n    getCurrentValue() {\n        return this.getCheckedValues();\n    }\n\n    setValue(value: any) {\n        this.options.items.filter((item) => value.includes(item.value))\n            .map((item) => item.checked = true);\n        this.submitValues();\n    }\n\n    private getCheckedValues() {\n        return this.options.items\n            .filter((option) => option.checked)\n            .map((option) => option.value);\n    }\n\n    submitValues() {\n        const checkedValues = this.getCheckedValues();\n        const query = checkedValues.join(` ${this.operator} `);\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = query;\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport {\n    MOMENT_DATE_FORMATS,\n    MomentDateAdapter,\n    UserPreferencesService,\n    UserPreferenceValues\n} from '@alfresco/adf-core';\n\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Moment } from 'moment';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface DateRangeValue {\n    from: string;\n    to: string;\n}\n\ndeclare let moment: any;\n\nconst DEFAULT_FORMAT_DATE: string = 'DD/MM/YYYY';\n\n@Component({\n    selector: 'adf-search-date-range',\n    templateUrl: './search-date-range.component.html',\n    styleUrls: ['./search-date-range.component.scss'],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-date-range' }\n})\nexport class SearchDateRangeComponent implements SearchWidget, OnInit, OnDestroy {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    datePickerFormat: string;\n    maxDate: any;\n    fromMaxDate: any;\n    isActive = false;\n    startValue: any;\n    enableChangeUpdate: boolean;\n    displayValue$: Subject<string> = new Subject<string>();\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    getFromValidationMessage(): string {\n        return this.from.hasError('invalidOnChange') || this.hasParseError(this.from) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.from.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.from.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    getToValidationMessage(): string {\n        return this.to.hasError('invalidOnChange') || this.hasParseError(this.to) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.to.hasError('matDatepickerMin') ? 'SEARCH.FILTER.VALIDATION.NO-DAYS' :\n            this.to.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.to.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    ngOnInit() {\n        this.datePickerFormat = this.settings?.dateFormat ? this.settings.dateFormat : DEFAULT_FORMAT_DATE;\n\n        const customDateAdapter = <MomentDateAdapter> <any> this.dateAdapter;\n        customDateAdapter.overrideDisplayFormat = this.datePickerFormat;\n\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.setLocale(locale));\n\n        const validators = Validators.compose([\n            Validators.required\n        ]);\n\n        if (this.settings && this.settings.maxDate) {\n            if (this.settings.maxDate === 'today') {\n                this.maxDate = this.dateAdapter.today().endOf('day');\n            } else {\n                this.maxDate = moment(this.settings.maxDate).endOf('day');\n            }\n        }\n\n        if (this.startValue) {\n            const splitValue = this.startValue.split('||');\n            const fromValue = this.dateAdapter.parse(splitValue[0], this.datePickerFormat);\n            const toValue = this.dateAdapter.parse(splitValue[1], this.datePickerFormat);\n            this.from = new FormControl(fromValue, validators);\n            this.to = new FormControl(toValue, validators);\n        } else {\n            this.from = new FormControl('', validators);\n            this.to = new FormControl('', validators);\n        }\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        });\n\n        this.setFromMaxDate();\n        this.enableChangeUpdate = this.settings?.allowUpdateOnChange ?? true;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.settings && this.settings.field) {\n            this.isActive = true;\n\n            const start = moment(model.from).startOf('day').format();\n            const end = moment(model.to).endOf('day').format();\n\n            this.context.queryFragments[this.id] = `${this.settings.field}:['${start}' TO '${end}']`;\n\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n\n    submitValues() {\n        this.apply(this.form.value, this.form.valid);\n    }\n\n    hasValidValue(): boolean {\n        return this.form.valid;\n    }\n\n    getCurrentValue(): DateRangeValue {\n        return {\n            from: this.dateAdapter.format(this.form.value.from, this.datePickerFormat),\n            to: this.dateAdapter.format(this.form.value.from, this.datePickerFormat)\n        };\n    }\n\n    updateDisplayValue(): void {\n        if (this.form.invalid || this.form.pristine) {\n            this.displayValue$.next('');\n        } else {\n            this.displayValue$.next(`${this.dateAdapter.format(this.form.value.from, this.datePickerFormat)} - ${this.dateAdapter.format(this.form.value.to, this.datePickerFormat)}`);\n        }\n    }\n\n    setValue(parsedDate: string) {\n        const splitValue = parsedDate.split('||');\n        const fromValue = this.dateAdapter.parse(splitValue[0], this.datePickerFormat);\n        const toValue = this.dateAdapter.parse(splitValue[1], this.datePickerFormat);\n        this.from.setValue(fromValue);\n        this.from.markAsDirty();\n        this.from.markAsTouched();\n        this.to.setValue(toValue);\n        this.to.markAsDirty();\n        this.to.markAsTouched();\n        this.submitValues();\n    }\n    clear() {\n        this.isActive = false;\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            if (this.enableChangeUpdate) {\n                this.updateQuery();\n            }\n        }\n        this.setFromMaxDate();\n    }\n\n    reset() {\n        this.clear();\n        this.updateQuery();\n    }\n\n    private updateQuery() {\n        if (this.id && this.context) {\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n\n    onChangedHandler(event: any, formControl: FormControl) {\n\n        const inputValue = event.value;\n        const formatDate = this.dateAdapter.parse(inputValue, this.datePickerFormat);\n        if (formatDate && formatDate.isValid()) {\n            formControl.setValue(formatDate);\n        } else if (formatDate) {\n            formControl.setErrors({\n                'invalidOnChange': true\n            });\n        }\n\n        this.setFromMaxDate();\n    }\n\n    setLocale(locale) {\n        this.dateAdapter.setLocale(locale);\n        moment.locale(locale);\n    }\n\n    hasParseError(formControl): boolean {\n        return formControl.hasError('matDatepickerParse') && formControl.getError('matDatepickerParse').text;\n    }\n\n    forcePlaceholder(event: any) {\n        event.srcElement.click();\n    }\n\n    setFromMaxDate() {\n        this.fromMaxDate = (!this.to.value || this.maxDate && (moment(this.maxDate).isBefore(this.to.value))) ? this.maxDate : moment(this.to.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserPreferencesService, UserPreferenceValues } from '@alfresco/adf-core';\n\nimport { SearchWidget } from '../../models/search-widget.interface';\nimport { SearchWidgetSettings } from '../../models/search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Moment } from 'moment';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\n\nexport interface DatetimeRangeValue {\n    from: string;\n    to: string;\n}\n\ndeclare let moment: any;\n\nconst DEFAULT_DATETIME_FORMAT: string = 'DD/MM/YYYY HH:mm';\n\n@Component({\n    selector: 'adf-search-datetime-range',\n    templateUrl: './search-datetime-range.component.html',\n    styleUrls: ['./search-datetime-range.component.scss'],\n    providers: [\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-date-range' }\n})\nexport class SearchDatetimeRangeComponent implements SearchWidget, OnInit, OnDestroy {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    datetimePickerFormat: string;\n    maxDatetime: any;\n    fromMaxDatetime: any;\n    isActive = false;\n    startValue: any;\n    enableChangeUpdate: boolean;\n    displayValue$: Subject<string> = new Subject<string>();\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private dateAdapter: DatetimeAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    getFromValidationMessage(): string {\n        return this.from.hasError('invalidOnChange') || this.hasParseError(this.from) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATETIME' :\n            this.from.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATETIME' :\n            this.from.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    getToValidationMessage(): string {\n        return this.to.hasError('invalidOnChange') || this.hasParseError(this.to) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATETIME' :\n            this.to.hasError('matDatepickerMin') ? 'SEARCH.FILTER.VALIDATION.NO-DAYS' :\n            this.to.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATETIME' :\n            this.to.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    ngOnInit() {\n        this.datetimePickerFormat = this.settings?.datetimeFormat ? this.settings.datetimeFormat : DEFAULT_DATETIME_FORMAT;\n\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.setLocale(locale));\n\n        const validators = Validators.compose([\n            Validators.required\n        ]);\n\n        if (this.settings && this.settings.maxDatetime) {\n            this.maxDatetime = moment(this.settings.maxDatetime);\n        }\n\n        if (this.startValue) {\n            const splitValue = this.startValue.split('||');\n            const fromValue = this.dateAdapter.parse(splitValue[0], this.datetimePickerFormat);\n            const toValue = this.dateAdapter.parse(splitValue[1], this.datetimePickerFormat);\n            this.from = new FormControl(fromValue, validators);\n            this.to = new FormControl(toValue, validators);\n        } else {\n            this.from = new FormControl('', validators);\n            this.to = new FormControl('', validators);\n        }\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        });\n\n        this.setFromMaxDatetime();\n        this.enableChangeUpdate = this.settings?.allowUpdateOnChange ?? true;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.settings && this.settings.field) {\n            this.isActive = true;\n\n            const start = moment.utc(model.from).startOf('minute').format();\n            const end = moment.utc(model.to).endOf('minute').format();\n\n            this.context.queryFragments[this.id] = `${this.settings.field}:['${start}' TO '${end}']`;\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n\n    submitValues() {\n        this.apply(this.form.value, this.form.valid);\n    }\n\n    hasValidValue(): boolean {\n        return this.form.valid;\n    }\n\n    getCurrentValue(): DatetimeRangeValue {\n        return {\n            from: this.dateAdapter.format(this.form.value.from, this.datetimePickerFormat),\n            to: this.dateAdapter.format(this.form.value.to, this.datetimePickerFormat)\n        };\n    }\n\n    updateDisplayValue(): void {\n        if (this.form.invalid || this.form.pristine) {\n            this.displayValue$.next('');\n        } else {\n            this.displayValue$.next(`${this.dateAdapter.format(this.form.value.from, this.datetimePickerFormat)} - ${this.dateAdapter.format(this.form.value.to, this.datetimePickerFormat)}`);\n        }\n    }\n\n    setValue(parsedDate: string) {\n        const splitValue = parsedDate.split('||');\n        const fromValue = this.dateAdapter.parse(splitValue[0], this.datetimePickerFormat);\n        const toValue = this.dateAdapter.parse(splitValue[1], this.datetimePickerFormat);\n        this.from.setValue(fromValue);\n        this.from.markAsDirty();\n        this.from.markAsTouched();\n        this.to.setValue(toValue);\n        this.to.markAsDirty();\n        this.to.markAsTouched();\n        this.submitValues();\n    }\n\n    clear() {\n        this.isActive = false;\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n        }\n\n        if (this.id && this.context && this.enableChangeUpdate) {\n            this.updateQuery();\n        }\n        this.setFromMaxDatetime();\n    }\n\n    reset() {\n        this.clear();\n        this.updateQuery();\n    }\n\n    private updateQuery() {\n        if (this.id && this.context) {\n            this.updateDisplayValue();\n            this.context.update();\n        }\n    }\n\n    onChangedHandler(event: any, formControl: FormControl) {\n\n        const inputValue = event.value;\n        const formatDate = this.dateAdapter.parse(inputValue, this.datetimePickerFormat);\n        if (formatDate && formatDate.isValid()) {\n            formControl.setValue(formatDate);\n        } else if (formatDate) {\n            formControl.setErrors({\n                'invalidOnChange': true\n            });\n        }\n\n        this.setFromMaxDatetime();\n    }\n\n    setLocale(locale) {\n        this.dateAdapter.setLocale(locale);\n        moment.locale(locale);\n    }\n\n    hasParseError(formControl): boolean {\n        return formControl.hasError('matDatepickerParse') && formControl.getError('matDatepickerParse').text;\n    }\n\n    forcePlaceholder(event: any) {\n        event.srcElement.click();\n    }\n\n    setFromMaxDatetime() {\n        this.fromMaxDatetime = (!this.to.value || this.maxDatetime && (moment(this.maxDatetime).isBefore(this.to.value))) ? this.maxDatetime : moment(this.to.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { SearchTextComponent } from '../components/search-text/search-text.component';\nimport { SearchRadioComponent } from '../components/search-radio/search-radio.component';\nimport { SearchSliderComponent } from '../components/search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from '../components/search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from '../components/search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from '../components/search-date-range/search-date-range.component';\nimport { SearchDatetimeRangeComponent } from '../components/search-datetime-range/search-datetime-range.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchFilterService {\n\n    /**\n     * Contains string-to-type mappings for registered widgets.\n     */\n    widgets: { [id: string]: Type<{}> } = {\n        'text': SearchTextComponent,\n        'radio': SearchRadioComponent,\n        'slider': SearchSliderComponent,\n        'number-range': SearchNumberRangeComponent,\n        'check-list': SearchCheckListComponent,\n        'date-range': SearchDateRangeComponent,\n        'datetime-range': SearchDatetimeRangeComponent\n    };\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ViewChild,\n    ViewContainerRef,\n    OnInit,\n    OnDestroy,\n    ComponentRef,\n    ComponentFactoryResolver,\n    Inject,\n    SimpleChanges,\n    OnChanges\n} from '@angular/core';\nimport { SearchFilterService } from '../../services/search-filter.service';\nimport { BaseQueryBuilderService } from '../../services/base-query-builder.service';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'adf-search-widget-container',\n    template: '<div #content></div>'\n})\nexport class SearchWidgetContainerComponent implements OnInit, OnDestroy, OnChanges {\n\n    @ViewChild('content', { read: ViewContainerRef, static: true })\n    content: ViewContainerRef;\n\n    @Input()\n    id: string;\n\n    @Input()\n    selector: string;\n\n    @Input()\n    settings: any;\n\n    @Input()\n    config: any;\n\n    @Input()\n    value: any;\n\n    componentRef: ComponentRef<any>;\n\n    constructor(\n        private searchFilterService: SearchFilterService,\n        @Inject(SEARCH_QUERY_SERVICE_TOKEN) private queryBuilder: BaseQueryBuilderService,\n        private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        const componentType = this.searchFilterService.widgets[this.selector];\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.setupWidget(this.componentRef);\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['value']?.currentValue && this.componentRef?.instance) {\n            this.componentRef.instance.isActive = true;\n            this.componentRef.instance.setValue(changes['value'].currentValue);\n        }\n    }\n\n    private setupWidget(ref: ComponentRef<any>) {\n        if (ref && ref.instance) {\n            ref.instance.id = this.id;\n            ref.instance.settings = {...this.settings};\n            ref.instance.context = this.queryBuilder;\n            if (this.value) {\n                ref.instance.isActive = true;\n                ref.instance.startValue = this.value;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    applyInnerWidget() {\n        this.componentRef.instance.submitValues();\n    }\n\n    setValue(currentValue: string | Object) {\n        this.componentRef.instance.isActive = true;\n        this.componentRef.instance.setValue(currentValue);\n    }\n\n    hasValueSelected() {\n        return this.componentRef.instance.hasValidValue();\n    }\n\n    getCurrentValue() {\n        return this.componentRef.instance.getCurrentValue();\n    }\n\n    getDisplayValue(): Observable<string> | null {\n        if (!this.componentRef?.instance) {\n            return null;\n        }\n        return this.componentRef.instance.displayValue$;\n    }\n\n    resetInnerWidget() {\n        if (this.componentRef && this.componentRef.instance) {\n            this.componentRef.instance.reset();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport { SearchConfiguration } from '../models/search-configuration.interface';\nimport { BaseQueryBuilderService } from './base-query-builder.service';\n\n@Injectable()\nexport class SearchQueryBuilderService extends BaseQueryBuilderService {\n\n    public isFilterServiceActive(): boolean {\n        return false;\n    }\n\n    constructor(appConfig: AppConfigService, alfrescoApiService: AlfrescoApiService) {\n        super(appConfig, alfrescoApiService);\n    }\n\n    public loadConfiguration(): SearchConfiguration {\n        return this.appConfig.get<SearchConfiguration>('search');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { FacetField } from '../models/facet-field.interface';\nimport { Subject } from 'rxjs';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../search-query-service.token';\nimport { SearchQueryBuilderService } from './search-query-builder.service';\nimport { SearchService, TranslationService } from '@alfresco/adf-core';\nimport { takeUntil } from 'rxjs/operators';\nimport { GenericBucket, GenericFacetResponse, ResultSetContext, ResultSetPaging } from '@alfresco/js-api';\nimport { SearchFilterList } from '../models/search-filter-list.model';\nimport { FacetFieldBucket } from '../models/facet-field-bucket.interface';\n\nexport interface SelectedBucket {\n    field: FacetField;\n    bucket: FacetFieldBucket;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchFacetFiltersService implements OnDestroy {\n\n    /** All facet field items to be displayed in the component. These are updated according to the response.\n     *  When a new search is performed, the already existing items are updated with the new bucket count values and\n     *  the newly received items are added to the responseFacets.\n     */\n    responseFacets: FacetField[] = null;\n\n    /** shows the facet chips */\n    selectedBuckets: SelectedBucket[] = [];\n\n    private DEFAULT_PAGE_SIZE = 5;\n    private readonly facetQueriesPageSize = this.DEFAULT_PAGE_SIZE;\n    private readonly onDestroy$ = new Subject<boolean>();\n\n    constructor(@Inject(SEARCH_QUERY_SERVICE_TOKEN) public queryBuilder: SearchQueryBuilderService,\n                private searchService: SearchService,\n                private translationService: TranslationService) {\n        if (queryBuilder.config && queryBuilder.config.facetQueries) {\n            this.facetQueriesPageSize = queryBuilder.config.facetQueries.pageSize || this.DEFAULT_PAGE_SIZE;\n        }\n\n        this.queryBuilder.configUpdated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n                this.selectedBuckets = [];\n                this.responseFacets = null;\n            });\n\n        this.queryBuilder.updated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((query) => this.queryBuilder.execute(query));\n\n        this.queryBuilder.executed\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((resultSetPaging: ResultSetPaging) => {\n                this.onDataLoaded(resultSetPaging);\n                this.searchService.dataLoaded.next(resultSetPaging);\n            });\n    }\n\n    onDataLoaded(data: any) {\n        const context = data.list.context;\n\n        if (context) {\n            this.parseFacets(context);\n        } else {\n            this.responseFacets = null;\n        }\n    }\n\n    private parseFacets(context: ResultSetContext) {\n        this.parseFacetFields(context);\n        this.parseFacetIntervals(context);\n        this.parseFacetQueries(context);\n    }\n\n    private parseFacetItems(context: ResultSetContext, configFacetFields: FacetField[], itemType: string) {\n        configFacetFields.forEach((field) => {\n            const responseField = this.findFacet(context, itemType, field.label);\n            const responseBuckets = this.getResponseBuckets(responseField, field)\n                .filter(this.getFilterByMinCount(field.mincount));\n            const alreadyExistingField = this.findResponseFacet(itemType, field.label);\n\n            if (alreadyExistingField) {\n                const alreadyExistingBuckets = alreadyExistingField.buckets && alreadyExistingField.buckets.items || [];\n\n                this.updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets);\n            } else if (responseField) {\n                if (responseBuckets.length > 0) {\n                    const bucketList = new SearchFilterList<FacetFieldBucket>(responseBuckets, field.pageSize);\n                    bucketList.filter = this.getBucketFilterFunction(bucketList);\n\n                    if (!this.responseFacets) {\n                        this.responseFacets = [];\n                    }\n                    this.responseFacets.push(<FacetField> {\n                        ...field,\n                        type: responseField.type || itemType,\n                        label: field.label,\n                        pageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                        currentPageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                        buckets: bucketList\n                    });\n                }\n            }\n        });\n    }\n\n    private parseFacetFields(context: ResultSetContext) {\n        const configFacetFields = this.queryBuilder.config.facetFields && this.queryBuilder.config.facetFields.fields || [];\n        this.parseFacetItems(context, configFacetFields, 'field');\n    }\n\n    private parseFacetIntervals(context: ResultSetContext) {\n        const configFacetIntervals = this.queryBuilder.config.facetIntervals && this.queryBuilder.config.facetIntervals.intervals || [];\n        this.parseFacetItems(context, configFacetIntervals, 'interval');\n    }\n\n    private parseFacetQueries(context: ResultSetContext) {\n        const facetQuerySetting = this.queryBuilder.config.facetQueries?.settings || {};\n        const configFacetQueries = this.queryBuilder.config.facetQueries && this.queryBuilder.config.facetQueries.queries || [];\n        const configGroups = configFacetQueries.reduce((acc, query) => {\n            const group = this.queryBuilder.getQueryGroup(query);\n            if (acc[group]) {\n                acc[group].push(query);\n            } else {\n                acc[group] = [query];\n            }\n            return acc;\n        }, []);\n\n        const mincount = this.queryBuilder.config.facetQueries && this.queryBuilder.config.facetQueries.mincount;\n        const mincountFilter = this.getFilterByMinCount(mincount);\n\n        Object.keys(configGroups).forEach((group) => {\n            const responseField = this.findFacet(context, 'query', group);\n            const responseBuckets = this.getResponseQueryBuckets(responseField, configGroups[group])\n                .filter(mincountFilter);\n            const alreadyExistingField = this.findResponseFacet('query', group);\n\n            if (alreadyExistingField) {\n                const alreadyExistingBuckets = alreadyExistingField.buckets && alreadyExistingField.buckets.items || [];\n\n                this.updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets);\n            } else if (responseField) {\n                if (responseBuckets.length > 0) {\n                    const bucketList = new SearchFilterList<FacetFieldBucket>(responseBuckets, this.facetQueriesPageSize);\n                    bucketList.filter = this.getBucketFilterFunction(bucketList);\n\n                    if (!this.responseFacets) {\n                        this.responseFacets = [];\n                    }\n                    this.responseFacets.push(<FacetField> {\n                        field: group,\n                        type: responseField.type || 'query',\n                        label: group,\n                        pageSize: this.DEFAULT_PAGE_SIZE,\n                        currentPageSize: this.DEFAULT_PAGE_SIZE,\n                        buckets: bucketList,\n                        settings: facetQuerySetting\n                    });\n                }\n            }\n        });\n\n    }\n\n    private getResponseBuckets(responseField: GenericFacetResponse, configField: FacetField): FacetFieldBucket[] {\n        return ((responseField && responseField.buckets) || []).map((respBucket) => {\n\n            respBucket['count'] = this.getCountValue(respBucket);\n            respBucket.filterQuery = respBucket.filterQuery || this.getCorrespondingFilterQuery(configField, respBucket.label);\n            return <FacetFieldBucket> {\n                ...respBucket,\n                checked: false,\n                display: respBucket.display,\n                label: respBucket.label\n            };\n        });\n    }\n\n    private getResponseQueryBuckets(responseField: GenericFacetResponse, configGroup: any): FacetFieldBucket[] {\n        return (configGroup || []).map((query) => {\n            const respBucket = ((responseField && responseField.buckets) || [])\n                .find((bucket) => bucket.label === query.label) || {};\n\n            respBucket['count'] = this.getCountValue(respBucket);\n            return <FacetFieldBucket> {\n                ...respBucket,\n                checked: false,\n                display: respBucket.display,\n                label: respBucket.label\n            };\n        });\n    }\n\n    private getCountValue(bucket: GenericBucket): number {\n        return (!!bucket && !!bucket.metrics && bucket.metrics[0]?.value?.count) || 0;\n    }\n\n    getBucketCountDisplay(bucket: FacetFieldBucket): string {\n        return bucket.count === null ? '' : `(${bucket.count})`;\n    }\n\n    private getFilterByMinCount(mincountInput: number) {\n        return (bucket) => {\n            let mincount = mincountInput;\n            if (mincount === undefined) {\n                mincount = 1;\n            }\n            return bucket.count >= mincount;\n        };\n    }\n\n    private getCorrespondingFilterQuery(configFacetItem: FacetField, bucketLabel: string): string {\n        let filterQuery = null;\n\n        if (configFacetItem.field && bucketLabel) {\n\n            if (configFacetItem.sets) {\n                const configSet = configFacetItem.sets.find((set) => bucketLabel === set.label);\n\n                if (configSet) {\n                    filterQuery = this.buildIntervalQuery(configFacetItem.field, configSet);\n                }\n\n            } else {\n                filterQuery = `${configFacetItem.field}:\"${bucketLabel}\"`;\n            }\n        }\n\n        return filterQuery;\n    }\n\n    private buildIntervalQuery(fieldName: string, interval: any): string {\n        const start = interval.start;\n        const end = interval.end;\n        const startLimit = (interval.startInclusive === undefined || interval.startInclusive === true) ? '[' : '<';\n        const endLimit = (interval.endInclusive === undefined || interval.endInclusive === true) ? ']' : '>';\n\n        return `${fieldName}:${startLimit}\"${start}\" TO \"${end}\"${endLimit}`;\n    }\n\n    private findFacet(context: ResultSetContext, itemType: string, fieldLabel: string): GenericFacetResponse {\n        return (context.facets || []).find((response) => response.type === itemType && response.label === fieldLabel) || {};\n    }\n\n    private findResponseFacet(itemType: string, fieldLabel: string): FacetField {\n        return (this.responseFacets || []).find((response) => response.type === itemType && response.label === fieldLabel);\n    }\n\n    private updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets) {\n        const bucketsToDelete = [];\n\n        alreadyExistingBuckets\n            .map((bucket) => {\n                const responseBucket = ((responseField && responseField.buckets) || []).find((respBucket) => respBucket.label === bucket.label);\n\n                if (!responseBucket) {\n                    bucketsToDelete.push(bucket);\n                }\n                bucket.count = this.getCountValue(responseBucket);\n                return bucket;\n            });\n\n        const hasSelection = this.selectedBuckets\n            .find((selBuckets) => alreadyExistingField.label === selBuckets.field.label && alreadyExistingField.type === selBuckets.field.type);\n\n        if (!hasSelection && bucketsToDelete.length) {\n            bucketsToDelete.forEach((bucket) => {\n                alreadyExistingField.buckets.deleteItem(bucket);\n            });\n        }\n\n        responseBuckets.forEach((respBucket) => {\n            const existingBucket = alreadyExistingBuckets.find((oldBucket) => oldBucket.label === respBucket.label);\n\n            if (!existingBucket) {\n                alreadyExistingField.buckets.addItem(respBucket);\n            }\n        });\n    }\n\n    private getBucketFilterFunction(bucketList) {\n        return (bucket: FacetFieldBucket): boolean => {\n            if (bucket && bucketList.filterText) {\n                const pattern = (bucketList.filterText || '').toLowerCase();\n                const label = (this.translationService.instant(bucket.display) || this.translationService.instant(bucket.label)).toLowerCase();\n                return this.queryBuilder.config.filterWithContains ? label.indexOf(pattern) !== -1 : label.startsWith(pattern);\n            }\n            return true;\n        };\n    }\n\n    unselectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = false;\n            this.queryBuilder.removeUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    /* update adf-search-chip-list component view */\n    updateSelectedBuckets() {\n        if (this.responseFacets) {\n            this.selectedBuckets = [];\n            for (const field of this.responseFacets) {\n                if (field.buckets) {\n                    this.selectedBuckets.push(\n                        ...this.queryBuilder.getUserFacetBuckets(field.field)\n                            .filter((bucket) => bucket.checked)\n                            .map((bucket) => {\n                                return {field, bucket};\n                            })\n                    );\n                }\n            }\n        } else {\n            this.selectedBuckets = [];\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n    resetAllSelectedBuckets() {\n        this.responseFacets.forEach((field) => {\n            if (field && field.buckets) {\n                for (const bucket of field.buckets.items) {\n                    bucket.checked = false;\n                    this.queryBuilder.removeUserFacetBucket(field, bucket);\n                }\n                this.updateSelectedBuckets();\n            }\n        });\n        this.queryBuilder.update();\n    }\n\n    resetQueryFragments() {\n        this.queryBuilder.queryFragments = {};\n        this.queryBuilder.resetToDefaults();\n    }\n\n    reset() {\n        this.responseFacets = [];\n        this.selectedBuckets = [];\n        this.queryBuilder.resetToDefaults();\n        this.queryBuilder.update();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, Input, ViewEncapsulation } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { FacetFieldBucket } from '../../models/facet-field-bucket.interface';\nimport { FacetField } from '../../models/facet-field.interface';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\nimport { SearchFacetFiltersService } from '../../services/search-facet-filters.service';\n\n@Component({\n    selector: 'adf-search-filter',\n    templateUrl: './search-filter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-filter' }\n})\nexport class SearchFilterComponent {\n\n    /** Toggles whether to show or not the context facet filters. */\n    @Input()\n    showContextFacets: boolean = true;\n\n    facetQueriesLabel: string = 'Facet Queries';\n    facetExpanded = {\n        'default': false\n    };\n    displayResetButton: boolean;\n\n    constructor(@Inject(SEARCH_QUERY_SERVICE_TOKEN) public queryBuilder: SearchQueryBuilderService,\n                public facetFiltersService: SearchFacetFiltersService) {\n        if (queryBuilder.config && queryBuilder.config.facetQueries) {\n            this.facetQueriesLabel = queryBuilder.config.facetQueries.label || 'Facet Queries';\n            this.facetExpanded['query'] = queryBuilder.config.facetQueries.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetFields) {\n            this.facetExpanded['field'] = queryBuilder.config.facetFields.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetIntervals) {\n            this.facetExpanded['interval'] = queryBuilder.config.facetIntervals.expanded;\n        }\n        this.displayResetButton = this.queryBuilder.config && !!this.queryBuilder.config.resetButton;\n    }\n\n    shouldExpand(field: FacetField): boolean {\n        return this.facetExpanded[field.type] || this.facetExpanded['default'];\n    }\n\n    getBucketCountDisplay(bucket: FacetFieldBucket): string {\n        return bucket.count === null ? '' : `(${bucket.count})`;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { SearchFilterComponent } from '../../components/search-filter/search-filter.component';\nimport { SearchFacetFiltersService } from '../../services/search-facet-filters.service';\n\n@Component({\n    selector: 'adf-search-chip-list',\n    templateUrl: './search-chip-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-chip-list' }\n})\nexport class SearchChipListComponent {\n\n    @Input()\n    /** @deprecated This is not required since ADF 4.5.0 */\n    searchFilter: SearchFilterComponent;\n\n    /** Flag used to enable the display of a clear-all-filters button. */\n    @Input()\n    clearAll: boolean = false;\n\n    constructor(public facetFiltersService: SearchFacetFiltersService) {}\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { SearchCategory } from '../search/models/search-category.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentNodeSelectorPanelService {\n\n    propertyTypes = ['d:text', 'd:date', 'd:datetime'];\n    modelPropertyTypeToSearchFilterTypeMap = new Map<string, string> ();\n    customModels: any[];\n\n    constructor() {\n        this.modelPropertyTypeToSearchFilterTypeMap.set(this.propertyTypes[0], 'text');\n        this.modelPropertyTypeToSearchFilterTypeMap.set(this.propertyTypes[1], 'date-range');\n        this.modelPropertyTypeToSearchFilterTypeMap.set(this.propertyTypes[2], 'datetime-range');\n    }\n\n    convertCustomModelPropertiesToSearchCategories(): SearchCategory[] {\n        const searchConfig: SearchCategory[] = [];\n        this.customModels?.forEach( (propertyModel) => {\n            searchConfig.push(this.convertModelPropertyIntoSearchFilter(propertyModel));\n        });\n\n        return searchConfig;\n    }\n\n    convertModelPropertyIntoSearchFilter(modelProperty: any): SearchCategory {\n        let filterSearch: SearchCategory;\n        if (this.isTypeSupported(modelProperty.dataType)) {\n            filterSearch = {\n                id : modelProperty.prefixedName,\n                name: modelProperty.prefixedName,\n                expanded: false,\n                enabled: true,\n                component: {\n                    selector: this.modelPropertyTypeToSearchFilterTypeMap.get(modelProperty.dataType),\n                    settings: {\n                        pattern: `${modelProperty.prefixedName}:'(.*?)'`,\n                        field: `${modelProperty.prefixedName}`,\n                        placeholder: `Enter the ${modelProperty.name}`\n                    }\n                }\n            };\n        }\n        return filterSearch;\n    }\n\n    isTypeSupported(dataType: string): boolean {\n        return this.propertyTypes.includes(dataType);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ContentNodeSelectorPanelService } from '../../../content-node-selector/content-node-selector-panel.service';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\n\n@Component({\n    selector: 'adf-search-panel',\n    templateUrl: './search-panel.component.html',\n    styleUrls: ['./search-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-panel' }\n\n})\nexport class SearchPanelComponent implements OnInit {\n\n    constructor(private contentNodeSelectorPanelService: ContentNodeSelectorPanelService,\n                @Inject(SEARCH_QUERY_SERVICE_TOKEN) private queryBuilderService: SearchQueryBuilderService) {\n    }\n\n    ngOnInit(): void {\n        this.queryBuilderService.categories = this.contentNodeSelectorPanelService.convertCustomModelPropertiesToSearchCategories();\n    }\n\n    hasCustomModels(): boolean {\n        return this.contentNodeSelectorPanelService?.customModels?.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { SearchSortingDefinition } from '../../models/search-sorting-definition.interface';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\n\n@Component({\n    selector: 'adf-search-sorting-picker',\n    templateUrl: './search-sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-sorting-picker' }\n})\nexport class SearchSortingPickerComponent implements OnInit {\n\n    options: SearchSortingDefinition[] = [];\n    value: string;\n    ascending: boolean;\n\n    constructor(@Inject(SEARCH_QUERY_SERVICE_TOKEN) private queryBuilder: SearchQueryBuilderService) {}\n\n    ngOnInit() {\n        this.options = this.queryBuilder.getSortingOptions();\n\n        const primary = this.queryBuilder.getPrimarySorting();\n        if (primary) {\n            this.value = primary.key;\n            this.ascending = primary.ascending;\n        }\n    }\n\n    onValueChanged(key: string) {\n        this.value = key;\n        this.ascending = this.getSortingOrder();\n        this.applySorting();\n    }\n\n    onSortingChanged(ascending: boolean) {\n        this.ascending = ascending;\n        this.applySorting();\n    }\n\n    private findOptionByKey(key: string): SearchSortingDefinition {\n        if (key) {\n            return this.options.find((opt) => opt.key === key);\n        }\n        return null;\n    }\n\n    private applySorting() {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            this.queryBuilder.sorting = [{\n                ...option,\n                ascending: this.ascending\n            }];\n            this.queryBuilder.update();\n        }\n    }\n\n    private getSortingOrder(): boolean {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            return option.ascending;\n        }\n\n        return this.queryBuilder.getPrimarySorting().ascending;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    Output,\n    OnInit,\n    EventEmitter,\n    ViewEncapsulation,\n    ViewChild,\n    Inject,\n    OnDestroy,\n    ElementRef\n} from '@angular/core';\nimport { ConfigurableFocusTrapFactory, ConfigurableFocusTrap } from '@angular/cdk/a11y';\nimport { DataColumn, TranslationService } from '@alfresco/adf-core';\nimport { SearchWidgetContainerComponent } from '../search-widget-container/search-widget-container.component';\nimport { SearchHeaderQueryBuilderService } from '../../services/search-header-query-builder.service';\nimport { SearchCategory } from '../../models/search-category.interface';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\nimport { Subject } from 'rxjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'adf-search-filter-container',\n    templateUrl: './search-filter-container.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class SearchFilterContainerComponent implements OnInit, OnDestroy {\n\n    /** The column the filter will be applied on. */\n    @Input()\n    col: DataColumn;\n\n    /** The column the filter will be applied on. */\n    @Input()\n    value: any;\n\n    /** Emitted when a filter value is selected */\n    @Output()\n    filterChange: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(SearchWidgetContainerComponent)\n    widgetContainer: SearchWidgetContainerComponent;\n\n    @ViewChild('filterContainer')\n    filterContainer: ElementRef;\n\n    category: SearchCategory;\n    focusTrap: ConfigurableFocusTrap;\n    initialValue: any;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(@Inject(SEARCH_QUERY_SERVICE_TOKEN) private searchFilterQueryBuilder: SearchHeaderQueryBuilderService,\n                private translationService: TranslationService,\n                private focusTrapFactory: ConfigurableFocusTrapFactory) {\n    }\n\n    ngOnInit() {\n        this.category = this.searchFilterQueryBuilder.getCategoryForColumn(this.col.key);\n        this.initialValue = this.value && this.value[this.col.key] ? this.value[this.col.key] : undefined;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onKeyPressed(event: KeyboardEvent, menuTrigger: MatMenuTrigger) {\n        if (event.key === 'Enter' && this.widgetContainer.selector !== 'check-list') {\n            this.onApply();\n            menuTrigger.closeMenu();\n        }\n    }\n\n    onApply() {\n        if (this.widgetContainer.hasValueSelected()) {\n            this.searchFilterQueryBuilder.setActiveFilter(this.category.columnKey, this.widgetContainer.getCurrentValue());\n            this.filterChange.emit();\n            this.widgetContainer.applyInnerWidget();\n        } else {\n            this.resetSearchFilter();\n        }\n    }\n\n    onClearButtonClick(event: Event) {\n        event.stopPropagation();\n        this.resetSearchFilter();\n    }\n\n    resetSearchFilter() {\n        this.widgetContainer.resetInnerWidget();\n        this.searchFilterQueryBuilder.removeActiveFilter(this.category.columnKey);\n        this.filterChange.emit();\n    }\n\n    getTooltipTranslation(columnTitle: string): string {\n        if (!columnTitle) {\n            columnTitle = 'SEARCH.SEARCH_HEADER.TYPE';\n        }\n        return this.translationService.instant('SEARCH.SEARCH_HEADER.FILTER_BY', { category: this.translationService.instant(columnTitle) });\n    }\n\n    isActive(): boolean {\n        return this.widgetContainer && this.widgetContainer.componentRef && this.widgetContainer.componentRef.instance.isActive;\n    }\n\n    onMenuOpen() {\n        if (this.filterContainer && !this.focusTrap) {\n            this.focusTrap = this.focusTrapFactory.create(this.filterContainer.nativeElement);\n            this.focusTrap.focusInitialElement();\n        }\n    }\n\n    onClosed() {\n        this.focusTrap.destroy();\n        this.focusTrap = null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Inject, Output, ViewEncapsulation } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { SearchForm } from '../../models/search-form.interface';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\n\n@Component({\n  selector: 'adf-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SearchFormComponent {\n    @Output()\n    formChange: EventEmitter<SearchForm> = new EventEmitter<SearchForm>();\n\n    constructor(@Inject(SEARCH_QUERY_SERVICE_TOKEN) public queryBuilder: SearchQueryBuilderService) {\n    }\n\n    onSelectionChange(form: SearchForm) {\n        this.queryBuilder.updateSelectedConfiguration(form.index);\n        this.formChange.emit(form);\n    }\n\n    getSelected(forms: SearchForm[]): string {\n        return forms.find((form) => form.selected)?.name;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, Input, ViewEncapsulation } from '@angular/core';\nimport { SearchFacetFiltersService } from '../../services/search-facet-filters.service';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-filter-chips',\n    templateUrl: './search-filter-chips.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class SearchFilterChipsComponent {\n    /** Toggles whether to show or not the context facet filters. */\n    @Input()\n    showContextFacets: boolean = true;\n\n    constructor(\n        @Inject(SEARCH_QUERY_SERVICE_TOKEN)\n        public queryBuilder: SearchQueryBuilderService,\n        public facetFiltersService: SearchFacetFiltersService) {}\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'adf-search-filter-menu-card',\n  templateUrl: './search-filter-menu-card.component.html'\n})\nexport class SearchFilterMenuCardComponent {\n    @Output()\n    close = new EventEmitter();\n\n    onClose() {\n        this.close.emit();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, Input, ViewEncapsulation } from '@angular/core';\nimport { FacetField } from '../../models/facet-field.interface';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { FacetFieldBucket } from '../../models/facet-field-bucket.interface';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../../search-query-service.token';\nimport { SearchQueryBuilderService } from '../../services/search-query-builder.service';\nimport { SearchFacetFiltersService } from '../../services/search-facet-filters.service';\nimport { FacetWidget } from '../../models/facet-widget.interface';\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-search-facet-field',\n    templateUrl: './search-facet-field.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class SearchFacetFieldComponent implements FacetWidget {\n\n    @Input()\n    field!: FacetField;\n\n    displayValue$: Subject<string> = new Subject<string>();\n\n    constructor(@Inject(SEARCH_QUERY_SERVICE_TOKEN) public queryBuilder: SearchQueryBuilderService,\n                private searchFacetFiltersService: SearchFacetFiltersService,\n                private translationService: TranslationService) {\n    }\n\n    get canUpdateOnChange() {\n       return  this.field.settings?.allowUpdateOnChange ?? true;\n    }\n\n    onToggleBucket(event: MatCheckboxChange, field: FacetField, bucket: FacetFieldBucket) {\n        if (event && bucket) {\n            if (event.checked) {\n                this.selectFacetBucket(field, bucket);\n            } else {\n                this.unselectFacetBucket(field, bucket);\n            }\n        }\n    }\n\n    selectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = true;\n            this.queryBuilder.addUserFacetBucket(field, bucket);\n            this.searchFacetFiltersService.updateSelectedBuckets();\n            if (this.canUpdateOnChange) {\n                this.updateDisplayValue();\n                this.queryBuilder.update();\n            }\n        }\n    }\n\n    unselectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = false;\n            this.queryBuilder.removeUserFacetBucket(field, bucket);\n            this.searchFacetFiltersService.updateSelectedBuckets();\n            if (this.canUpdateOnChange) {\n                this.updateDisplayValue();\n                this.queryBuilder.update();\n            }\n        }\n    }\n\n    canResetSelectedBuckets(field: FacetField): boolean {\n        if (field && field.buckets) {\n            return field.buckets.items.some((bucket) => bucket.checked);\n        }\n        return false;\n    }\n\n    resetSelectedBuckets(field: FacetField) {\n        if (field && field.buckets) {\n            for (const bucket of field.buckets.items) {\n                bucket.checked = false;\n                this.queryBuilder.removeUserFacetBucket(field, bucket);\n            }\n            this.searchFacetFiltersService.updateSelectedBuckets();\n            if (this.canUpdateOnChange) {\n                this.queryBuilder.update();\n            }\n        }\n    }\n\n    getBucketCountDisplay(bucket: FacetFieldBucket): string {\n        return bucket.count === null ? '' : `(${bucket.count})`;\n    }\n\n    updateDisplayValue(): void {\n        if (!this.field.buckets?.items) {\n            this.displayValue$.next('');\n        } else {\n            const displayValue = this.field.buckets?.items?.filter((item) => item.checked)\n                .map((item) => this.translationService.instant(item.display || item.label))\n                .join(', ');\n            this.displayValue$.next(displayValue);\n        }\n    }\n\n    reset(): void {\n        this.resetSelectedBuckets(this.field);\n        this.updateDisplayValue();\n        this.queryBuilder.update();\n    }\n\n    submitValues(): void {\n        this.updateDisplayValue();\n        this.queryBuilder.update();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { SearchCategory } from '../../../models/search-category.interface';\nimport { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SearchWidgetContainerComponent } from '../../search-widget-container/search-widget-container.component';\n\n@Component({\n  selector: 'adf-search-widget-chip',\n  templateUrl: './search-widget-chip.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class SearchWidgetChipComponent  {\n\n    @Input()\n    category: SearchCategory;\n\n    @ViewChild('menuContainer', { static: false })\n    menuContainer: ElementRef;\n\n    @ViewChild('menuTrigger', { static: false })\n    menuTrigger: MatMenuTrigger;\n\n    @ViewChild(SearchWidgetContainerComponent, { static: false })\n    widgetContainerComponent: SearchWidgetContainerComponent;\n\n    focusTrap: ConfigurableFocusTrap;\n\n    constructor(private focusTrapFactory: ConfigurableFocusTrapFactory) {}\n\n    onMenuOpen() {\n        if (this.menuContainer && !this.focusTrap) {\n            this.focusTrap = this.focusTrapFactory.create(this.menuContainer.nativeElement);\n            this.focusTrap.focusInitialElement();\n        }\n    }\n\n    onClosed() {\n        this.focusTrap.destroy();\n        this.focusTrap = null;\n    }\n\n    onRemove() {\n        this.widgetContainerComponent.resetInnerWidget();\n        this.menuTrigger.closeMenu();\n    }\n\n    onApply() {\n        this.widgetContainerComponent.applyInnerWidget();\n        this.menuTrigger.closeMenu();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\nimport { FacetField } from '../../../models/facet-field.interface';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SearchFacetFieldComponent } from '../../search-facet-field/search-facet-field.component';\n\n@Component({\n  selector: 'adf-search-facet-chip',\n  templateUrl: './search-facet-chip.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class SearchFacetChipComponent {\n    @Input()\n    field: FacetField;\n\n    @ViewChild('menuContainer', { static: false })\n    menuContainer: ElementRef;\n\n    @ViewChild('menuTrigger', { static: false })\n    menuTrigger: MatMenuTrigger;\n\n    @ViewChild(SearchFacetFieldComponent, { static: false })\n    facetFieldComponent: SearchFacetFieldComponent;\n\n    focusTrap: ConfigurableFocusTrap;\n\n    constructor(private focusTrapFactory: ConfigurableFocusTrapFactory) {}\n\n    onMenuOpen() {\n        if (this.menuContainer && !this.focusTrap) {\n            this.focusTrap = this.focusTrapFactory.create(this.menuContainer.nativeElement);\n            this.focusTrap.focusInitialElement();\n        }\n    }\n\n    onClosed() {\n        this.focusTrap.destroy();\n        this.focusTrap = null;\n    }\n\n    onRemove() {\n        this.facetFieldComponent.reset();\n        this.menuTrigger.closeMenu();\n    }\n\n    onApply() {\n        this.facetFieldComponent.submitValues();\n        this.menuTrigger.closeMenu();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, HostListener } from '@angular/core';\nimport { SearchFacetFiltersService } from '../services/search-facet-filters.service';\n\n@Directive({\n  selector: '[adf-reset-search]'\n})\nexport class ResetSearchDirective {\n    @HostListener('click')\n    onClick() {\n        this.filterService.reset();\n    }\n\n    constructor(private filterService: SearchFacetFiltersService) { }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { SearchControlComponent } from './components/search-control.component';\nimport { SearchComponent } from './components/search.component';\nimport { EmptySearchResultComponent } from './components/empty-search-result.component';\nimport { SearchWidgetContainerComponent } from './components/search-widget-container/search-widget-container.component';\nimport { SearchFilterComponent } from './components/search-filter/search-filter.component';\nimport { SearchChipListComponent } from './components/search-chip-list/search-chip-list.component';\nimport { SearchTextComponent } from './components/search-text/search-text.component';\nimport { SearchRadioComponent } from './components/search-radio/search-radio.component';\nimport { SearchSliderComponent } from './components/search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from './components/search-number-range/search-number-range.component';\nimport { SearchPanelComponent } from './components/search-panel/search-panel.component';\nimport { SearchCheckListComponent } from './components/search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from './components/search-date-range/search-date-range.component';\nimport { SearchSortingPickerComponent } from './components/search-sorting-picker/search-sorting-picker.component';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from './search-query-service.token';\nimport { SearchQueryBuilderService } from './services/search-query-builder.service';\nimport { SearchFilterContainerComponent } from './components/search-filter-container/search-filter-container.component';\nimport { SearchDatetimeRangeComponent } from './components/search-datetime-range/search-datetime-range.component';\nimport { SearchFormComponent } from './components/search-form/search-form.component';\nimport { SearchFilterChipsComponent } from './components/search-filter-chips/search-filter-chips.component';\nimport { SearchFilterMenuCardComponent } from './components/search-filter-chips/search-filter-menu-card/search-filter-menu-card.component';\nimport { SearchFacetFieldComponent } from './components/search-facet-field/search-facet-field.component';\nimport { SearchWidgetChipComponent } from './components/search-filter-chips/search-widget-chip/search-widget-chip.component';\nimport { SearchFacetChipComponent } from './components/search-filter-chips/search-facet-chip/search-facet-chip.component';\nimport { ResetSearchDirective } from './components/reset-search.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CoreModule\n    ],\n    declarations: [\n        SearchComponent,\n        SearchControlComponent,\n        EmptySearchResultComponent,\n        SearchFilterComponent,\n        SearchChipListComponent,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchPanelComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchDatetimeRangeComponent,\n        SearchSortingPickerComponent,\n        SearchFilterContainerComponent,\n        SearchFormComponent,\n        SearchFilterChipsComponent,\n        SearchFilterMenuCardComponent,\n        SearchFacetFieldComponent,\n        SearchWidgetChipComponent,\n        SearchFacetChipComponent,\n        ResetSearchDirective\n    ],\n    exports: [\n        SearchComponent,\n        SearchControlComponent,\n        EmptySearchResultComponent,\n        SearchFilterComponent,\n        SearchChipListComponent,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchPanelComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchDatetimeRangeComponent,\n        SearchSortingPickerComponent,\n        SearchFilterContainerComponent,\n        SearchFormComponent,\n        SearchFilterChipsComponent,\n        SearchFilterMenuCardComponent,\n        SearchFacetFieldComponent,\n        ResetSearchDirective\n    ],\n    providers: [\n        { provide: SEARCH_QUERY_SERVICE_TOKEN, useExisting: SearchQueryBuilderService }\n    ]\n})\nexport class SearchModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { SitesService, LogService, InfiniteSelectScrollDirective } from '@alfresco/adf-core';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { MatSelectChange } from '@angular/material/select';\n\nexport enum Relations {\n    Members = 'members',\n    Containers = 'containers'\n}\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styleUrls: ['./sites-dropdown.component.scss'],\n    templateUrl: './sites-dropdown.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sites-dropdown' }\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    /** Hide the \"My Files\" option. */\n    @Input()\n    hideMyFiles: boolean = false;\n\n    /** A custom list of sites to be displayed by the dropdown. If no value\n     * is given, the sites of the current user are displayed by default. A\n     * list of objects only with properties 'title' and 'guid' is enough to\n     * be able to display the dropdown.\n     */\n    @Input()\n    siteList: SitePaging = null;\n\n    /** Id of the selected site */\n    @Input()\n    value: string = null;\n\n    /** Text or a translation key to act as a placeholder. Default value is the\n     * key \"DROPDOWN.PLACEHOLDER_LABEL\".\n     */\n    @Input()\n    placeholder: string = 'DROPDOWN.PLACEHOLDER_LABEL';\n\n    /** Filter for the results of the sites query. Possible values are\n     * \"members\" and \"containers\". When \"members\" is used, the site list\n     * will be restricted to the sites that the user is a member of.\n     */\n    @Input()\n    relations: string;\n\n    /** Emitted when the user selects a site. When the default option is selected,\n     * an empty model is emitted.\n     */\n    @Output()\n    change: EventEmitter<SiteEntry> = new EventEmitter();\n\n    private loading = true;\n    private skipCount = 0;\n\n    selected: SiteEntry = null;\n    MY_FILES_VALUE = '-my-';\n\n    constructor(private sitesService: SitesService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (!this.siteList) {\n            this.loadSiteList();\n        }\n    }\n\n    loadAllOnScroll() {\n        if (this.isInfiniteScrollingEnabled()) {\n            this.loading = true;\n            this.loadSiteList();\n        }\n    }\n\n    selectedSite(event: MatSelectChange) {\n        this.change.emit(event.value);\n    }\n\n    private loadSiteList() {\n        const extendedOptions: any = {\n            skipCount: this.skipCount,\n            maxItems: InfiniteSelectScrollDirective.MAX_ITEMS\n        };\n\n        this.skipCount += InfiniteSelectScrollDirective.MAX_ITEMS;\n\n        if (this.relations) {\n            extendedOptions.relations = [this.relations];\n        }\n\n        this.sitesService.getSites(extendedOptions).subscribe((sitePaging: SitePaging) => {\n\n                if (!this.siteList) {\n                    this.siteList = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;\n\n                    if (!this.hideMyFiles) {\n                        const siteEntry = new SiteEntry({\n                            entry: {\n                                id: this.MY_FILES_VALUE,\n                                guid: this.MY_FILES_VALUE,\n                                title: 'DROPDOWN.MY_FILES_OPTION'\n                            }\n                        });\n\n                        this.siteList.list.entries.unshift(siteEntry);\n\n                        if (!this.value) {\n                            this.value = this.MY_FILES_VALUE;\n                        }\n                    }\n\n                } else {\n                    const siteList: SitePaging = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;\n\n                    this.siteList.list.entries = this.siteList.list.entries.concat(siteList.list.entries);\n                    this.siteList.list.pagination = sitePaging.list.pagination;\n                }\n\n                this.selected = this.siteList.list.entries.find((site: SiteEntry) => site.entry.id === this.value);\n\n                if (this.value && !this.selected && this.siteListHasMoreItems()) {\n                    this.loadSiteList();\n                }\n\n                this.loading = false;\n            },\n            (error) => {\n                this.logService.error(error);\n            });\n    }\n\n    showLoading(): boolean {\n        return this.loading && this.siteListHasMoreItems();\n    }\n\n    isInfiniteScrollingEnabled(): boolean {\n        return !this.loading && this.siteListHasMoreItems();\n    }\n\n    private siteListHasMoreItems(): boolean {\n        return this.siteList && this.siteList.list.pagination && this.siteList.list.pagination.hasMoreItems;\n    }\n\n    private filteredResultsByMember(sites: SitePaging): SitePaging {\n        const loggedUserName = this.sitesService.getEcmCurrentLoggedUserName();\n        sites.list.entries = sites.list.entries.filter((site) => this.isCurrentUserMember(site, loggedUserName));\n        return sites;\n    }\n\n    private isCurrentUserMember(site, loggedUserName): boolean {\n        return site.entry.visibility === 'PUBLIC' ||\n            !!site.relations.members.list.entries.find((member) => {\n                return member.entry.id.toLowerCase() === loggedUserName.toLowerCase();\n            });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule, EditJsonDialogModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { UploadModule } from '../upload/upload.module';\n\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { DocumentListComponent } from './components/document-list.component';\n\nimport { TrashcanNameColumnComponent } from './components/trashcan-name-column/trashcan-name-column.component';\nimport { LibraryStatusColumnComponent } from './components/library-status-column/library-status-column.component';\nimport { LibraryRoleColumnComponent } from './components/library-role-column/library-role-column.component';\nimport { LibraryNameColumnComponent } from './components/library-name-column/library-name-column.component';\nimport { NameColumnComponent } from './components/name-column/name-column.component';\nimport { FilterHeaderComponent } from './components/filter-header/filter-header.component';\nimport { SearchModule } from './../search/search.module';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule,\n        EditJsonDialogModule,\n        SearchModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        FilterHeaderComponent\n    ],\n    exports: [\n        DocumentListComponent,\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        FilterHeaderComponent\n    ]\n})\nexport class DocumentListModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DropdownSitesComponent } from './sites-dropdown.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule\n    ],\n    exports: [\n        DropdownSitesComponent\n    ],\n    declarations: [\n        DropdownSitesComponent\n    ]\n})\nexport class SitesDropdownModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { MatSelect } from '@angular/material/select';\nimport { Node, PathElementEntity } from '@alfresco/js-api';\nimport { DocumentListComponent } from '../document-list';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** Active node, builds UI based on folderNode.path.elements collection. */\n    @Input()\n    folderNode: Node = null;\n\n    /** (optional) Name of the root element of the breadcrumb. You can use\n     * this property to rename \"Company Home\" to \"Personal Files\" for\n     * example. You can use an i18n resource key for the property value.\n     */\n    @Input()\n    root: string = null;\n\n    /** (optional) The id of the root element. You can use this property\n     * to set a custom element the breadcrumb should start with.\n     */\n    @Input()\n    rootId: string = null;\n\n    /** (optional) Document List component to operate with. The list will\n     * update when the breadcrumb is clicked.\n     */\n    @Input()\n    target: DocumentListComponent;\n\n    /** Transformation to be performed on the chosen/folder node before building\n     * the breadcrumb UI. Can be useful when custom formatting is needed for the\n     * breadcrumb. You can change the path elements from the node that are used to\n     * build the breadcrumb using this function.\n     */\n    @Input()\n    transform: (node) => any;\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    /** Maximum number of nodes to display before wrapping them with a dropdown element.  */\n    @Input()\n    maxItems: number;\n\n    previousNodes: PathElementEntity[];\n    lastNodes: PathElementEntity[];\n\n    route: PathElementEntity[] = [];\n\n    private onDestroy$ = new Subject<boolean>();\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    /** If true, prevents the user from navigating away from the active node. */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Emitted when the user clicks on a breadcrumb. */\n    @Output()\n    navigate = new EventEmitter<PathElementEntity>();\n\n    ngOnInit() {\n        this.transform = this.transform ? this.transform : null;\n\n        if (this.target) {\n            this.target.$folderNode\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe((folderNode: Node) => {\n                    this.folderNode = folderNode;\n                    this.recalculateNodes();\n                });\n        }\n    }\n\n    ngOnChanges(): void {\n        this.recalculateNodes();\n    }\n\n    protected recalculateNodes(): void {\n        const node: Node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n\n        this.route = this.parseRoute(node);\n\n        if (this.maxItems && this.route.length > this.maxItems) {\n            this.lastNodes = this.route.slice(this.route.length - this.maxItems);\n            this.previousNodes = this.route.slice(0, this.route.length - this.maxItems);\n            this.previousNodes.reverse();\n        } else {\n            this.lastNodes = this.route;\n            this.previousNodes = null;\n        }\n    }\n\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n            this.dropdown.focus();\n        }\n    }\n\n    hasPreviousNodes(): boolean {\n        return !!this.previousNodes;\n    }\n\n    parseRoute(node: Node): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name,\n                node: node\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let position: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            position = route.findIndex((el) => el.id === nodeId);\n        }\n\n        return position;\n    }\n\n    breadcrumbItemIsAnchor(lastItem): boolean {\n        return !this.readOnly && !lastItem;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event && event.type === 'click') {\n            event.preventDefault();\n        }\n\n        this.onRouteClick(route);\n    }\n\n    onRouteClick(route: PathElementEntity) {\n        if (route && !this.readOnly) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.navigateTo(route.id);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material/select';\nimport { PathElementEntity, Node } from '@alfresco/js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@Component({\n    selector: 'adf-dropdown-breadcrumb',\n    templateUrl: './dropdown-breadcrumb.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n})\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n\n    /**\n     * Calculate the current and previous nodes from the route array\n     */\n    protected recalculateNodes(): void {\n        const node: Node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n\n        this.route = this.parseRoute(node);\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n\n    /**\n     * Opens the node picker menu\n     */\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n            this.dropdown.focus();\n        }\n    }\n\n    /**\n     * Return if route has more than one element (means: we are not in the root directory)\n     */\n    hasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './dropdown-breadcrumb.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule\n    ],\n    exports: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ],\n    declarations: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ]\n})\nexport class BreadcrumbModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, SecurityContext } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface ConfirmDialogComponentProps {\n    title?: string;\n    message?: string;\n    yesLabel?: string;\n    thirdOptionLabel?: string;\n    noLabel?: string;\n    htmlContent?: string;\n}\n\n@Component({\n    selector: 'adf-confirm-dialog',\n    templateUrl: './confirm.dialog.html',\n    styleUrls: ['./confirm.dialog.scss'],\n    host: { 'class': 'adf-confirm-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmDialogComponent {\n\n    title: string;\n    message: string;\n    yesLabel: string;\n    noLabel: string;\n    thirdOptionLabel: string;\n    htmlContent: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) data: ConfirmDialogComponentProps, private sanitizer: DomSanitizer) {\n        data = data || {};\n        this.title = data.title || 'ADF_CONFIRM_DIALOG.CONFIRM';\n        this.message = data.message || 'ADF_CONFIRM_DIALOG.MESSAGE';\n        this.yesLabel = data.yesLabel || 'ADF_CONFIRM_DIALOG.YES_LABEL';\n        this.thirdOptionLabel = data.thirdOptionLabel;\n        this.noLabel = data.noLabel || 'ADF_CONFIRM_DIALOG.NO_LABEL';\n        this.htmlContent = data.htmlContent;\n    }\n\n    sanitizedHtmlContent(): string {\n        return this.sanitizer.sanitize(SecurityContext.HTML, this.htmlContent);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, ViewEncapsulation, EventEmitter, Output } from '@angular/core';\nimport { VersionsApi, Node, VersionEntry, VersionPaging } from '@alfresco/js-api';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\n\n@Component({\n    selector: 'adf-version-list',\n    templateUrl: './version-list.component.html',\n    styleUrls: ['./version-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n})\nexport class VersionListComponent implements OnChanges {\n\n    private versionsApi: VersionsApi;\n    versions: VersionEntry[] = [];\n    isLoading = true;\n\n    /** The target node. */\n    @Input()\n    node: Node;\n\n    /** Toggles showing/hiding of comments */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Enable/disable viewing a version of the current node. */\n    @Input()\n    allowViewVersions = true;\n\n    /** Toggles showing/hiding of version actions */\n    @Input()\n    showActions = true;\n\n    /** Emitted when a version is restored */\n    @Output()\n    restored: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when a version is deleted */\n    @Output()\n    deleted: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when viewing a version */\n    @Output()\n    viewVersion: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(private alfrescoApi: AlfrescoApiService,\n                private contentService: ContentService,\n                private dialog: MatDialog) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n\n    ngOnChanges() {\n        this.loadVersionHistory();\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update') && this.versions.length > 1;\n    }\n\n    canDelete(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'delete') && this.versions.length > 1;\n    }\n\n    restore(versionId) {\n        if (this.canUpdate()) {\n            this.versionsApi\n                .revertVersion(this.node.id, versionId, { majorVersion: true, comment: '' })\n                .then(() =>\n                    this.alfrescoApi.nodesApi.getNodeInfo(\n                        this.node.id,\n                        { include: ['permissions', 'path', 'isFavorite', 'allowableOperations'] }\n                    )\n                )\n                .then((node) => this.onVersionRestored(node));\n        }\n    }\n\n    onViewVersion(versionId) {\n        this.viewVersion.emit(versionId);\n    }\n\n    loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.node.id).then((versionPaging: VersionPaging) => {\n            this.versions = versionPaging.list.entries;\n            this.isLoading = false;\n        });\n    }\n\n    downloadVersion(versionId: string) {\n        if (this.allowDownload) {\n            const versionDownloadUrl = this.getVersionContentUrl(this.node.id, versionId, true);\n            this.downloadContent(versionDownloadUrl);\n        }\n    }\n\n    deleteVersion(versionId: string) {\n        if (this.canUpdate()) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    title: 'ADF_VERSION_LIST.CONFIRM_DELETE.TITLE',\n                    message: 'ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE',\n                    yesLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL',\n                    noLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL'\n                },\n                minWidth: '250px'\n            });\n\n            dialogRef.afterClosed().subscribe((result) => {\n                if (result === true) {\n                    this.alfrescoApi.versionsApi\n                        .deleteVersion(this.node.id, versionId)\n                        .then(() => this.onVersionDeleted(this.node));\n                }\n            });\n        }\n    }\n\n    onVersionDeleted(node: any) {\n        this.loadVersionHistory();\n        this.deleted.emit(node);\n    }\n\n    onVersionRestored(node: any) {\n        this.loadVersionHistory();\n        this.restored.emit(node);\n    }\n\n    private getVersionContentUrl(nodeId: string, versionId: string, attachment?: boolean) {\n        const nodeDownloadUrl = this.alfrescoApi.contentApi.getContentUrl(nodeId, attachment);\n        return nodeDownloadUrl.replace('/content', '/versions/' + versionId + '/content');\n    }\n\n    downloadContent(url: string) {\n        if (url) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, ViewChild, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { VersionListComponent } from './version-list.component';\nimport { ContentService, AlfrescoApiService, FileUploadErrorEvent } from '@alfresco/adf-core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n    selector: 'adf-version-manager',\n    templateUrl: './version-manager.component.html',\n    styleUrls: ['./version-manager.component.scss'],\n    animations: [\n        trigger('uploadToggle', [\n            state('open', style({height: '175px', opacity: 1, visibility: 'visible'})),\n            state('close', style({height: '0%', opacity: 0, visibility: 'hidden'})),\n            transition('open => close', [\n                style({visibility: 'hidden'}),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ]),\n            transition('close => open', [\n                style({visibility: 'visible'}),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VersionManagerComponent implements OnInit {\n\n    /** Target node to manage version history. */\n    @Input()\n    node: Node;\n\n    /** New file for updating current version. */\n    @Input()\n    newFileVersion: File;\n\n    /** Toggles showing/hiding of comments. */\n    @Input()\n    showComments = true;\n\n    /** Toggles showing/hiding the version comparison component. */\n    @Input()\n    showVersionComparison = false;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Emitted when a file is uploaded successfully. */\n    @Output()\n    uploadSuccess = new EventEmitter<Node>();\n\n    /** Emitted when an error occurs during upload. */\n    @Output()\n    uploadError = new EventEmitter<FileUploadErrorEvent>();\n\n    /** Emitted when an cancelling during upload. */\n    @Output()\n    uploadCancel = new EventEmitter<boolean>();\n\n    /** Emitted when viewing a version. */\n    @Output()\n    viewVersion = new EventEmitter<string>();\n\n    @ViewChild('versionList', { static: true })\n    versionListComponent: VersionListComponent;\n\n    uploadState: string = 'close';\n\n    constructor(private contentService: ContentService,\n                private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnInit() {\n        if (this.newFileVersion) {\n            this.toggleNewVersion();\n        }\n    }\n\n    refresh(node: Node) {\n        this.alfrescoApiService.nodeUpdated.next(node);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(node);\n        this.uploadState = 'close';\n    }\n\n    onUploadSuccess(event: any) {\n        this.showVersionComparison = false;\n        this.newFileVersion = null;\n        this.alfrescoApiService.nodeUpdated.next(event.value.entry);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(event.value.entry);\n        this.uploadState = 'close';\n    }\n\n    onUploadError(event: FileUploadErrorEvent) {\n        this.uploadError.emit(event);\n    }\n\n    onUploadCancel() {\n        this.uploadState = 'close';\n        this.showVersionComparison = false;\n        this.newFileVersion = null;\n        this.uploadCancel.emit(true);\n    }\n\n    onViewVersion(versionId: string) {\n        this.viewVersion.emit(versionId);\n    }\n\n    toggleNewVersion() {\n        this.uploadState = this.uploadState === 'open' ? 'close' : 'open';\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ContentService, FileUploadErrorEvent, FileUploadEvent, UploadService } from '@alfresco/adf-core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-version-upload',\n    templateUrl: './version-upload.component.html',\n    styleUrls: ['./version-upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-version-upload' }\n})\nexport class VersionUploadComponent implements OnInit, OnDestroy {\n\n    semanticVersion: string = 'minor';\n    comment: string;\n    uploadVersion: boolean = false;\n    disabled: boolean = false;\n    onDestroy$ = new Subject();\n\n    /** The target node. */\n    @Input()\n    node: Node;\n\n    /** New file for updating current version. */\n    @Input()\n    newFileVersion: File;\n\n    /** Toggles showing/hiding upload button. */\n    @Input()\n    showUploadButton: boolean = true;\n\n    /** Toggles showing/hiding of cancel button. */\n    @Input()\n    showCancelButton: boolean = true;\n\n    /** Emitted when the file is uploaded successfully. */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<FileUploadErrorEvent>();\n\n    /** Emitted when an cancelling during upload. */\n    @Output()\n    cancel = new EventEmitter();\n\n    /** Emitted when the version is changed. */\n    @Output()\n    versionChanged = new EventEmitter<boolean>();\n\n    /** Emitted when the comment is changed. */\n    @Output()\n    commentChanged = new EventEmitter<string>();\n\n    /** Emitted when the upload starts */\n    @Output()\n    uploadStarted = new EventEmitter<FileUploadEvent>();\n\n    constructor(private contentService: ContentService, private uploadService: UploadService) {\n    }\n\n    ngOnInit() {\n        this.uploadService.fileUploadStarting\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((event: FileUploadEvent) => {\n                this.disabled = true;\n                this.uploadStarted.emit(event);\n            });\n    }\n\n    canUpload(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update') && !this.disabled;\n    }\n\n    isMajorVersion(): boolean {\n        return this.semanticVersion !== 'minor';\n    }\n\n    cancelUpload() {\n        this.disabled = false;\n        this.cancel.emit();\n    }\n\n    onVersionChange() {\n        this.versionChanged.emit(this.isMajorVersion());\n    }\n\n    onCommentChange() {\n        this.commentChanged.emit(this.comment);\n    }\n\n    onSuccess(event: any) {\n        this.disabled = false;\n        this.success.emit(event);\n    }\n\n    onError(event: FileUploadErrorEvent) {\n        this.disabled = false;\n        this.error.emit(event);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next();\n        this.onDestroy$.complete();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ThumbnailService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-version-comparison',\n    templateUrl: './version-comparison.component.html'\n})\nexport class VersionComparisonComponent {\n\n    /** Target node. */\n    @Input()\n    node: Node;\n\n    /** New file for updating current version. */\n    @Input()\n    newFileVersion: File;\n\n    constructor(public thumbnailService: ThumbnailService) {\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { VersionUploadComponent } from './version-upload.component';\nimport { VersionManagerComponent } from './version-manager.component';\nimport { VersionListComponent } from './version-list.component';\nimport { UploadModule } from '../upload/upload.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { VersionComparisonComponent } from './version-comparison.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule,\n        UploadModule,\n        FormsModule\n    ],\n    exports: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent,\n        FormsModule,\n        VersionComparisonComponent\n    ],\n    declarations: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent,\n        VersionComparisonComponent\n    ]\n})\nexport class VersionManagerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataRow } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-name-location-cell',\n    template: `\n        <div class=\"adf-name-location-cell-name adf-datatable-cell-value\" [title]=\"name\">{{ name }}</div>\n        <div class=\"adf-name-location-cell-location adf-datatable-cell-value\" [title]=\"path\">{{ path }}</div>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-name-location-cell adf-datatable-content-cell' }\n})\nexport class NameLocationCellComponent implements OnInit {\n\n    name: string = '';\n    path: string = '';\n\n    @Input()\n    row: DataRow;\n\n    ngOnInit() {\n        if (this.row) {\n            this.name = this.row.getValue('name');\n\n            const fullPath = this.row.getValue('path');\n            if (fullPath) {\n                this.path = fullPath.name || '';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy,\n    Inject\n} from '@angular/core';\nimport {\n    HighlightDirective,\n    UserPreferencesService,\n    UserPreferenceValues,\n    InfinitePaginationComponent, PaginatedComponent,\n    NodesApiService,\n    SitesService,\n    UploadService,\n    FileUploadCompleteEvent,\n    FileUploadDeleteEvent,\n    AppConfigService,\n    DataSorting,\n    ShowHeaderMode\n} from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { Node, NodePaging, Pagination, SiteEntry, SitePaging, NodeEntry, QueryBody, RequestScope } from '@alfresco/js-api';\nimport { DocumentListComponent } from '../document-list/components/document-list.component';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { CustomResourcesService } from '../document-list/services/custom-resources.service';\nimport { NodeEntryEvent, ShareDataRow } from '../document-list';\nimport { Subject } from 'rxjs';\nimport { SEARCH_QUERY_SERVICE_TOKEN } from '../search/search-query-service.token';\nimport { SearchQueryBuilderService } from '../search/services/search-query-builder.service';\nimport { ContentNodeSelectorPanelService } from './content-node-selector-panel.service';\n\nexport type ValidationFunction = (entry: Node) => boolean;\n\nexport const defaultValidation = () => true;\n\n@Component({\n    selector: 'adf-content-node-selector-panel',\n    templateUrl: './content-node-selector-panel.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-node-selector-panel' },\n    providers: [{\n        provide: SEARCH_QUERY_SERVICE_TOKEN,\n        useClass: SearchQueryBuilderService\n    }]\n})\nexport class ContentNodeSelectorPanelComponent implements OnInit, OnDestroy {\n\n    DEFAULT_PAGINATION: Pagination = new Pagination({\n        maxItems: 25,\n        skipCount: 0\n    });\n\n    private showSiteList = true;\n    private showSearchField = true;\n    private showCounter = false;\n\n    /** If true will restrict the search and breadcrumbs to the currentFolderId */\n    @Input()\n    restrictRootToCurrentFolderId: boolean = false;\n\n    /** Node ID of the folder currently listed. */\n    @Input()\n    currentFolderId: string = null;\n\n    /** Hide the \"My Files\" option added to the site list by default.\n     * See the [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /** Custom site for site dropdown. This is the same as the `siteList`.\n     * property of the Sites Dropdown component (see its doc page\n     * for more information).\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    _rowFilter: RowFilter = defaultValidation;\n\n    /** Custom *where* filter function. See the\n     * Document List component\n     * for more information.\n     */\n    @Input()\n    where: string;\n\n    /**\n     * Custom row filter function. See the\n     * [Row Filter Model](row-filter.model.md) page\n     * for more information.\n     */\n    @Input()\n    set rowFilter(rowFilter: RowFilter) {\n        this.createRowFilter(rowFilter);\n    }\n\n    get rowFilter(): RowFilter {\n        return this._rowFilter;\n    }\n\n    _excludeSiteContent: string[] = [];\n\n    /** Custom list of site content componentIds.\n     * Used to filter out the corresponding items from the displayed nodes\n     */\n    @Input()\n    set excludeSiteContent(excludeSiteContent: string[]) {\n        this._excludeSiteContent = excludeSiteContent;\n        this.createRowFilter(this._rowFilter);\n    }\n\n    get excludeSiteContent(): string[] {\n        return this._excludeSiteContent;\n    }\n\n    /**\n     * Custom image resolver function. See the\n     * [Image Resolver Model](image-resolver.model.md) page\n     * for more information.\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /** Number of items shown per page in the list. */\n    @Input()\n    pageSize: number = this.DEFAULT_PAGINATION.maxItems;\n\n    /** Define the selection mode for document list. The allowed values are single or multiple */\n    @Input()\n    selectionMode: 'single' | 'multiple' = 'single';\n\n    /** Function used to decide if the selected node has permission to be selected.\n     * Default value is a function that always returns true.\n     */\n    @Input()\n    isSelectionValid: ValidationFunction = defaultValidation;\n\n    /** Transformation to be performed on the chosen/folder node before building the\n     * breadcrumb UI. Can be useful when custom formatting is needed for the breadcrumb.\n     * You can change the path elements from the node that are used to build the\n     * breadcrumb using this function.\n     */\n    @Input()\n    breadcrumbTransform: (node) => any;\n\n    /** Toggle search input rendering */\n    @Input()\n    set showSearch(value: boolean) {\n        if (value !== undefined && value !== null) {\n            this.showSearchField = value;\n        }\n    }\n\n    get showSearch(): boolean {\n        return this.showSearchField;\n    }\n\n    /** Toggle sites list dropdown rendering */\n    @Input()\n    set showDropdownSiteList(value: boolean) {\n        if (value !== undefined && value !== null) {\n            this.showSiteList = value;\n        }\n    }\n\n    get showDropdownSiteList(): boolean {\n        return this.showSiteList;\n    }\n\n    /** Shows the files and folders in the search result */\n    @Input()\n    set showFilesInResult(value: boolean) {\n        if (value !== undefined && value !== null) {\n            const showFilesQuery = `TYPE:'cm:folder'${value ? \" OR TYPE:'cm:content'\" : ''}`;\n            this.queryBuilderService.addFilterQuery(showFilesQuery);\n        }\n    }\n\n    /** Shows the node counter in the breadcrumb */\n    @Input()\n    set showNodeCounter(value: boolean) {\n        this.showCounter = value ?? false;\n    }\n\n    get showNodeCounter(): boolean {\n        return this.showCounter;\n    }\n\n    /** Emitted when the user has chosen an item. */\n    @Output()\n    select = new EventEmitter<Node[]>();\n\n    /** Emitted when the navigation changes. */\n    @Output()\n    navigationChange = new EventEmitter<NodeEntryEvent>();\n\n    /** Emitted when the select site changes. */\n    @Output()\n    siteChange = new EventEmitter<string>();\n\n    /** Emitted when search is running. */\n    @Output()\n    showingSearch = new EventEmitter<boolean>();\n\n    /** Emitted when current folder loaded. */\n    @Output()\n    currentFolder = new EventEmitter<Node>();\n\n    /** Emitted when folder loaded. */\n    @Output()\n    folderLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('documentList', { static: true })\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective, { static: true })\n    highlighter: HighlightDirective;\n\n    nodePaging: NodePaging | null = null;\n    siteId: null | string;\n    breadcrumbRootId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    _chosenNode: Node [] = null;\n    folderIdToShow: string | null = null;\n    breadcrumbFolderTitle: string | null = null;\n    startSiteGuid: string | null = null;\n    hasValidQuery: boolean = false;\n    showHeader = ShowHeaderMode.Never;\n\n    @ViewChild(InfinitePaginationComponent, { static: true })\n    infinitePaginationComponent: InfinitePaginationComponent;\n\n    infiniteScroll: boolean = false;\n    debounceSearch: number = 200;\n    searchInput: FormControl = new FormControl();\n\n    target: PaginatedComponent;\n    preselectedNodes: NodeEntry[] = [];\n    currentUploadBatch: NodeEntry[] = [];\n\n    sorting: string[] | DataSorting;\n\n    searchPanelExpanded: boolean = false;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private customResourcesService: CustomResourcesService,\n                @Inject(SEARCH_QUERY_SERVICE_TOKEN) public queryBuilderService: SearchQueryBuilderService,\n                private userPreferencesService: UserPreferencesService,\n                private nodesApiService: NodesApiService,\n                private uploadService: UploadService,\n                private sitesService: SitesService,\n                private appConfigService: AppConfigService,\n                private contentNodeSelectorPanelService: ContentNodeSelectorPanelService) {\n    }\n\n    set chosenNode(value: Node[]) {\n        this._chosenNode = value;\n        this.select.next(value);\n    }\n\n    get chosenNode() {\n        return this._chosenNode;\n    }\n\n    getSelectedCount(): number {\n        return this.chosenNode?.length || 0;\n    }\n\n    ngOnInit() {\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(this.debounceSearch),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe((searchValue: string) => {\n                this.searchTerm = searchValue;\n                this.queryBuilderService.userQuery = searchValue.length > 0 ? `${searchValue}*` : searchValue ;\n                this.queryBuilderService.update();\n            });\n\n        this.queryBuilderService.updated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((queryBody: QueryBody) => {\n                if (queryBody) {\n                    this.hasValidQuery = true;\n                    this.prepareDialogForNewSearch(queryBody);\n                    this.queryBuilderService.execute(queryBody);\n                } else {\n                    this.hasValidQuery = false;\n                    this.resetFolderToShow();\n                    this.clearSearch();\n                }\n            });\n\n        this.queryBuilderService.executed\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((results: NodePaging) => {\n                if (this.hasValidQuery) {\n                    this.showSearchResults(results);\n                }\n            });\n\n        this.userPreferencesService\n            .select(UserPreferenceValues.PaginationSize)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(pagSize => this.pageSize = pagSize);\n\n        this.target = this.documentList;\n        this.folderIdToShow = this.currentFolderId;\n        if (this.currentFolderId) {\n            if (this.restrictRootToCurrentFolderId) {\n                this.breadcrumbRootId = this.currentFolderId;\n                this.siteId = this.currentFolderId;\n            } else {\n                this.getStartSite();\n            }\n        }\n\n        this.breadcrumbTransform = this.breadcrumbTransform ? this.breadcrumbTransform : null;\n        this.isSelectionValid = this.isSelectionValid ? this.isSelectionValid : defaultValidation;\n        this.onFileUploadEvent();\n        this.onFileUploadDeletedEvent();\n        this.resetPagination();\n        this.setSearchScopeToNodes();\n\n        this.documentList.$folderNode\n        .pipe(takeUntil(this.onDestroy$))\n        .subscribe((currentNode: Node) => {\n            this.currentFolder.emit(currentNode);\n    });\n\n        this.sorting = this.appConfigService.get('adf-content-node-selector.sorting', ['createdAt', 'desc']);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    toggleSearchPanel() {\n        this.searchPanelExpanded = !this.searchPanelExpanded;\n    }\n\n    hasCustomModels(): boolean {\n        return this.contentNodeSelectorPanelService?.customModels?.length > 0;\n    }\n\n    private onFileUploadEvent() {\n        this.uploadService.fileUploadComplete\n            .pipe(\n                debounceTime(500),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe((fileUploadEvent: FileUploadCompleteEvent) => {\n                this.currentUploadBatch.push(fileUploadEvent.data);\n                if (!this.uploadService.isUploading()) {\n                    this.preselectedNodes = this.getPreselectNodesBasedOnSelectionMode();\n                    this.currentUploadBatch = [];\n                    this.documentList.reloadWithoutResettingSelection();\n                }\n            });\n    }\n\n    private onFileUploadDeletedEvent() {\n        this.uploadService.fileUploadDeleted\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((deletedFileEvent: FileUploadDeleteEvent) => {\n                this.documentList.unselectRowFromNodeId(deletedFileEvent.file.data.entry.id);\n                this.documentList.reloadWithoutResettingSelection();\n            });\n    }\n\n    private getStartSite() {\n        this.nodesApiService.getNode(this.currentFolderId).subscribe((startNodeEntry) => {\n            this.startSiteGuid = this.sitesService.getSiteNameFromNodePath(startNodeEntry);\n            if (this.startSiteGuid) {\n                this.sitesService.getSite(this.startSiteGuid).subscribe((startSiteEntry) => {\n                    if (startSiteEntry instanceof SiteEntry) {\n                        this.siteChange.emit(startSiteEntry.entry.title);\n                    }\n                });\n            }\n        });\n    }\n\n    private createRowFilter(filter?: RowFilter) {\n        if (!filter) {\n            filter = () => true;\n        }\n        this._rowFilter = (value: ShareDataRow, index: number, array: ShareDataRow[]) => {\n            return filter(value, index, array) &&\n                !this.isExcludedSiteContent(value);\n        };\n    }\n\n    private isExcludedSiteContent(row: ShareDataRow): boolean {\n        const entry = row.node.entry;\n        if (this._excludeSiteContent && this._excludeSiteContent.length &&\n            entry &&\n            entry.properties &&\n            entry.properties['st:componentId']) {\n            const excludedItem = this._excludeSiteContent.find(\n                (id: string) => entry.properties['st:componentId'] === id\n            );\n            return !!excludedItem;\n        }\n        return false;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite SiteEntry to search within\n     */\n    siteChanged(chosenSite: SiteEntry): void {\n        this.siteId = chosenSite.entry.guid;\n        this.setTitleIfCustomSite(chosenSite);\n        this.siteChange.emit(chosenSite.entry.title);\n        this.queryBuilderService.update();\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): Node | null {\n        let folderNode: Node;\n\n        if (this.showingSearchResults && this.chosenNode) {\n            folderNode = this.chosenNode[0];\n        } else {\n            folderNode = this.documentList.folderNode;\n        }\n\n        return folderNode;\n    }\n\n    /**\n     * Prepares the dialog for a new search\n     */\n    prepareDialogForNewSearch(queryBody: QueryBody): void {\n        this.target = queryBody ? null : this.documentList;\n        if (this.target) {\n            this.infinitePaginationComponent.reset();\n        }\n        this.folderIdToShow = null;\n        this.preselectedNodes = [];\n        this.loadingSearchResults = true;\n        this.addCorrespondingNodeIdsQuery();\n        this.resetChosenNode();\n    }\n\n    /**\n     * Clear the search input and reset to last folder node in which search was performed\n     */\n    clear(): void {\n        this.searchTerm = '';\n        this.queryBuilderService.userQuery = '';\n        this.queryBuilderService.update();\n    }\n\n    /**\n     * Resets the folder to be shown with the site selection or the initial landing folder\n     */\n    resetFolderToShow(): void {\n        this.folderIdToShow = this.siteId || this.currentFolderId;\n    }\n\n    /**\n     * Clear the search input and search related data\n     */\n    clearSearch() {\n        this.searchTerm = '';\n        this.nodePaging = null;\n        this.resetPagination();\n        this.resetChosenNode();\n        this.showingSearchResults = false;\n        this.showingSearch.emit(this.showingSearchResults);\n    }\n\n    private addCorrespondingNodeIdsQuery() {\n        let extraParentFiltering = '';\n\n        if (this.customResourcesService.hasCorrespondingNodeIds(this.siteId)) {\n            this.customResourcesService.getCorrespondingNodeIds(this.siteId)\n                .subscribe((nodeIds) => {\n                    if (nodeIds && nodeIds.length) {\n                        nodeIds\n                            .filter((id) => id !== this.siteId)\n                            .forEach((extraId) => {\n                                extraParentFiltering += ` OR ANCESTOR:'workspace://SpacesStore/${extraId}'`;\n                            });\n                    }\n                    const parentFiltering = this.siteId ? `ANCESTOR:'workspace://SpacesStore/${this.siteId}'${extraParentFiltering}` : '';\n                    this.queryBuilderService.addFilterQuery(parentFiltering);\n                });\n        } else {\n            const parentFiltering = this.siteId ? `ANCESTOR:'workspace://SpacesStore/${this.siteId}'` : '';\n            this.queryBuilderService.addFilterQuery(parentFiltering);\n        }\n    }\n\n    private setSearchScopeToNodes() {\n        const scope: RequestScope = {\n            locations: 'nodes'\n        };\n        this.queryBuilderService.setScope(scope);\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(results: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n        this.showingSearch.emit(this.showingSearchResults);\n\n        this.nodePaging = results;\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange($event: NodeEntryEvent): void {\n        this.folderIdToShow = $event.value.id;\n        this.showingSearchResults = false;\n        this.infiniteScroll = false;\n        this.breadcrumbFolderTitle = null;\n        this.preselectedNodes = [];\n        this.clearSearch();\n        this.navigationChange.emit($event);\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(nodePaging: NodePaging): void {\n        this.updatePaginationAfterRowFilter(nodePaging);\n        if (!this.showingSearchResults) {\n            this.attemptNodeSelection(this.documentList.folderNode);\n        }\n        this.folderLoaded.emit();\n    }\n\n    /**\n     * Updates pagination.hasMoreItems to false after filtering only folders during 'COPY' and 'MOVE' action\n     */\n    updatePaginationAfterRowFilter(nodePaging: NodePaging): void {\n        if (this.documentList.data.getRows().length < nodePaging.list.pagination.maxItems) {\n            nodePaging.list.pagination.hasMoreItems = false;\n        }\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    showBreadcrumbs() {\n        return !this.showingSearchResults || this.chosenNode;\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param pagination Pagination object\n     */\n    getNextPageOfSearch(pagination: Pagination): void {\n        this.infiniteScroll = true;\n        this.queryBuilderService.paging.maxItems = pagination.maxItems;\n        this.queryBuilderService.paging.skipCount = pagination.skipCount;\n\n        if (this.searchTerm.length > 0) {\n            this.queryBuilderService.update();\n        }\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: Node): void {\n        if (entry && this.isSelectionValid(entry)) {\n            this.chosenNode = [entry];\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * It filters and emit the selection coming from the document list\n     *\n     * @param nodesEntries\n     */\n    onCurrentSelection(nodesEntries: NodeEntry[]): void {\n        const validNodesEntity = nodesEntries.filter((node) => this.isSelectionValid(node.entry));\n        this.chosenNode = validNodesEntity.map((node) => node.entry);\n    }\n\n    setTitleIfCustomSite(site: SiteEntry) {\n        if (this.customResourcesService.isCustomSource(site.entry.guid)) {\n            this.breadcrumbFolderTitle = site.entry.title;\n            if (this.documentList.folderNode.path.elements) {\n                this.breadcrumbFolderNode.name = site.entry.title;\n                this.documentList.folderNode.path.elements = null;\n            }\n        } else {\n            this.breadcrumbFolderTitle = null;\n        }\n    }\n\n    hasPreselectNodes(): boolean {\n        return this.preselectedNodes?.length > 0;\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode === 'single';\n    }\n\n    getPreselectNodesBasedOnSelectionMode(): NodeEntry[] {\n        let selectedNodes: NodeEntry[] = [];\n\n        if (this.currentUploadBatch?.length) {\n            if (this.isSingleSelectionMode()) {\n                selectedNodes = [this.currentUploadBatch[this.currentUploadBatch.length - 1]];\n            } else {\n                selectedNodes = this.currentUploadBatch;\n            }\n        }\n\n        return selectedNodes;\n    }\n\n    private resetPagination(): void {\n        this.queryBuilderService.paging = {\n            maxItems: this.pageSize,\n            skipCount: this.DEFAULT_PAGINATION.skipCount\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { ContentNodeSelectorPanelComponent } from './content-node-selector-panel.component';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { SitesDropdownModule } from '../site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { SearchModule } from '../search/search.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { DocumentListModule } from '../document-list/document-list.module';\nimport { NameLocationCellComponent } from './name-location-cell/name-location-cell.component';\nimport { UploadModule } from '../upload/upload.module';\nimport { SearchQueryBuilderService } from '../search/services/search-query-builder.service';\nimport { ContentDirectiveModule } from '../directives/content-directive.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule,\n        CommonModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        ContentDirectiveModule\n    ],\n    exports: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    declarations: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    providers: [SearchQueryBuilderService]\n})\nexport class ContentNodeSelectorModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nconst I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n\nexport function forbidEndingDot({ value }: FormControl) {\n    const isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\n\nimport { Component, Inject, OnInit, Optional, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Node } from '@alfresco/js-api';\nimport { NodesApiService, TranslationService } from '@alfresco/adf-core';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\n\n@Component({\n    selector: 'adf-folder-dialog',\n    templateUrl: './folder.dialog.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class FolderDialogComponent implements OnInit {\n\n    form: FormGroup;\n\n    folder: Node = null;\n\n    /** Emitted when the edit/create folder give error for example a folder with same name already exist\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the edit/create folder is successfully created/modified\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<Node>();\n\n    editTitle = 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE';\n    createTitle = 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE';\n    nodeType = 'cm:folder';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialog: MatDialogRef<FolderDialogComponent>,\n        private nodesApi: NodesApiService,\n        private translation: TranslationService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n        if (data) {\n            this.editTitle = data.editTitle || this.editTitle;\n            this.createTitle = data.createTitle || this.createTitle;\n            this.nodeType = data.nodeType || this.nodeType;\n        }\n    }\n\n    get editing(): boolean {\n        return !!this.data.folder;\n    }\n\n    ngOnInit() {\n        const { folder } = this.data;\n        let name = '';\n        let title = '';\n        let description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            title = properties?.['cm:title'] ?? '';\n            description = properties?.['cm:description'] ?? '';\n        }\n\n        const validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            title: [ title ],\n            description: [ description ]\n        });\n    }\n\n    get name(): string {\n        const { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n\n    get title(): string {\n        const { title } = this.form.value;\n\n        return (title || '').trim();\n    }\n\n    get description(): string {\n        const { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n\n    private get properties(): any {\n        const { title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n\n    private create(): Observable<Node> {\n        const { name, properties, nodeType, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties, nodeType });\n    }\n\n    private edit(): Observable<Node> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n\n    submit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: Node) => {\n                    this.success.emit(folder);\n                    dialog.close(folder);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    handleError(error: any): any {\n        let errorMessage = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                errorMessage = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch (err) { /* Do nothing, keep the original message */ }\n\n        this.error.emit(this.translation.instant(errorMessage));\n\n        return error;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, Subject } from 'rxjs';\nimport {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  AbstractControl\n} from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SiteBodyCreate, SiteEntry, SitePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService, SitesService } from '@alfresco/adf-core';\nimport { debounceTime, finalize, mergeMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'adf-library-dialog',\n  styleUrls: ['./library.dialog.scss'],\n  templateUrl: './library.dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'adf-library-dialog' }\n})\nexport class LibraryDialogComponent implements OnInit, OnDestroy {\n  /** Emitted when an error occurs. */\n  @Output()\n  error: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Emitted when the new library is created successfully. The\n   * event parameter is a SiteEntry object with the details of the\n   * newly-created library.\n   */\n  @Output()\n  success: EventEmitter<any> = new EventEmitter<any>();\n\n  onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n  createTitle = 'LIBRARY.DIALOG.CREATE_TITLE';\n  libraryTitleExists = false;\n  form: FormGroup;\n  visibilityOption: any;\n  visibilityOptions = [\n    { value: 'PUBLIC', label: 'LIBRARY.VISIBILITY.PUBLIC', disabled: false },\n    { value: 'PRIVATE', label: 'LIBRARY.VISIBILITY.PRIVATE', disabled: false },\n    {\n      value: 'MODERATED',\n      label: 'LIBRARY.VISIBILITY.MODERATED',\n      disabled: false\n    }\n  ];\n  disableCreateButton = false;\n\n  constructor(\n    private alfrescoApiService: AlfrescoApiService,\n    private sitesService: SitesService,\n    private formBuilder: FormBuilder,\n    private dialog: MatDialogRef<LibraryDialogComponent>\n  ) {}\n\n  ngOnInit() {\n    const validators = {\n      id: [\n        Validators.required,\n        Validators.maxLength(72),\n        this.forbidSpecialCharacters\n      ],\n      title: [\n        Validators.required,\n        this.forbidOnlySpaces,\n        Validators.minLength(2),\n        Validators.maxLength(256)\n      ],\n      description: [Validators.maxLength(512)]\n    };\n\n    this.form = this.formBuilder.group({\n      title: [null, validators.title],\n      id: [null, validators.id, this.createSiteIdValidator()],\n      description: ['', validators.description]\n    });\n\n    this.visibilityOption = this.visibilityOptions[0].value;\n\n    this.form.controls['title'].valueChanges\n      .pipe(\n        debounceTime(500),\n        mergeMap(\n            (title) => this.checkLibraryNameExists(title),\n            (title) => title\n        ),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((title: string) => {\n        if (!this.form.controls['id'].dirty && this.canGenerateId(title)) {\n          this.form.patchValue({ id: this.sanitize(title.trim()) });\n          this.form.controls['id'].markAsTouched();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  get title(): string {\n    const { title } = this.form.value;\n\n    return (title || '').trim();\n  }\n\n  get id(): string {\n    const { id } = this.form.value;\n\n    return (id || '').trim();\n  }\n\n  get description(): string {\n    const { description } = this.form.value;\n\n    return (description || '').trim();\n  }\n\n  get visibility(): string {\n    return this.visibilityOption || '';\n  }\n\n  submit() {\n    const { form, dialog } = this;\n\n    if (!form.valid) {\n      return;\n    }\n\n    this.disableCreateButton = true;\n    this.create().pipe(finalize(() => this.disableCreateButton = false)).subscribe(\n      (node: SiteEntry) => {\n        this.success.emit(node);\n        dialog.close(node);\n      },\n      (error) => this.handleError(error)\n    );\n  }\n\n  visibilityChangeHandler(event) {\n    this.visibilityOption = event.value;\n  }\n\n  private create(): Observable<SiteEntry> {\n    const { title, id, description, visibility } = this;\n    const siteBody = <SiteBodyCreate> {\n      id,\n      title,\n      description,\n      visibility\n    };\n\n    return this.sitesService.createSite(siteBody);\n  }\n\n  private sanitize(input: string) {\n    return input.replace(/[\\s\\s]+/g, '-').replace(/[^A-Za-z0-9-]/g, '');\n  }\n\n  private canGenerateId(title) {\n    return Boolean(title.replace(/[^A-Za-z0-9-]/g, '').length);\n  }\n\n  private handleError(error: any): any {\n      try {\n          const {\n              error: { statusCode }\n          } = JSON.parse(error.message);\n\n          if (statusCode === 409) {\n              this.form.controls['id'].setErrors({\n                  message: 'LIBRARY.ERRORS.CONFLICT'\n              });\n          }\n      } catch (error) {\n\n      }\n\n      return error;\n  }\n\n  private async checkLibraryNameExists(libraryTitle: string) {\n    let entries = [];\n\n    try {\n        entries = (await this.findLibraryByTitle(libraryTitle)).list.entries;\n    } catch {\n        entries = [];\n    }\n\n    if (entries.length) {\n      this.libraryTitleExists = entries[0].entry.title.toLowerCase() === libraryTitle.toLowerCase();\n    } else {\n      this.libraryTitleExists = false;\n    }\n  }\n\n  private findLibraryByTitle(libraryTitle: string): Promise<SitePaging> {\n    return this.alfrescoApiService\n      .getInstance()\n      .core.queriesApi.findSites(libraryTitle, {\n        maxItems: 1,\n        fields: ['title']\n      });\n  }\n\n  private forbidSpecialCharacters({ value }: FormControl) {\n    if (value === null || value.length === 0) {\n      return null;\n    }\n\n    const validCharacters: RegExp = /[^A-Za-z0-9-]/;\n    const isValid: boolean = !validCharacters.test(value);\n\n    return isValid\n      ? null\n      : {\n          message: 'LIBRARY.ERRORS.ILLEGAL_CHARACTERS'\n        };\n  }\n\n  private forbidOnlySpaces({ value }: FormControl) {\n    if (value === null || value.length === 0) {\n      return null;\n    }\n\n    const isValid: boolean = !!(value || '').trim();\n\n    return isValid\n      ? null\n      : {\n          message: 'LIBRARY.ERRORS.ONLY_SPACES'\n        };\n  }\n\n  private createSiteIdValidator() {\n    let timer;\n\n    return (control: AbstractControl) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      return new Promise((resolve) => {\n        timer = setTimeout(() => {\n          return this.sitesService.getSite(control.value).subscribe(\n            () => resolve({ message: 'LIBRARY.ERRORS.EXISTENT_SITE' }),\n            () => resolve(null)\n          );\n        }, 300);\n      });\n    };\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { FolderDialogComponent } from './folder.dialog';\nimport { NodeLockDialogComponent } from './node-lock.dialog';\nimport { ConfirmDialogComponent } from './confirm.dialog';\nimport { MatDatetimepickerModule } from '@mat-datetimepicker/core';\nimport { MatMomentDatetimeModule } from '@mat-datetimepicker/moment';\nimport { LibraryDialogComponent } from './library/library.dialog';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatMomentDatetimeModule,\n        MatDatetimepickerModule\n    ],\n    declarations: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ],\n    exports: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Node } from '@alfresco/js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\nconst DEFAULT_FOLDER_PARENT_ID = '-my-';\n\n@Directive({\n    selector: '[adf-create-folder]'\n})\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Parent folder where the new folder will be located after creation. */\n    @Input('adf-create-folder')\n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n\n    /** Title of folder creation dialog. */\n    @Input()\n    title: string = null;\n\n    /** Type of node to create. */\n    @Input()\n    nodeType = 'cm:folder';\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the folder is created successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig() {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId, title: createTitle, nodeType } = this;\n\n        return {\n            data: { parentNodeId, createTitle, nodeType },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: Node) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: Node) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Node } from '@alfresco/js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Directive({\n    selector: '[adf-edit-folder]'\n})\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Folder node to edit. */\n    @Input('adf-edit-folder')\n    folder: Node;\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Title of folder edit dialog. */\n    @Input()\n    title: string = null;\n\n    /** Emitted when the folder has been edited successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public elementRef: ElementRef,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig() {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: {\n                folder,\n                editTitle: this.title\n            },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: Node) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: Node) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { FolderCreateDirective } from './folder-create.directive';\nimport { FolderEditDirective } from './folder-edit.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ],\n    exports: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ]\n})\nexport class FolderDirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { CardViewDateItemModel, CardViewTextItemModel, FileSizePipe } from '@alfresco/adf-core';\n@Injectable({\n    providedIn: 'root'\n})\nexport class BasicPropertiesService {\n\n    constructor(private fileSizePipe: FileSizePipe) {\n    }\n\n    getProperties(node: Node) {\n\n        const sizeInBytes = node.content ? node.content.sizeInBytes : '',\n            mimeTypeName = node.content ? node.content.mimeTypeName : '',\n            author = node.properties ? node.properties['cm:author'] : '',\n            description = node.properties ? node.properties['cm:description'] : '',\n            title = node.properties ? node.properties['cm:title'] : '';\n\n        return [\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.NAME',\n                value: node.name,\n                key: 'properties.cm:name',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.TITLE',\n                value: title,\n                key: 'properties.cm:title',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.CREATOR',\n                value: node.createdByUser.displayName,\n                key: 'createdByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.CREATED_DATE',\n                value: node.createdAt,\n                key: 'createdAt',\n                editable: false,\n                format: 'mediumDate'\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.SIZE',\n                value: sizeInBytes,\n                key: 'content.sizeInBytes',\n                pipes: [{ pipe: this.fileSizePipe }],\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIER',\n                value: node.modifiedByUser.displayName,\n                key: 'modifiedByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIED_DATE',\n                value: node.modifiedAt,\n                key: 'modifiedAt',\n                editable: false,\n                format: 'mediumDate'\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MIMETYPE',\n                value: mimeTypeName,\n                key: 'content.mimeTypeName',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.AUTHOR',\n                value: author,\n                key: 'properties.cm:author',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.DESCRIPTION',\n                value: description,\n                key: 'properties.cm:description',\n                multiline: true,\n                editable: true\n            })\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    CardViewItemProperties,\n    CardViewItem,\n    CardViewTextItemModel,\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewSelectItemModel,\n    CardViewDatetimeItemModel,\n    CardViewIntItemModel,\n    CardViewFloatItemModel,\n    LogService,\n    MultiValuePipe,\n    AppConfigService,\n    DecimalNumberPipe\n} from '@alfresco/adf-core';\nimport { Property, CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\nimport { of } from 'rxjs';\nimport { Definition, Constraint, Property as PropertyBase } from '@alfresco/js-api';\n\nconst D_TEXT = 'd:text';\nconst D_MLTEXT = 'd:mltext';\nconst D_DATE = 'd:date';\nconst D_DATETIME = 'd:datetime';\nconst D_INT = 'd:int';\nconst D_LONG = 'd:long';\nconst D_FLOAT = 'd:float';\nconst D_DOUBLE = 'd:double';\nconst D_BOOLEAN = 'd:boolean';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PropertyGroupTranslatorService {\n\n    static readonly RECOGNISED_ECM_TYPES = [D_TEXT, D_MLTEXT, D_DATE, D_DATETIME, D_INT, D_LONG, D_FLOAT, D_DOUBLE, D_BOOLEAN];\n\n    valueSeparator: string;\n\n    constructor(private logService: LogService,\n                private multiValuePipe: MultiValuePipe,\n                private decimalNumberPipe: DecimalNumberPipe,\n                private appConfig: AppConfigService) {\n        this.valueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator');\n    }\n\n    public translateToCardViewGroups(propertyGroups: OrganisedPropertyGroup[], propertyValues, definition: Definition): CardViewGroup[] {\n        return propertyGroups.map((propertyGroup) => {\n            const translatedPropertyGroup: any = Object.assign({}, propertyGroup);\n            translatedPropertyGroup.properties = this.translateArray(propertyGroup.properties, propertyValues, definition);\n            return translatedPropertyGroup;\n        });\n    }\n\n    public translateProperty(property: PropertyBase, startValue?: any, allowEditing: boolean = false): CardViewItem {\n        this.checkECMTypeValidity(property.dataType);\n\n        const prefix = 'properties.';\n\n        const propertyDefinition: CardViewItemProperties = {\n            label: property.title || property.id,\n            value: startValue ? startValue : property.defaultValue,\n            key: `${prefix}${property.id}`,\n            default: property.defaultValue,\n            editable: property.isProtected ? false : allowEditing,\n            constraints: property?.constraints\n        };\n\n        return this.transform(propertyDefinition, property.dataType, property.isMultiValued);\n    }\n\n    private translateArray(properties: Property[], propertyValues: any, definition: Definition): CardViewItem[] {\n        return properties.map((property) => {\n            return this.translate(property, propertyValues, this.getPropertyConstraints(property.name, definition));\n        });\n    }\n\n    private translate(property: Property, propertyValues: any, constraints: Constraint[]): CardViewItem {\n        let propertyValue: any;\n        if (propertyValues && !this.isEmpty(propertyValues[property.name])) {\n            propertyValue = propertyValues[property.name];\n        }\n\n        this.checkECMTypeValidity(property.dataType);\n\n        const prefix = 'properties.';\n\n        const propertyDefinition: CardViewItemProperties = {\n            label: property.title || property.name,\n            value: propertyValue,\n            key: `${prefix}${property.name}`,\n            default: property.defaultValue,\n            editable: property.protected ? false : property.editable !== undefined ? property.editable : true,\n            constraints: constraints\n        };\n\n        return this.transform(propertyDefinition, property.dataType, property.multiValued);\n    }\n\n    private transform(propertyDefinition: CardViewItemProperties, dataType: string, isMultiValued: boolean): CardViewItem {\n        let cardViewItemProperty: CardViewItem;\n\n        if (this.isListOfValues(propertyDefinition.constraints)) {\n            const options = propertyDefinition.constraints[0].parameters.allowedValues.map((value) => ({ key: value, label: value }));\n            const properties = Object.assign(propertyDefinition, { options$: of(options) });\n\n            cardViewItemProperty = new CardViewSelectItemModel(properties);\n        } else {\n            switch (dataType) {\n                case D_MLTEXT:\n                    cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                        multiline: true\n                    }));\n                    break;\n\n                case D_INT:\n                case D_LONG:\n                    cardViewItemProperty = new CardViewIntItemModel(Object.assign(propertyDefinition, {\n                        multivalued: isMultiValued,\n                        pipes: [{ pipe: this.multiValuePipe, params: [this.valueSeparator] }]\n                    }));\n                    break;\n\n                case D_FLOAT:\n                case D_DOUBLE:\n                    cardViewItemProperty = new CardViewFloatItemModel(Object.assign(propertyDefinition, {\n                        multivalued: isMultiValued,\n                        pipes: [\n                            { pipe: this.decimalNumberPipe },\n                            { pipe: this.multiValuePipe, params: [this.valueSeparator] }\n                        ]\n                    }));\n                    break;\n\n                case D_DATE:\n                    cardViewItemProperty = new CardViewDateItemModel(Object.assign(propertyDefinition, {\n                        multivalued: isMultiValued,\n                        pipes: [{ pipe: this.multiValuePipe, params: [this.valueSeparator] }]\n                    }));\n                    break;\n\n                case D_DATETIME:\n                    cardViewItemProperty = new CardViewDatetimeItemModel(Object.assign(propertyDefinition, {\n                        multivalued: isMultiValued,\n                        pipes: [{ pipe: this.multiValuePipe, params: [this.valueSeparator] }]\n                    }));\n                    break;\n\n                case D_BOOLEAN:\n                    cardViewItemProperty = new CardViewBoolItemModel(propertyDefinition);\n                    break;\n\n                case D_TEXT:\n                default:\n                    cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                        multivalued: isMultiValued,\n                        multiline: isMultiValued,\n                        pipes: [{ pipe: this.multiValuePipe, params: [this.valueSeparator] }]\n                    }));\n            }\n        }\n\n        return cardViewItemProperty;\n    }\n\n    private isListOfValues(constraint: Constraint[]): boolean {\n        return constraint?.[0]?.type === 'LIST';\n    }\n\n    private getPropertyConstraints(propertyName: string, definition: Definition): Constraint[] {\n        return definition?.properties.find((item) => item.id === propertyName)?.constraints ?? [];\n    }\n\n    private checkECMTypeValidity(ecmPropertyType: string) {\n        if (PropertyGroupTranslatorService.RECOGNISED_ECM_TYPES.indexOf(ecmPropertyType) === -1) {\n            this.logService.error(`Unknown type for mapping: ${ecmPropertyType}`);\n        }\n    }\n\n    private isEmpty(value: any): boolean {\n        return value === undefined || value === null || value === '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyGroup, Property, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\n\nconst emptyGroup = {\n    properties: {}\n};\n\nfunction convertObjectToArray(object: any): Property[] {\n    return Object.keys(object).map((key) => object[key]);\n}\n\nexport function getGroup(propertyGroups: PropertyGroupContainer, groupName: string): PropertyGroup | undefined {\n    return propertyGroups[groupName];\n}\n\nexport function getProperty(propertyGroups: PropertyGroupContainer, groupName: string, propertyName: string): Property | Property[] | undefined {\n    const groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;\n    let propertyDefinitions;\n\n    if (propertyName === '*') {\n        propertyDefinitions = convertObjectToArray(groupDefinition.properties);\n    } else {\n        propertyDefinitions = groupDefinition.properties[propertyName];\n    }\n\n    return propertyDefinitions;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup, PropertyGroupContainer, Property } from '../../interfaces/content-metadata.interfaces';\nimport { getGroup, getProperty } from './property-group-reader';\n\nexport class AspectOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) { }\n\n    public isGroupAllowed(groupName: string): boolean {\n        if (this.isIncludeAllEnabled()) {\n            return true;\n        }\n        const groupNames = Object.keys(this.config);\n        return groupNames.indexOf(groupName) !== -1;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const aspects = this.config,\n            aspectNames = Object.keys(aspects);\n\n        return aspectNames\n            .reduce((groupAccumulator, aspectName) => {\n                const newGroup = this.getOrganisedPropertyGroup(propertyGroups, aspectName);\n                return groupAccumulator.concat(newGroup);\n            }, [])\n            .filter((organisedPropertyGroup) => organisedPropertyGroup.properties.length > 0);\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const groups = Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                if (this.isAspectReadOnly(groupName)) {\n                    Object.keys(properties).map((propertyName) => this.setReadOnlyProperty(properties[propertyName]));\n                }\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => {\n                        if (this.isPropertyReadOnly(propertyName)) {\n                            this.setReadOnlyProperty(properties[propertyName]);\n                        }\n                        return properties[propertyName];\n                    })\n                });\n            });\n\n        return groups;\n    }\n\n    private setReadOnlyProperty(property: Property) {\n        property.editable = false;\n    }\n\n    private isPropertyReadOnly(propertyName: string): boolean {\n        const readOnlyAspects = this.config.readOnlyProperties;\n\n        if (Array.isArray(readOnlyAspects)) {\n            return readOnlyAspects.includes(propertyName);\n        } else {\n            return readOnlyAspects === propertyName;\n        }\n    }\n\n    private isAspectReadOnly(propertyGroupName: string): boolean {\n        const readOnlyAspects = this.config.readOnlyAspects;\n\n        if (Array.isArray(readOnlyAspects)) {\n            return readOnlyAspects.includes(propertyGroupName);\n        } else {\n            return readOnlyAspects === propertyGroupName;\n        }\n\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        if (this.config.exclude) {\n            return propertyGroups.filter((preset) => {\n                return !this.config.exclude.includes(preset.name);\n            });\n        }\n        return propertyGroups;\n    }\n\n    public isIncludeAllEnabled() {\n        return this.config.includeAll;\n    }\n\n    private getOrganisedPropertyGroup(propertyGroups, aspectName) {\n        const group = getGroup(propertyGroups, aspectName);\n        let newGroup = [];\n\n        if (group) {\n            const aspectProperties = this.config[aspectName];\n            let properties;\n\n            if (aspectProperties === '*') {\n                properties = getProperty(propertyGroups, aspectName, aspectProperties);\n            } else {\n                properties = (<string[]> aspectProperties)\n                    .map((propertyName) => getProperty(propertyGroups, aspectName, propertyName))\n                    .filter((props) => props !== undefined);\n            }\n\n            newGroup = [{ title: group.title, properties }];\n        }\n\n        return newGroup;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\n\nexport class IndifferentConfigService implements ContentMetadataConfig {\n\n    isGroupAllowed(): boolean {\n        return true;\n    }\n\n    reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n    }\n\n    filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        return propertyGroups;\n    }\n\n    appendAllPreset(): OrganisedPropertyGroup[] {\n        return[];\n    }\n\n    isIncludeAllEnabled(): boolean {\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentMetadataConfig,\n    LayoutOrientedConfigItem,\n    OrganisedPropertyGroup,\n    PropertyGroupContainer,\n    Property\n} from '../../interfaces/content-metadata.interfaces';\nimport { getProperty } from './property-group-reader';\n\nexport class LayoutOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) { }\n\n    public isGroupAllowed(groupName: string): boolean {\n        if (this.isIncludeAllEnabled()) {\n            return true;\n        }\n        return this.getMatchingGroups(groupName).length > 0;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const layoutBlocks = this.config.filter((itemsGroup) => itemsGroup.items);\n\n        const organisedPropertyGroup = layoutBlocks.map((layoutBlock) => {\n            const flattenedItems = this.flattenItems(layoutBlock.items),\n                properties = flattenedItems.reduce((props, explodedItem) => {\n                    const isProperty = typeof explodedItem.property  === 'object';\n                    const propertyName = isProperty ? explodedItem.property.name : explodedItem.property;\n                    let  property = getProperty(propertyGroups, explodedItem.groupName, propertyName) || [];\n                    if (isProperty) { property = this.setPropertyTitle(property, explodedItem.property); }\n                    property = this.setEditableProperty(property, explodedItem);\n                    return props.concat(property);\n                }, []);\n\n            return {\n                title: layoutBlock.title,\n                properties\n            };\n        });\n\n        return organisedPropertyGroup;\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        let excludedConfig = this.config\n            .map((config) => config.exclude)\n            .find((exclude) => exclude !== undefined);\n\n        if (excludedConfig === undefined) {\n            excludedConfig = [];\n        } else if (typeof excludedConfig === 'string') {\n            excludedConfig = [excludedConfig];\n        }\n\n        return propertyGroups.filter((props) => {\n            return !excludedConfig.includes(props.name);\n        });\n    }\n\n    public isIncludeAllEnabled() {\n        const includeAllProperty = this.config\n            .map((config) => config.includeAll)\n            .find((includeAll) => includeAll !== undefined);\n\n        return includeAllProperty !== undefined ? includeAllProperty : false;\n    }\n\n    private setEditableProperty(propertyGroup: Property | Property[], itemConfig): Property | Property[] {\n        if (Array.isArray(propertyGroup)) {\n            propertyGroup.map((property) => property.editable = itemConfig.editable !== undefined ? itemConfig.editable : true);\n        } else {\n            propertyGroup.editable = itemConfig.editable !== undefined ? itemConfig.editable : true;\n        }\n\n        return propertyGroup;\n    }\n\n    private setPropertyTitle(item: Property | Property[], property: Property): Property | Property[] {\n        if (!Array.isArray(item)) {\n            return { ...item, ...(item.name === property.name && !!property.title) && { title: property.title } };\n        }\n        return item;\n    }\n\n    private flattenItems(items) {\n        return items.reduce((accumulator, item) => {\n            const properties = Array.isArray(item.properties) ? item.properties : [item.properties];\n            const flattenedProperties = properties.map((property) => {\n                return {\n                    groupName: item.aspect || item.type,\n                    property,\n                    editable: item.editable\n                };\n            });\n\n            return accumulator.concat(flattenedProperties);\n        }, []);\n    }\n\n    private getMatchingGroups(groupName: string): LayoutOrientedConfigItem[] {\n        return this.config\n            .map((layoutBlock) => layoutBlock.items)\n            .reduce((accumulator, items) => accumulator.concat(items), [])\n            .filter((item) => item.aspect === groupName || item.type === groupName);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, LogService } from '@alfresco/adf-core';\nimport { AspectOrientedConfigService } from './aspect-oriented-config.service';\nimport { IndifferentConfigService } from './indifferent-config.service';\nimport { LayoutOrientedConfigService } from './layout-oriented-config.service';\nimport {\n    PresetConfig,\n    ContentMetadataConfig,\n    AspectOrientedConfig,\n    LayoutOrientedConfig\n} from '../../interfaces/content-metadata.interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentMetadataConfigFactory {\n\n    static readonly INDIFFERENT_PRESET = '*';\n    static readonly DEFAULT_PRESET_NAME = 'default';\n\n    constructor(private appConfigService: AppConfigService, private logService: LogService) {}\n\n    public get(presetName: string = 'default'): ContentMetadataConfig {\n        let presetConfig: PresetConfig;\n        try {\n            presetConfig = this.appConfigService.config['content-metadata'].presets[presetName];\n        } catch {\n            if (presetName !== ContentMetadataConfigFactory.DEFAULT_PRESET_NAME) {\n                this.logService.error(`No content-metadata preset for: ${presetName}`);\n            }\n            presetConfig = ContentMetadataConfigFactory.INDIFFERENT_PRESET;\n        }\n\n        return this.createConfig(presetConfig);\n    }\n\n    private createConfig(presetConfig: PresetConfig): ContentMetadataConfig {\n        let config: ContentMetadataConfig;\n\n        if (this.isLayoutOrientedPreset(presetConfig)) {\n            config = new LayoutOrientedConfigService(<LayoutOrientedConfig> presetConfig);\n        } else if (this.isAspectOrientedPreset(presetConfig)) {\n            config = new AspectOrientedConfigService(<AspectOrientedConfig> presetConfig);\n        } else {\n            config = new IndifferentConfigService();\n        }\n\n        Object.freeze(config);\n        return config;\n    }\n\n    private isAspectOrientedPreset(presetConfig: PresetConfig): boolean {\n        return this.isObject(presetConfig);\n    }\n\n    private isLayoutOrientedPreset(presetConfig: PresetConfig): boolean {\n        return Array.isArray(presetConfig);\n    }\n\n    private isObject(x: any): boolean {\n        return x != null && typeof x === 'object';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Observable, defer, forkJoin } from 'rxjs';\nimport { PropertyGroup, PropertyGroupContainer } from '../interfaces/content-metadata.interfaces';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PropertyDescriptorsService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {}\n\n    load(groupNames: string[]): Observable<PropertyGroupContainer> {\n        const groupFetchStreams = groupNames\n            .map((groupName) => groupName.replace(':', '_'))\n            .map((groupName) => defer( () => this.alfrescoApiService.classesApi.getClass(groupName)) );\n\n        return forkJoin(groupFetchStreams).pipe(\n            map(this.convertToObject)\n        );\n    }\n\n    private convertToObject(propertyGroupsArray: PropertyGroup[]): PropertyGroupContainer {\n        return propertyGroupsArray.reduce((propertyGroups, propertyGroup) => {\n            return Object.assign({}, propertyGroups, {\n                [propertyGroup.name]: propertyGroup\n            });\n        }, {});\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TypeEntry, TypePaging } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentTypeService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    getContentTypeByPrefix(prefixedType: string): Observable<TypeEntry> {\n        return from(this.alfrescoApiService.typesApi.getType(prefixedType));\n    }\n\n    getContentTypeChildren(nodeType: string): Observable<TypeEntry[]> {\n        const where = `(parentId in ('${nodeType}') and not namespaceUri matches('http://www.alfresco.*'))`;\n        const opts: any = {\n            where,\n            include: ['properties']\n        };\n        return from(this.alfrescoApiService.typesApi.listTypes(opts)).pipe(\n            map((result: TypePaging) => result.list.entries)\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TypeEntry } from '@alfresco/js-api';\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ContentTypeDialogComponentData } from './content-type-metadata.interface';\nimport { ContentTypeService } from './content-type.service';\n\n@Component({\n    selector: 'adf-content-type-dialog',\n    templateUrl: './content-type-dialog.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentTypeDialogComponent implements OnInit {\n\n    title: string;\n    description: string;\n    nodeType: string;\n    confirmMessage: string;\n\n    currentContentType: TypeEntry;\n    typeProperties: any[] = [];\n\n    propertyColumns: string[] = ['name', 'title', 'dataType'];\n\n    constructor(private dialog: MatDialogRef<ContentTypeDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: ContentTypeDialogComponentData,\n                private contentTypeService: ContentTypeService) {\n        this.title = data.title;\n        this.description = data.description;\n        this.confirmMessage = data.confirmMessage;\n        this.nodeType = data.nodeType;\n\n        this.contentTypeService.getContentTypeByPrefix(this.nodeType).subscribe((contentTypeEntry) => {\n            this.currentContentType = contentTypeEntry;\n            this.typeProperties = this.currentContentType.entry.properties.filter((property) => property.id.startsWith(this.currentContentType.entry.model.namespacePrefix));\n        });\n    }\n\n    ngOnInit() {\n        this.dialog.backdropClick().subscribe(() => {\n            this.close();\n        });\n    }\n\n    close() {\n        this.data.select.complete();\n    }\n\n    onCancel() {\n        this.close();\n    }\n\n    onApply() {\n        this.data.select.next(true);\n        this.close();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CardViewItem, CardViewSelectItemModel, CardViewSelectItemOption, CardViewTextItemModel, VersionCompatibilityService } from '@alfresco/adf-core';\nimport { Observable, of, Subject, zip } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { ContentTypeDialogComponent } from '../../content-type/content-type-dialog.component';\nimport { ContentTypeDialogComponentData } from '../../content-type/content-type-metadata.interface';\nimport { ContentTypeService } from '../../content-type/content-type.service';\nimport { Node, Property, TypeEntry } from '@alfresco/js-api';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentTypePropertiesService {\n\n    constructor(private contentTypeService: ContentTypeService,\n                private dialog: MatDialog,\n                private versionCompatibilityService: VersionCompatibilityService,\n                private propertyGroupTranslatorService: PropertyGroupTranslatorService) {\n    }\n\n    getContentTypeCardItem(node: Node): Observable<CardViewItem[]> {\n        if (this.versionCompatibilityService.isVersionSupported('7')) {\n            return this.contentTypeService.getContentTypeByPrefix(node.nodeType).\n                pipe(\n                    map((contentType) => {\n                        const contentTypesOptions$ = this.getContentTypesAsSelectOption(contentType);\n                        const contentTypeCard = this.buildContentTypeSelectCardModel(contentType.entry.id, contentTypesOptions$);\n                        const filteredProperties =  this.getContentTypeSpecificProperties(contentType);\n                        const propertiesCard = this.buildCardItemsFromPropertyList(filteredProperties, node.properties);\n                        return [contentTypeCard, ...propertiesCard];\n                    }));\n        } else {\n            return of([this.buildContentTypeTextCardModel(node.nodeType)]);\n        }\n    }\n\n    buildCardItemsFromPropertyList(properties: Property[], currentProperties: any): CardViewItem[] {\n        return properties.map((property) => {\n            const propertyValue = currentProperties ? currentProperties[property.id] : null;\n            return this.buildCardItemFromProperty(property, propertyValue);\n        });\n    }\n\n    private buildCardItemFromProperty(property: Property, propertyValue: any): CardViewItem {\n        return this.propertyGroupTranslatorService.translateProperty(property, propertyValue, true);\n    }\n\n    private getContentTypeSpecificProperties(contentType: TypeEntry): Property[] {\n        return contentType.entry.properties.filter((property) => property.id.startsWith(contentType.entry.model.namespacePrefix));\n    }\n\n    private buildContentTypeTextCardModel(currentValue: string): CardViewTextItemModel {\n        const contentTypeCard = new CardViewTextItemModel({\n            label: 'CORE.METADATA.BASIC.CONTENT_TYPE',\n            value: currentValue,\n            key: 'nodeType',\n            editable: false\n        });\n\n        return contentTypeCard;\n    }\n\n    private buildContentTypeSelectCardModel(currentValue: string, options$: Observable<CardViewSelectItemOption<string>[]>): CardViewSelectItemModel<string> {\n        const contentTypeCard = new CardViewSelectItemModel({\n            label: 'CORE.METADATA.BASIC.CONTENT_TYPE',\n            value: currentValue,\n            key: 'nodeType',\n            editable: true,\n            options$: options$,\n            displayNoneOption: false\n        });\n\n        return contentTypeCard;\n    }\n\n    private getContentTypesAsSelectOption(currentType: TypeEntry): Observable<CardViewSelectItemOption<string>[]> {\n        const childrenTypes$ = this.contentTypeService.getContentTypeChildren(currentType.entry.id);\n        return zip(childrenTypes$, of(currentType)).pipe(\n            distinctUntilChanged(),\n            map(([contentTypesEntries, currentContentType]) => {\n                const updatedTypes = this.appendCurrentType(currentContentType, contentTypesEntries);\n                return updatedTypes.map((contentType) => <CardViewSelectItemOption<string>> { key: contentType.entry.id, label: contentType.entry.title ?? contentType.entry.id });\n            }));\n    }\n\n    private appendCurrentType(currentType: TypeEntry, contentTypesEntries: TypeEntry[]): TypeEntry[] {\n        const resultTypes = [...contentTypesEntries];\n        const currentTypePresent = contentTypesEntries.find((type) => type.entry.id === currentType.entry.id);\n        if (!currentTypePresent) {\n            resultTypes.push(currentType);\n        }\n        return resultTypes;\n    }\n\n    openContentTypeDialogConfirm(nodeType): Observable<boolean> {\n        const select = new Subject<boolean>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentTypeDialogComponentData = {\n            title: 'CORE.METADATA.CONTENT_TYPE.DIALOG.TITLE',\n            description: 'CORE.METADATA.CONTENT_TYPE.DIALOG.DESCRIPTION',\n            confirmMessage: 'CORE.METADATA.CONTENT_TYPE.DIALOG.CONFIRM',\n            select: select,\n            nodeType\n        };\n\n        this.openDialog(data, 'adf-content-type-dialog', '600px');\n        return select;\n    }\n\n    close() {\n        this.dialog.closeAll();\n    }\n\n    private openDialog(data: ContentTypeDialogComponentData, panelClass: string, width: string) {\n        this.dialog.open(ContentTypeDialogComponent, {\n            data,\n            panelClass,\n            width,\n            disableClose: true\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { BasicPropertiesService } from './basic-properties.service';\nimport { Observable, of, iif, Subject } from 'rxjs';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\nimport { CardViewItem } from '@alfresco/adf-core';\nimport { CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\nimport { ContentMetadataConfigFactory } from './config/content-metadata-config.factory';\nimport { PropertyDescriptorsService } from './property-descriptors.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport { ContentTypePropertiesService } from './content-type-property.service';\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentMetadataService {\n\n    error = new Subject<{ statusCode: number, message: string }>();\n\n    constructor(private basicPropertiesService: BasicPropertiesService,\n                private contentMetadataConfigFactory: ContentMetadataConfigFactory,\n                private propertyGroupTranslatorService: PropertyGroupTranslatorService,\n                private propertyDescriptorsService: PropertyDescriptorsService,\n                private contentTypePropertyService: ContentTypePropertiesService) {\n    }\n\n    getBasicProperties(node: Node): Observable<CardViewItem[]> {\n        return of(this.basicPropertiesService.getProperties(node));\n    }\n\n    getContentTypeProperty(node: Node): Observable<CardViewItem[]> {\n        return this.contentTypePropertyService.getContentTypeCardItem(node);\n    }\n\n    openConfirmDialog(changedProperties): Observable<any> {\n        return this.contentTypePropertyService.openContentTypeDialogConfirm(changedProperties.nodeType);\n    }\n\n    getGroupedProperties(node: Node, presetName: string = 'default'): Observable<CardViewGroup[]> {\n        let groupedProperties = of([]);\n\n        if (node.aspectNames) {\n            const contentMetadataConfig = this.contentMetadataConfigFactory.get(presetName),\n                groupNames = node.aspectNames\n                    .concat(node.nodeType)\n                    .filter((groupName) => contentMetadataConfig.isGroupAllowed(groupName));\n\n            if (groupNames.length > 0) {\n                groupedProperties = this.propertyDescriptorsService.load(groupNames).pipe(\n                    switchMap((groups) =>\n                        iif(\n                            () => contentMetadataConfig.isIncludeAllEnabled(),\n                            of(contentMetadataConfig.appendAllPreset(groups).concat(contentMetadataConfig.reorganiseByConfig(groups))),\n                            of(contentMetadataConfig.reorganiseByConfig(groups))\n                        )),\n                    map((groups) => contentMetadataConfig.filterExcludedPreset(groups)),\n                    map((groups) => this.filterEmptyPreset(groups)),\n                    map((groups) => this.setTitleToNameIfNotSet(groups)),\n                    map((groups) => this.propertyGroupTranslatorService.translateToCardViewGroups(groups, node.properties, node.definition))\n                );\n            }\n        }\n\n        return groupedProperties;\n    }\n\n    setTitleToNameIfNotSet(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        propertyGroups.map((propertyGroup) => {\n            propertyGroup.title = propertyGroup.title || propertyGroup.name;\n        });\n        return propertyGroups;\n    }\n\n    filterEmptyPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[]  {\n        return propertyGroups.filter((props) => props.properties.length);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { Observable, Subject, of, zip } from 'rxjs';\nimport {\n    CardViewItem,\n    NodesApiService,\n    LogService,\n    CardViewUpdateService,\n    AlfrescoApiService,\n    TranslationService,\n    AppConfigService,\n    CardViewBaseItemModel,\n    UpdateNotification\n} from '@alfresco/adf-core';\nimport { ContentMetadataService } from '../../services/content-metadata.service';\nimport { CardViewGroup } from '../../interfaces/content-metadata.interfaces';\nimport { takeUntil, debounceTime, catchError, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-content-metadata',\n    templateUrl: './content-metadata.component.html',\n    host: { 'class': 'adf-content-metadata' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentMetadataComponent implements OnChanges, OnInit, OnDestroy {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    protected onDestroy$ = new Subject<boolean>();\n\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: Node;\n\n    /** Toggles whether the edit button should be shown */\n    @Input()\n    editable: boolean = false;\n\n    /** Toggles whether to display empty values in the card view */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** Toggles between expanded (ie, full information) and collapsed\n     * (ie, reduced information) in the display\n     */\n    @Input()\n    expanded: boolean = false;\n\n    /** The multi parameter of the underlying material expansion panel, set to true to allow multi accordion to be expanded at the same time */\n    @Input()\n    multi = false;\n\n    /** Name of the metadata preset, which defines aspects and their properties */\n    @Input()\n    preset: string;\n\n    /** Toggles whether the metadata properties should be shown */\n    @Input()\n    displayDefaultProperties: boolean = true;\n\n    /** (optional) shows the given aspect in the expanded  card */\n    @Input()\n    displayAspect: string = null;\n\n    /** Toggles whether or not to enable copy to clipboard action. */\n    @Input()\n    copyToClipboardAction: boolean = true;\n\n    /** Toggles whether or not to enable chips for multivalued properties. */\n    @Input()\n    useChipsForMultiValueProperty: boolean = true;\n\n    multiValueSeparator: string;\n    basicProperties$: Observable<CardViewItem[]>;\n    groupedProperties$: Observable<CardViewGroup[]>;\n\n    changedProperties = {};\n    hasMetadataChanged = false;\n    private targetProperty: CardViewBaseItemModel;\n\n    constructor(\n        private contentMetadataService: ContentMetadataService,\n        private cardViewUpdateService: CardViewUpdateService,\n        private nodesApiService: NodesApiService,\n        private logService: LogService,\n        private alfrescoApiService: AlfrescoApiService,\n        private translationService: TranslationService,\n        private appConfig: AppConfigService\n    ) {\n        this.copyToClipboardAction = this.appConfig.get<boolean>('content-metadata.copy-to-clipboard-action');\n        this.multiValueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator') || ContentMetadataComponent.DEFAULT_SEPARATOR;\n        this.useChipsForMultiValueProperty = this.appConfig.get<boolean>('content-metadata.multi-value-chips');\n    }\n\n    ngOnInit() {\n        this.cardViewUpdateService.itemUpdated$\n            .pipe(\n                debounceTime(500),\n                takeUntil(this.onDestroy$))\n            .subscribe(\n                (updatedNode: UpdateNotification) => {\n                    this.hasMetadataChanged = true;\n                    this.targetProperty = updatedNode.target;\n                    this.updateChanges(updatedNode.changed);\n                }\n            );\n\n        this.cardViewUpdateService.updatedAspect$.pipe(\n            debounceTime(500),\n            takeUntil(this.onDestroy$))\n            .subscribe((node) => this.loadProperties(node));\n\n        this.loadProperties(this.node);\n    }\n\n    protected handleUpdateError(error: Error) {\n        this.logService.error(error);\n\n        let statusCode = 0;\n\n        try {\n            statusCode = JSON.parse(error.message).error.statusCode;\n        } catch {\n        }\n\n        let message = `METADATA.ERRORS.${statusCode}`;\n\n        if (this.translationService.instant(message) === message) {\n            message = 'METADATA.ERRORS.GENERIC';\n        }\n\n        this.contentMetadataService.error.next({\n            statusCode,\n            message\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node && !changes.node.firstChange) {\n            this.loadProperties(changes.node.currentValue);\n        }\n    }\n\n    private loadProperties(node: Node) {\n        if (node) {\n            this.basicProperties$ = this.getProperties(node);\n            this.groupedProperties$ = this.contentMetadataService.getGroupedProperties(node, this.preset);\n        }\n    }\n\n    private getProperties(node: Node) {\n        const properties$ = this.contentMetadataService.getBasicProperties(node);\n        const contentTypeProperty$ = this.contentMetadataService.getContentTypeProperty(node);\n        return zip(properties$, contentTypeProperty$)\n            .pipe(map(([properties, contentTypeProperty]) => {\n                const filteredProperties = contentTypeProperty.filter((property) => properties.findIndex((baseProperty) => baseProperty.key === property.key) === -1);\n                return [...properties, ...filteredProperties];\n            }));\n    }\n\n    updateChanges(updatedNodeChanges) {\n        Object.keys(updatedNodeChanges).map((propertyGroup: string) => {\n            if (typeof updatedNodeChanges[propertyGroup] === 'object') {\n                this.changedProperties[propertyGroup] = {\n                    ...this.changedProperties[propertyGroup],\n                    ...updatedNodeChanges[propertyGroup]\n                };\n            } else {\n                this.changedProperties[propertyGroup] = updatedNodeChanges[propertyGroup];\n            }\n        });\n    }\n\n    saveChanges() {\n        if (this.hasContentTypeChanged(this.changedProperties)) {\n            this.contentMetadataService.openConfirmDialog(this.changedProperties).subscribe(() => {\n                this.updateNode();\n            });\n        } else {\n            this.updateNode();\n        }\n    }\n\n    private updateNode() {\n        this.nodesApiService.updateNode(this.node.id, this.changedProperties).pipe(\n            catchError((err) => {\n                this.cardViewUpdateService.updateElement(this.targetProperty);\n                this.handleUpdateError(err);\n                return of(null);\n            }))\n            .subscribe((updatedNode) => {\n                if (updatedNode) {\n                    if (this.hasContentTypeChanged(this.changedProperties)) {\n                        this.cardViewUpdateService.updateNodeAspect(this.node);\n                    }\n                    this.revertChanges();\n                    Object.assign(this.node, updatedNode);\n                    this.alfrescoApiService.nodeUpdated.next(this.node);\n                }\n            });\n    }\n\n    private hasContentTypeChanged(changedProperties): boolean {\n        return !!changedProperties?.nodeType;\n    }\n\n    revertChanges() {\n        this.changedProperties = {};\n        this.hasMetadataChanged = false;\n    }\n\n    cancelChanges() {\n        this.revertChanges();\n        this.loadProperties(this.node);\n    }\n\n    showGroup(group: CardViewGroup): boolean {\n        const properties = group.properties.filter((property) => {\n            return !this.isEmpty(property.displayValue);\n        });\n\n        return properties.length > 0;\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    public canExpandTheCard(group: CardViewGroup): boolean {\n        return group.title === this.displayAspect;\n    }\n\n    public canExpandProperties(): boolean {\n        return !this.expanded || this.displayAspect === 'Properties';\n    }\n\n    keyDown(event: KeyboardEvent) {\n        if (event.keyCode === 37 || event.keyCode === 39) { // ArrowLeft && ArrowRight\n            event.stopPropagation();\n        }\n    }\n\n    private isEmpty(value: any): boolean {\n        return value === undefined || value === null || value === '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { AspectListDialogComponentData } from './aspect-list-dialog-data.interface';\n@Component({\n    selector: 'adf-aspect-list-dialog',\n    templateUrl: './aspect-list-dialog.component.html',\n    styleUrls: ['./aspect-list-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AspectListDialogComponent implements OnInit {\n\n    title: string;\n    description: string;\n    currentNodeId: string;\n    overTableMessage: string;\n\n    currentAspectSelection: string[] = [];\n\n    constructor(private dialog: MatDialogRef<AspectListDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: AspectListDialogComponentData) {\n        this.title = data.title;\n        this.description = data.description;\n        this.overTableMessage = data.overTableMessage;\n        this.currentNodeId = data.nodeId;\n    }\n\n    ngOnInit() {\n        this.dialog.backdropClick().subscribe(() => {\n            this.close();\n        });\n        this.dialog.keydownEvents().subscribe(event => {\n            // Esc\n            if (event.keyCode === 27) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                this.close();\n            }\n        });\n    }\n\n    onValueChanged(aspectList: string[]) {\n       this.currentAspectSelection = aspectList;\n    }\n\n    close() {\n        this.data.select.complete();\n    }\n\n    onCancel() {\n        this.close();\n    }\n\n    onApply() {\n        this.data.select.next(this.currentAspectSelection);\n        this.close();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlfrescoApiService, AppConfigService, LogService } from '@alfresco/adf-core';\nimport { from, Observable, of, Subject, zip } from 'rxjs';\nimport { AspectListDialogComponentData } from './aspect-list-dialog-data.interface';\nimport { AspectListDialogComponent } from './aspect-list-dialog.component';\nimport { catchError, map } from 'rxjs/operators';\nimport { AspectEntry, AspectPaging } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AspectListService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private appConfigService: AppConfigService,\n                private dialog: MatDialog,\n                private logService: LogService) {\n    }\n\n    getAspects(): Observable<AspectEntry[]> {\n        const visibleAspectList = this.getVisibleAspects();\n        const standardAspects$ = this.getStandardAspects(visibleAspectList);\n        const customAspects$ = this.getCustomAspects();\n        return zip(standardAspects$, customAspects$).pipe(\n            map(([standardAspectList, customAspectList]) => [...standardAspectList, ...customAspectList])\n        );\n    }\n\n    getStandardAspects(whiteList: string[]): Observable<AspectEntry[]> {\n        const where = `(modelId in ('cm:contentmodel', 'emailserver:emailserverModel', 'smf:smartFolder', 'app:applicationmodel' ))`;\n        const opts: any = {\n            where,\n            include: ['properties']\n        };\n        return from(this.alfrescoApiService.aspectsApi.listAspects(opts))\n            .pipe(\n                map((result: AspectPaging) => this.filterAspectByConfig(whiteList, result?.list?.entries)),\n                catchError((error) => {\n                    this.logService.error(error);\n                    return of([]);\n                })\n            );\n    }\n\n    getCustomAspects(): Observable<AspectEntry[]> {\n        const where = `(not namespaceUri matches('http://www.alfresco.*'))`;\n        const opts: any = {\n            where,\n            include: ['properties']\n        };\n        return from(this.alfrescoApiService.aspectsApi.listAspects(opts))\n            .pipe(\n                map((result: AspectPaging) => result?.list?.entries),\n                catchError((error) => {\n                    this.logService.error(error);\n                    return of([]);\n                })\n            );\n    }\n\n    private filterAspectByConfig(visibleAspectList: string[], aspectEntries: AspectEntry[]): AspectEntry[] {\n        let result = aspectEntries ? aspectEntries : [];\n        if (visibleAspectList?.length > 0 && aspectEntries) {\n            result = aspectEntries.filter((value) => {\n                return visibleAspectList.includes(value?.entry?.id);\n            });\n        }\n        return result;\n    }\n\n    getVisibleAspects(): string[] {\n        let visibleAspectList: string[] = [];\n        const aspectVisibleConfig = this.appConfigService.get('aspect-visible');\n        if (aspectVisibleConfig) {\n            for (const aspectGroup of Object.keys(aspectVisibleConfig)) {\n                visibleAspectList = visibleAspectList.concat(aspectVisibleConfig[aspectGroup]);\n            }\n        }\n        return visibleAspectList;\n    }\n\n    openAspectListDialog(nodeId?: string): Observable<string[]> {\n        const select = new Subject<string[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: AspectListDialogComponentData = {\n            title: 'ADF-ASPECT-LIST.DIALOG.TITLE',\n            description: 'ADF-ASPECT-LIST.DIALOG.DESCRIPTION',\n            overTableMessage: 'ADF-ASPECT-LIST.DIALOG.OVER-TABLE-MESSAGE',\n            select,\n            nodeId\n        };\n\n        this.openDialog(data, 'adf-aspect-list-dialog', '750px');\n        return select;\n    }\n\n    private openDialog(data: AspectListDialogComponentData, panelClass: string, width: string) {\n        this.dialog.open(AspectListDialogComponent, {\n            data,\n            panelClass,\n            width,\n            disableClose: true\n        });\n    }\n\n    close() {\n        this.dialog.closeAll();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService, CardViewUpdateService, NodesApiService } from '@alfresco/adf-core';\nimport { AspectListService } from './aspect-list.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeAspectService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private nodesApiService: NodesApiService,\n                private aspectListService: AspectListService,\n                private cardViewUpdateService: CardViewUpdateService) {\n    }\n\n    updateNodeAspects(nodeId: string) {\n        this.aspectListService.openAspectListDialog(nodeId).subscribe((aspectList) => {\n            this.nodesApiService.updateNode(nodeId, { aspectNames: [...aspectList] }).subscribe((updatedNode) => {\n                this.alfrescoApiService.nodeUpdated.next(updatedNode);\n                this.cardViewUpdateService.updateNodeAspect(updatedNode);\n            });\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ContentService, AllowableOperationsEnum, VersionCompatibilityService } from '@alfresco/adf-core';\nimport { NodeAspectService } from '../../../aspect-list/node-aspect.service';\n@Component({\n    selector: 'adf-content-metadata-card',\n    templateUrl: './content-metadata-card.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-metadata-card' }\n})\nexport class ContentMetadataCardComponent implements OnChanges {\n\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: Node;\n\n    /** (optional) This flag displays/hides empty metadata\n     * fields.\n     */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** (optional) This flag displays desired aspect when open for the first time\n     * fields.\n     */\n    @Input()\n    displayAspect: string = null;\n\n    /** (required) Name of the metadata preset, which defines aspects\n     * and their properties.\n     */\n    @Input()\n    preset: string;\n\n    /** (optional) This flag sets the metadata in read only mode\n     * preventing changes.\n     */\n    @Input()\n    readOnly = false;\n\n    /** (optional) This flag allows the component to display more\n     * than one accordion at a time.\n     */\n    @Input()\n    multi = false;\n\n    private _displayDefaultProperties: boolean = true;\n\n    /** (optional) This flag displays/hides the metadata\n     * properties.\n     */\n    @Input()\n    set displayDefaultProperties(value: boolean) {\n        this._displayDefaultProperties = value;\n        this.onDisplayDefaultPropertiesChange();\n    }\n\n    get displayDefaultProperties(): boolean {\n        return this._displayDefaultProperties;\n    }\n\n    editable: boolean = false;\n\n    expanded: boolean;\n\n    editAspectSupported = false;\n\n    constructor(private contentService: ContentService, private nodeAspectService: NodeAspectService, private versionCompatibilityService: VersionCompatibilityService) {\n        this.editAspectSupported = this.versionCompatibilityService.isVersionSupported('7');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.displayAspect && changes.displayAspect.currentValue) {\n            this.expanded = true;\n        }\n    }\n\n    onDisplayDefaultPropertiesChange(): void {\n        this.expanded = !this._displayDefaultProperties;\n    }\n\n    toggleEdit(): void {\n        this.editable = !this.editable;\n    }\n\n    toggleExpanded(): void {\n        this.expanded = !this.expanded;\n    }\n\n    hasAllowableOperations() {\n        return this.contentService.hasAllowableOperations(this.node, AllowableOperationsEnum.UPDATE);\n    }\n\n    openAspectDialog() {\n        this.nodeAspectService.updateNodeAspects(this.node.id);\n    }\n\n    isEditAspectSupported(): boolean {\n        return !this.readOnly && this.hasAllowableOperations() && this.editAspectSupported;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentMetadataComponent } from './components/content-metadata/content-metadata.component';\nimport { ContentMetadataCardComponent } from './components/content-metadata-card/content-metadata-card.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule\n    ],\n    exports: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ],\n    declarations: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ]\n})\nexport class ContentMetadataModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionElement } from '@alfresco/js-api';\n\nexport class PermissionDisplayModel implements PermissionElement {\n\n    authorityId?: string;\n    name?: string;\n    accessStatus?: PermissionElement.AccessStatusEnum;\n    isInherited: boolean = false;\n    icon: string;\n    readonly?: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.authorityId = obj.authorityId;\n            this.name = obj.name;\n            this.accessStatus = obj.accessStatus;\n            this.isInherited = obj.isInherited !== null && obj.isInherited !== undefined ? obj.isInherited : false;\n            this.icon = obj.icon ? obj.icon : 'vpn_key';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, NodesApiService, SearchService, TranslationService, EcmUserModel } from '@alfresco/adf-core';\nimport { Group, GroupMemberEntry, GroupMemberPaging, Node, PathElement, PermissionElement, QueryBody } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { PermissionDisplayModel } from '../models/permission.model';\nimport { RoleModel } from '../models/role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodePermissionService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchApiService: SearchService,\n                private nodeService: NodesApiService,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Gets a list of roles for the current node.\n     * @param node The target node\n     * @returns Array of strings representing the roles\n     */\n    getNodeRoles(node: Node): Observable<string[]> {\n        const retrieveSiteQueryBody: QueryBody = this.buildRetrieveSiteQueryBody(node.path.elements);\n        return this.searchApiService.searchByQueryBody(retrieveSiteQueryBody)\n            .pipe(\n                switchMap((siteNodeList: any) => {\n                    if ( siteNodeList.list.entries.length > 0 ) {\n                        const siteName = siteNodeList.list.entries[0].entry.name;\n                        return this.getGroupMembersBySiteName(siteName);\n                    } else {\n                        return of(node.permissions?.settable);\n                    }\n                })\n            );\n    }\n\n    getNodePermissions(node: Node): PermissionDisplayModel[] {\n        const result: PermissionDisplayModel[] = [];\n\n        if (node?.permissions?.locallySet) {\n            node.permissions.locallySet.map((permissionElement) => {\n                result.push(new PermissionDisplayModel(permissionElement));\n            });\n        }\n\n        if (node?.permissions?.inherited) {\n            node.permissions.inherited.map((permissionElement) => {\n                const permissionInherited = new PermissionDisplayModel(permissionElement);\n                permissionInherited.isInherited = true;\n                result.push(permissionInherited);\n            });\n        }\n        return result;\n    }\n\n    /**\n     * Updates the permission role for a node.\n     * @param node Target node\n     * @param updatedPermissionRole Permission role to update or add\n     * @returns Node with updated permission\n     */\n    updatePermissionRole(node: Node, updatedPermissionRole: PermissionElement): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: []} };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(updatedPermissionRole.authorityId);\n        permissionBody.permissions.locallySet = permissionBody.permissions.locallySet.concat(node.permissions.locallySet);\n        if (index !== -1) {\n            permissionBody.permissions.locallySet[index] = updatedPermissionRole;\n        } else {\n            permissionBody.permissions.locallySet.push(updatedPermissionRole);\n        }\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    /**\n     * Update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param permissionList New permission settings\n     * @returns Node with updated permissions\n     */\n    updateNodePermissions(nodeId: string, permissionList: PermissionElement[]): Observable<Node> {\n       return this.nodeService.getNode(nodeId).pipe(\n            switchMap((node) => this.updateLocallySetPermissions(node, permissionList))\n        );\n    }\n\n    /**\n     * Updates the locally set permissions for a node.\n     * @param node ID of the target node\n     * @param permissions Permission settings\n     * @returns Node with updated permissions\n     */\n    updateLocallySetPermissions(node: Node, permissions: PermissionElement[]): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: []} };\n        const permissionList = permissions;\n        const duplicatedPermissions = this.getDuplicatedPermissions(node.permissions.locallySet, permissionList);\n        if (duplicatedPermissions.length > 0) {\n            const list = duplicatedPermissions.map((permission) => 'authority -> ' + permission.authorityId + ' / role -> ' + permission.name).join(', ');\n            const duplicatePermissionMessage: string = this.translation.instant('PERMISSION_MANAGER.ERROR.DUPLICATE-PERMISSION',  {list});\n            return throwError(duplicatePermissionMessage);\n        }\n        permissionBody.permissions.locallySet = node.permissions.locallySet ? node.permissions.locallySet.concat(permissionList) : permissionList;\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    private getDuplicatedPermissions(nodeLocallySet: PermissionElement[], permissionListAdded: PermissionElement[]): PermissionElement[] {\n        const duplicatePermissions: PermissionElement[] = [];\n        if (nodeLocallySet) {\n            permissionListAdded.forEach((permission: PermissionElement) => {\n                const duplicate = nodeLocallySet.find((localPermission) => this.isEqualPermission(localPermission, permission));\n                if (duplicate) {\n                    duplicatePermissions.push(duplicate);\n                }\n            });\n        }\n        return duplicatePermissions;\n    }\n\n    private isEqualPermission(oldPermission: PermissionElement, newPermission: PermissionElement): boolean {\n        return oldPermission.accessStatus === newPermission.accessStatus &&\n               oldPermission.authorityId === newPermission.authorityId &&\n               oldPermission.name === newPermission.name;\n    }\n\n    /**\n     * Removes a permission setting from a node.\n     * @param node ID of the target node\n     * @param permissionToRemove Permission setting to remove\n     * @returns Node with modified permissions\n     */\n    removePermission(node: Node, permissionToRemove: PermissionElement): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: [] } };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(permissionToRemove.authorityId);\n\n        if (index !== -1) {\n            node.permissions.locallySet.splice(index, 1);\n            permissionBody.permissions.locallySet = node.permissions.locallySet;\n            return this.nodeService.updateNode(node.id, permissionBody);\n        } else {\n            return of(node);\n        }\n    }\n\n    private getGroupMembersBySiteName(siteName: string): Observable<string[]> {\n        const groupName = 'GROUP_site_' + siteName;\n        return this.getGroupMemberByGroupName(groupName)\n            .pipe(\n                map((groupMemberPaging: GroupMemberPaging) => {\n                    const displayResult: string[] = [];\n                    groupMemberPaging.list.entries.forEach((member: GroupMemberEntry) => {\n                        displayResult.push(this.formattedRoleName(member.entry.displayName, 'site_' + siteName));\n                    });\n                    return displayResult;\n                })\n            );\n    }\n\n    /**\n     * Gets all members related to a group name.\n     * @param groupName Name of group to look for members\n     * @param opts Extra options supported by JS-API\n     * @returns List of members\n     */\n    getGroupMemberByGroupName(groupName: string, opts?: any): Observable<GroupMemberPaging> {\n        return from(this.apiService.groupsApi.listGroupMemberships(groupName, opts));\n    }\n\n    private formattedRoleName(displayName, siteName): string {\n        return displayName.replace(siteName + '_', '');\n    }\n\n    private buildRetrieveSiteQueryBody(nodePath: PathElement[]): QueryBody {\n        const pathNames = nodePath.map((node: PathElement) => 'name: \"' + node.name + '\"');\n        const builtPathNames = pathNames.join(' OR ');\n\n        return {\n            'query': {\n                'query': builtPathNames\n            },\n            'paging': {\n                'maxItems': 100,\n                'skipCount': 0\n            },\n            'include': ['aspectNames', 'properties'],\n            'filterQueries': [\n                {\n                    'query':\n                        \"TYPE:'st:site'\"\n                }\n            ]\n        };\n    }\n\n    getLocalPermissions(node: Node): PermissionDisplayModel[] {\n        const result: PermissionDisplayModel[] = [];\n\n        if (node?.permissions?.locallySet) {\n            node.permissions.locallySet.forEach((permissionElement) => {\n                result.push(new PermissionDisplayModel(permissionElement));\n            });\n        }\n\n        return result;\n    }\n\n    getInheritedPermission(node: Node): PermissionDisplayModel[] {\n        const result: PermissionDisplayModel[] = [];\n\n        if (node?.permissions?.inherited) {\n            node.permissions.inherited.forEach((permissionElement) => {\n                const permissionInherited = new PermissionDisplayModel(permissionElement);\n                permissionInherited.isInherited = true;\n                result.push(permissionInherited);\n            });\n        }\n        return result;\n    }\n\n    /**\n     * Removes permissions setting from a node.\n     * @param node target node with permission\n     * @param permissions Permissions to remove\n     * @returns Node with modified permissions\n     */\n    removePermissions(node: Node, permissions: PermissionElement[]): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: [] } };\n\n        permissions.forEach((permission) => {\n                const index = node.permissions.locallySet.findIndex((locallySet) =>  locallySet.authorityId === permission.authorityId);\n                if (index !== -1) {\n                    node.permissions.locallySet.splice(index, 1);\n                }\n        });\n        permissionBody.permissions.locallySet = node.permissions.locallySet;\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    /**\n     * updates permissions setting from a node.\n     * @param node target node with permission\n     * @param permissions Permissions to update\n     * @returns Node with modified permissions\n     */\n    updatePermissions(node: Node, permissions: PermissionElement[]): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: [] } };\n        permissionBody.permissions.locallySet = permissions;\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    /**\n     * Gets all node detail for nodeId along with settable permissions.\n     * @param nodeId Id of the node\n     * @returns node and it's associated roles { node: Node; roles: RoleModel[] }\n     */\n     getNodeWithRoles(nodeId: string): Observable<{ node: Node; roles: RoleModel[] }> {\n         return this.nodeService.getNode(nodeId).pipe(\n            switchMap(node => {\n                return forkJoin({\n                     node: of(node),\n                     roles: this.getNodeRoles(node)\n                          .pipe(\n                              catchError(() => of(node.permissions?.settable)),\n                              map(_roles => _roles.map(role => ({ role, label: role }))\n                          )\n                       )\n                    });\n                })\n            );\n     }\n\n     transformNodeToUserPerson(node: Node): { person: EcmUserModel, group: Group } {\n         let person = null, group = null;\n         if (node.nodeType === 'cm:person') {\n             const firstName = node.properties['cm:firstName'];\n             const lastName =  node.properties['cm:lastName'];\n             const email =  node.properties['cm:email'];\n             const id =  node.properties['cm:userName'];\n             person = new EcmUserModel({ id, firstName, lastName, email});\n         }\n\n         if (node.nodeType === 'cm:authorityContainer') {\n             const displayName = node.properties['cm:authorityDisplayName'] || node.properties['cm:authorityName'];\n             const id = node.properties['cm:authorityName'];\n             group = new Group({ displayName, id });\n         }\n         return  { person, group };\n     }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Group, Node, NodeEntry, PermissionElement } from '@alfresco/js-api';\nimport { PermissionDisplayModel } from './permission.model';\nimport { RoleModel } from './role.model';\nimport { EcmUserModel } from '@alfresco/adf-core';\n\nexport interface NodePermissionsModel {\n    node: Node;\n    roles: RoleModel[];\n    inheritedPermissions: PermissionDisplayModel[];\n    localPermissions: PermissionDisplayModel[];\n}\n\nexport class MemberModel {\n    id: string;\n    role: string;\n    accessStatus: PermissionElement.AccessStatusEnum | string;\n    entry: {\n        person?: EcmUserModel;\n        group?: Group;\n    };\n    readonly: boolean = false;\n\n    constructor(input?) {\n        if (input) {\n            Object.assign(this, input);\n        }\n    }\n\n    static parseFromSearchResult({ entry }: NodeEntry): MemberModel {\n        const result = new MemberModel();\n\n        if (entry.nodeType === 'cm:person') {\n            const person = new EcmUserModel({\n                firstName: entry.properties['cm:firstName'],\n                lastName: entry.properties['cm:lastName'],\n                email: entry.properties['cm:email'],\n                id: entry.properties['cm:userName']\n            });\n\n            result.id = person.id;\n            result.entry = { person };\n            result.accessStatus = 'ALLOWED';\n\n            return result;\n        }\n\n        if (entry.nodeType === 'cm:authorityContainer') {\n            const group = new Group({\n                id: entry.properties['cm:authorityName'],\n                displayName: entry.properties['cm:authorityDisplayName'] || entry.properties['cm:authorityName']\n            });\n\n            result.id = group.id;\n            result.entry = { group };\n            result.accessStatus = 'ALLOWED';\n\n            return result;\n        }\n        return null;\n    }\n\n    toPermissionElement(): PermissionElement {\n        return {\n            authorityId: this.id,\n            name: this.role,\n            accessStatus: this.accessStatus\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NodeEntry, PermissionElement } from '@alfresco/js-api';\nimport { AddPermissionDialogData } from './add-permission-dialog-data.interface';\nimport { MemberModel } from '../../models/member.model';\n\n@Component({\n    selector: 'adf-add-permission-dialog',\n    templateUrl: './add-permission-dialog.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionDialogComponent {\n    isSearchActive = true;\n    selectedMembers: MemberModel[] = [];\n\n    private existingMembers: PermissionElement[] = [];\n    currentSelection: NodeEntry[] = [];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: AddPermissionDialogData,\n                private dialogRef: MatDialogRef<AddPermissionDialogComponent>) {\n        this.existingMembers = this.data.node.permissions.locallySet || [];\n    }\n\n    onSelect(items: NodeEntry[]) {\n        this.currentSelection = items;\n    }\n\n    onAddClicked() {\n        const selection = this.selectedMembers.filter(member => !member.readonly).map(member => member.toPermissionElement());\n        this.data.confirm.next(selection);\n        this.data.confirm.complete();\n    }\n\n    onSearchAddClicked() {\n        const newMembers = this.currentSelection.map(item => MemberModel.parseFromSearchResult(item))\n            .filter(({id}) => !this.selectedMembers.find((member) => member.id === id));\n        this.selectedMembers = this.selectedMembers.concat(newMembers);\n\n        this.selectedMembers.forEach((member) => {\n            const existingMember = this.existingMembers.find(({authorityId}) => authorityId === member.id);\n            if (!!existingMember) {\n                member.role = existingMember.name;\n                member.accessStatus = existingMember.accessStatus;\n                member.readonly = true; // make role non editable\n            }\n        });\n        this.disableSearch();\n    }\n\n    canCloseDialog() {\n        if (!!this.selectedMembers.length) {\n            this.disableSearch();\n        } else {\n            this.dialogRef.close();\n        }\n    }\n\n    enableSearch() {\n        this.isSearchActive = true;\n    }\n\n    disableSearch() {\n        this.isSearchActive = false;\n    }\n\n    onBulkUpdate(role: string) {\n        this.selectedMembers.filter(member => !member.readonly)\n            .forEach(member => (member.role = role));\n    }\n\n    onMemberDelete({ id }: MemberModel) {\n        const index = this.selectedMembers.findIndex((member) => member.id === id);\n        this.selectedMembers.splice(index, 1);\n        if (this.selectedMembers.length === 0) {\n            this.enableSearch();\n            this.currentSelection = [];\n        }\n    }\n\n    onMemberUpdate(role: string, member: MemberModel) {\n        const _member = this.selectedMembers.find(({ id }) => id === member.id);\n        _member.role = role;\n    }\n\n    isValid(): boolean {\n        return this.selectedMembers.filter(({readonly}) => !readonly).length && this.selectedMembers.every(({role}) => !!role);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum, ContentService } from '@alfresco/adf-core';\nimport { Node, PermissionElement } from '@alfresco/js-api';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { NodePermissionService } from './node-permission.service';\nimport { AddPermissionDialogComponent } from '../components/add-permission/add-permission-dialog.component';\nimport { AddPermissionDialogData } from '../components/add-permission/add-permission-dialog-data.interface';\nimport { RoleModel } from '../models/role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodePermissionDialogService {\n\n    constructor(private dialog: MatDialog,\n                private nodePermissionService: NodePermissionService,\n                private contentService: ContentService) {\n    }\n\n    /**\n     * Opens a dialog to add permissions to a node.\n     * @param node target node\n     * @param roles settable roles for the node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    openAddPermissionDialog(node: Node, roles: RoleModel[], title?: string): Observable<PermissionElement[]> {\n        if (this.contentService.hasAllowableOperations(node, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n            const confirm = new Subject<PermissionElement[]>();\n\n            confirm.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const data: AddPermissionDialogData = {\n                node: node,\n                title: title,\n                confirm: confirm,\n                roles\n            };\n\n            this.openDialog(data, 'adf-add-permission-dialog', '800px');\n            return confirm;\n        } else {\n            const errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            errors.message = 'PERMISSION_MANAGER.ERROR.NOT-ALLOWED';\n            return throwError(errors);\n        }\n    }\n\n    private openDialog(data: any, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AddPermissionDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth, restoreFocus: true });\n    }\n\n    /**\n     * Closes the currently-open dialog.\n     */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    /**\n     * Opens a dialog to update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    updateNodePermissionByDialog(nodeId?: string, title?: string): Observable<Node> {\n        return this.nodePermissionService.getNodeWithRoles(nodeId)\n            .pipe(\n                switchMap(({node, roles}) => {\n                    return this.openAddPermissionDialog(node, roles, title)\n                        .pipe(\n                            switchMap((selection) => {\n                                return this.nodePermissionService.updateNodePermissions(nodeId, selection);\n                            })\n                        );\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum, ContentService, NodesApiService, NotificationService } from '@alfresco/adf-core';\nimport { Node, PermissionElement } from '@alfresco/js-api';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { BehaviorSubject, forkJoin, Observable, of, Subject } from 'rxjs';\nimport { finalize, map, switchMap } from 'rxjs/operators';\nimport { RoleModel } from '../../models/role.model';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { NodePermissionsModel } from '../../models/member.model';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { NodePermissionDialogService } from '../../services/node-permission-dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionListService {\n    updated = new EventEmitter<PermissionDisplayModel>();\n    errored = new EventEmitter<PermissionDisplayModel>();\n\n    loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    error$: Subject<boolean> = new Subject();\n    nodeWithRoles$: Subject<{ node: Node, roles: RoleModel[] }> = new Subject();\n    data$: Observable<NodePermissionsModel> = this.nodeWithRoles$.pipe(\n        map(({ node, roles}) => {\n            const nodeLocalPermissions = this.nodePermissionService.getLocalPermissions(node);\n            const localPermissions = this.updateReadOnlyPermission(node, nodeLocalPermissions);\n            return {\n                node,\n                roles,\n                localPermissions,\n                inheritedPermissions: this.nodePermissionService.getInheritedPermission(node)\n            };\n        })\n    );\n\n    private node: Node;\n    private roles: RoleModel[];\n    private SITE_MANAGER_ROLE = 'SiteManager';\n\n    constructor(\n        private nodeService: NodesApiService,\n        private nodePermissionService: NodePermissionService,\n        private nodePermissionDialogService: NodePermissionDialogService,\n        private contentService: ContentService,\n        private notificationService: NotificationService\n    ) {}\n\n    fetchPermission(nodeId: string) {\n        this.loading$.next(true);\n        this.nodePermissionService.getNodeWithRoles(nodeId)\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(\n                ({ node, roles }) => {\n                    this.node = node;\n                    this.roles = roles;\n                    this.nodeWithRoles$.next({ node, roles });\n                },\n                () => this.error$.next(true)\n            );\n    }\n\n    toggleInherited(change: MatSlideToggleChange) {\n        if (this.contentService.hasAllowableOperations(this.node, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n            let updateLocalPermission$ = of(null);\n            const nodeBody = {\n                permissions: {\n                    isInheritanceEnabled: !this.node.permissions.isInheritanceEnabled\n                }\n            };\n\n            const authorityId = this.getManagerAuthority(this.node);\n            if (authorityId) {\n                const permissions = [\n                    ...(this.node.permissions.locallySet || []),\n                    { authorityId, name: this.SITE_MANAGER_ROLE, accessStatus: 'ALLOWED' }\n                ];\n                updateLocalPermission$ = this.nodePermissionService.updatePermissions(this.node, permissions);\n            }\n\n            updateLocalPermission$.pipe(switchMap(() => this.nodeService.updateNode(this.node.id, nodeBody, {include: ['permissions']})))\n                .subscribe(\n                    (nodeUpdated: Node) => {\n                        const message = nodeUpdated.permissions.isInheritanceEnabled ? 'PERMISSION_MANAGER.MESSAGE.INHERIT-ENABLE-SUCCESS' : 'PERMISSION_MANAGER.MESSAGE.INHERIT-DISABLE-SUCCESS';\n                        this.notificationService.showInfo(message);\n                        nodeUpdated.permissions.inherited = nodeUpdated.permissions?.inherited ?? [];\n                        this.reloadNode(nodeUpdated);\n                    },\n                    () => {\n                        change.source.checked = this.node.permissions.isInheritanceEnabled;\n                        this.notificationService.showWarning('PERMISSION_MANAGER.MESSAGE.TOGGLE-PERMISSION-FAILED');\n                    }\n                );\n        } else {\n            change.source.checked = this.node.permissions.isInheritanceEnabled;\n            this.notificationService.showError('PERMISSION_MANAGER.ERROR.NOT-ALLOWED');\n        }\n    }\n\n    updateNodePermissionByDialog() {\n        this.nodePermissionDialogService\n            .openAddPermissionDialog(this.node, this.roles, 'PERMISSION_MANAGER.ADD-PERMISSION.TITLE')\n            .pipe(\n                switchMap(selection => {\n                    const total = selection.length;\n                    const group = selection.filter(({authorityId}) => this.isGroup(authorityId)).length;\n                    return forkJoin({\n                        user: of(total - group),\n                        group: of(group),\n                        node: this.nodePermissionService.updateNodePermissions(this.node.id, selection)\n                    });\n                })\n            )\n            .subscribe(({ user,  group, node}) => {\n                    this.notificationService.showInfo( 'PERMISSION_MANAGER.MESSAGE.PERMISSION-ADD-SUCCESS', null, { user, group });\n                    this.reloadNode(node);\n                },\n                () => {\n                    this.notificationService.showError( 'PERMISSION_MANAGER.MESSAGE.PERMISSION-ADD-FAIL');\n                    this.reloadNode();\n                }\n            );\n    }\n\n    deletePermissions(permissions: PermissionElement[]) {\n        this.nodePermissionService.removePermissions(this.node, permissions)\n            .subscribe((node) => {\n                    const total = permissions.length;\n                    const group = permissions.filter(({authorityId}) => this.isGroup(authorityId)).length;\n                    this.notificationService.showInfo('PERMISSION_MANAGER.MESSAGE.PERMISSION-BULK-DELETE-SUCCESS', null, {user: total - group, group});\n                    this.reloadNode(node);\n                },\n                () => {\n                    this.notificationService.showError('PERMISSION_MANAGER.MESSAGE.PERMISSION-DELETE-FAIL');\n                    this.reloadNode();\n                }\n            );\n    }\n\n    updateRole(role: string, permission: PermissionDisplayModel) {\n        const updatedPermissionRole = this.buildUpdatedPermission(role, permission);\n        this.nodePermissionService.updatePermissionRole(this.node, updatedPermissionRole)\n            .subscribe((node) => {\n                this.notificationService.showInfo('PERMISSION_MANAGER.MESSAGE.PERMISSION-UPDATE-SUCCESS');\n                this.reloadNode(node);\n                this.updated.emit(permission);\n                },\n                () => {\n                    this.notificationService.showError('PERMISSION_MANAGER.MESSAGE.PERMISSION-UPDATE-FAIL');\n                    this.reloadNode();\n                    this.errored.emit(permission);\n                }\n            );\n    }\n\n    bulkRoleUpdate(role: string) {\n        const permissions = [...this.node.permissions.locallySet].map((permission) => this.buildUpdatedPermission(role, permission));\n        this.nodePermissionService.updatePermissions(this.node, permissions)\n            .subscribe((node) => {\n                    const total = permissions.length;\n                    const group = permissions.filter(({authorityId}) => this.isGroup(authorityId)).length;\n                    this.notificationService.showInfo('PERMISSION_MANAGER.MESSAGE.PERMISSION-BULK-UPDATE-SUCCESS', null, {user: total - group, group});\n                    this.reloadNode(node);\n                },\n                () => {\n                    this.notificationService.showError('PERMISSION_MANAGER.MESSAGE.PERMISSION-UPDATE-FAIL');\n                    this.reloadNode();\n                }\n            );\n    }\n\n    deletePermission(permission: PermissionDisplayModel) {\n        const cloneNode = { ...this.node, permissions: { ...this.node.permissions, locallySet: [ ...this.node.permissions.locallySet ] } };\n        this.nodePermissionService\n            .removePermission(cloneNode, permission)\n            .subscribe((node) => {\n                    this.notificationService.showInfo('PERMISSION_MANAGER.MESSAGE.PERMISSION-DELETE-SUCCESS');\n                    if (!node.permissions.locallySet) {\n                       node.permissions.locallySet = [];\n                    }\n                    this.reloadNode(node);\n                },\n                () => {\n                    this.notificationService.showError('PERMISSION_MANAGER.MESSAGE.PERMISSION-DELETE-FAIL');\n                    this.reloadNode();\n                }\n            );\n    }\n\n    private buildUpdatedPermission(role: string, permission: PermissionElement): PermissionElement {\n        return {\n            accessStatus: permission.accessStatus,\n            name: this.canUpdateThePermission(this.node, permission) ? role :  permission.name,\n            authorityId: permission.authorityId\n        };\n    }\n\n    private reloadNode(node?: Node) {\n        if (node != null) {\n            Object.assign(this.node.permissions, node.permissions);\n        }\n        this.nodeWithRoles$.next({ node: this.node, roles: this.roles });\n    }\n\n    getManagerAuthority(node: Node): string {\n        const sitePath = node.path.elements.find((path) => path.nodeType === 'st:site');\n        let hasLocalManagerPermission = false, authorityId: string;\n        if (sitePath) {\n            authorityId = `GROUP_site_${sitePath.name}_${this.SITE_MANAGER_ROLE}`;\n            hasLocalManagerPermission = !!node.permissions.locallySet?.find((permission) => permission.authorityId === authorityId && permission.name === this.SITE_MANAGER_ROLE);\n        }\n\n        if (!hasLocalManagerPermission && authorityId) {\n            return authorityId;\n        }\n        return null;\n    }\n\n    updateReadOnlyPermission(node: Node, permissions: PermissionDisplayModel[]): PermissionDisplayModel[] {\n        permissions.forEach((permission) => {\n            if (!this.canUpdateThePermission(node, permission)) {\n                permission.readonly = true;\n            }\n        });\n        return permissions;\n    }\n\n    canUpdateThePermission(node: Node, permission: PermissionElement): boolean {\n        const sitePath = node.path.elements.find((path) => path.nodeType === 'st:site');\n        if (!node.permissions.isInheritanceEnabled && sitePath) {\n           const authorityId = `GROUP_site_${sitePath.name}_${this.SITE_MANAGER_ROLE}`;\n           return !(permission.authorityId === authorityId && permission.name === this.SITE_MANAGER_ROLE);\n        }\n        return true;\n    }\n\n    private isGroup(authorityId) {\n        return authorityId.startsWith('GROUP_') || authorityId.startsWith('ROLE_');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectDataRow } from '@alfresco/adf-core';\nimport { PermissionElement } from '@alfresco/js-api';\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { PermissionListService } from './permission-list.service';\n\n@Component({\n    selector: 'adf-permission-list',\n    templateUrl: './permission-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PermissionListComponent {\n    /** ID of the node whose permissions you want to show. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the permission is updated. */\n    @Output()\n    update: EventEmitter<PermissionElement>;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any>;\n\n    selectedPermissions: PermissionDisplayModel[] = [];\n\n    constructor(public readonly permissionList: PermissionListService) {\n        this.error = this.permissionList.errored;\n        this.update = this.permissionList.updated;\n    }\n\n    ngOnInit(): void {\n        this.permissionList.fetchPermission(this.nodeId);\n    }\n\n    openAddPermissionDialog() {\n        this.permissionList.updateNodePermissionByDialog();\n    }\n\n    onSelect(selections: ObjectDataRow[]) {\n        this.selectedPermissions = selections.map((selection) => selection['obj']).filter((permission) => !permission.readonly);\n    }\n\n    deleteSelection() {\n        this.permissionList.deletePermissions(this.selectedPermissions);\n        this.selectedPermissions = [];\n    }\n\n    updatePermission({role, permission}) {\n        this.permissionList.updateRole(role, permission);\n    }\n\n    deletePermission(permission: PermissionDisplayModel) {\n        this.selectedPermissions = [];\n        this.permissionList.deletePermission(permission);\n    }\n\n    updateAllPermission(role: string) {\n        this.permissionList.bulkRoleUpdate(role);\n        this.selectedPermissions = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { NodesApiService, ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\n\n@Directive({\n    selector: 'button[adf-inherit-permission], mat-button-toggle[adf-inherit-permission]',\n    host: {\n        'role': 'button',\n        '(click)': 'onInheritPermissionClicked()'\n    }\n})\nexport class InheritPermissionDirective {\n\n    /** ID of the node to add/remove inherited permissions. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated. */\n    @Output()\n    updated: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private nodeService: NodesApiService,\n                private contentService: ContentService) {\n    }\n\n    onInheritPermissionClicked() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: Node) => {\n            if (this.contentService.hasAllowableOperations(node, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n                const nodeBody = { permissions: { isInheritanceEnabled: !node?.permissions?.isInheritanceEnabled ?? false} };\n                this.nodeService.updateNode(this.nodeId, nodeBody, { include: ['permissions'] }).subscribe((nodeUpdated: Node) => {\n                    this.updated.emit(nodeUpdated);\n                }, (error) => this.error.emit(error));\n            } else {\n                this.error.emit('PERMISSION_MANAGER.ERROR.NOT-ALLOWED');\n            }\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '@alfresco/adf-core';\nimport { Injectable, Optional, Inject, InjectionToken } from '@angular/core';\n\nexport const SEARCH_QUERY_TOKEN = new InjectionToken<QueryProvider>('Alfresco Search Query Token');\nexport interface QueryProvider {\n    query: string;\n}\n\n@Injectable()\nexport class SearchPermissionConfigurationService implements SearchConfigurationInterface {\n\n    constructor(\n        @Optional()\n        @Inject(SEARCH_QUERY_TOKEN)\n        private queryProvider: QueryProvider) {\n    }\n\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: this.getQuery(searchTerm)\n            },\n            include: ['properties', 'aspectNames'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                /*tslint:disable-next-line */\n                { query: \"TYPE:'cm:authority'\" }]\n        };\n\n        return defaultQueryBody;\n    }\n\n    private getQuery(searchTerm: string) {\n        let query: string;\n        if (this.queryProvider && this.queryProvider.query) {\n            query = this.queryProvider.query.replace(\n                new RegExp(/\\${([^}]+)}/g), searchTerm);\n        } else {\n            query = `(email:*${searchTerm}* OR firstName:*${searchTerm}* OR lastName:*${searchTerm}* OR displayName:*${searchTerm}* OR authorityName:*${searchTerm}* OR authorityDisplayName:*${searchTerm}*) AND ANAME:(\\\"0/APP.DEFAULT\\\")`;\n        }\n        return query;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchConfigurationService, SearchService } from '@alfresco/adf-core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Component, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { SearchPermissionConfigurationService } from './search-config-permission.service';\nimport { SearchComponent } from '../../../search/components/search.component';\nimport { MatSelectionList } from '@angular/material/list';\n\n@Component({\n    selector: 'adf-add-permission-panel',\n    templateUrl: './add-permission-panel.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        { provide: SearchConfigurationService, useClass: SearchPermissionConfigurationService },\n        SearchService\n    ]\n})\nexport class AddPermissionPanelComponent {\n\n    @ViewChild('search', { static: true })\n    search: SearchComponent;\n\n    @ViewChild(MatSelectionList, { static: false })\n    matSelectionList: MatSelectionList;\n\n    /** Emitted when a permission list item is selected. */\n    @Output()\n    select: EventEmitter<NodeEntry[]> = new EventEmitter();\n\n    searchInput: FormControl = new FormControl();\n    searchedWord = '';\n    debounceSearch: number = 200;\n\n    selectedItems: NodeEntry[] = [];\n\n    EVERYONE: NodeEntry = new NodeEntry({ entry: { nodeType: 'cm:authorityContainer', properties: {'cm:authorityName': 'GROUP_EVERYONE'}}});\n\n    constructor() {\n        this.searchInput.valueChanges\n        .pipe(\n            debounceTime(this.debounceSearch)\n        )\n        .subscribe((searchValue) => {\n            const selectionOptions = this.matSelectionList.selectedOptions.selected.map(option => option.value);\n            this.selectedItems.push(...selectionOptions);\n            this.matSelectionList.deselectAll();\n            this.searchedWord = searchValue;\n            if (!searchValue) {\n                this.search.resetResults();\n            }\n        });\n    }\n\n    onSelectionChange() {\n        const currentSelection = this.matSelectionList.selectedOptions.selected.map(option => option.value);\n        const uniqueSelection = [ ...currentSelection, ...this.selectedItems ]\n            .reduce((uniquesElements, currentElement) => {\n            const isExist = uniquesElements.find(uniqueElement => uniqueElement.entry.id === currentElement.entry.id);\n            if (!isExist) {\n                uniquesElements.push(currentElement);\n            }\n            return uniquesElements;\n            }, []);\n        this.select.emit(uniqueSelection);\n    }\n\n    clearSearch() {\n        this.searchedWord = '';\n        this.selectedItems.splice(0, this.selectedItems.length);\n        this.search.resetResults();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum, ContentService } from '@alfresco/adf-core';\nimport { Node, NodeEntry, PermissionElement } from '@alfresco/js-api';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { RoleModel } from '../../models/role.model';\n\n@Component({\n    selector: 'adf-add-permission',\n    templateUrl: './add-permission.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n/*\n * @deprecated in 4.4.0, use adf-add-permission-panel instead.\n */\nexport class AddPermissionComponent implements OnInit {\n\n    /** ID of the target node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter();\n\n    /** Emitted when an error occurs during the update. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    selectedItems: NodeEntry[] = [];\n    currentNode: Node;\n    currentNodeRoles: RoleModel[];\n\n    constructor(private nodePermissionService: NodePermissionService,\n                private contentService: ContentService) { }\n\n    ngOnInit(): void {\n        this.nodePermissionService.getNodeWithRoles(this.nodeId).subscribe(({node, roles }) => {\n            this.currentNode = node;\n            this.currentNodeRoles = roles;\n        });\n    }\n\n    onSelect(selection: NodeEntry[]) {\n        this.selectedItems = selection;\n    }\n\n    isAddEnabled(): boolean {\n        return this.contentService.hasAllowableOperations(this.currentNode, AllowableOperationsEnum.UPDATEPERMISSIONS) &&\n                this.selectedItems.length !== 0;\n    }\n\n    applySelection() {\n        if (this.contentService.hasAllowableOperations(this.currentNode, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n            const permissions = this.transformNodeToPermissionElement(this.selectedItems, this.currentNodeRoles[0].role);\n            this.nodePermissionService.updateNodePermissions(this.nodeId, permissions)\n                .subscribe((node) => {\n                        this.success.emit(node);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n                    });\n        }\n    }\n\n    private transformNodeToPermissionElement(nodes: NodeEntry[], role: string): PermissionElement[] {\n        return nodes.map((node) => {\n            return {\n                'authorityId': node.entry.properties['cm:authorityName'] ?? node.entry.properties['cm:userName'],\n                'name': role,\n                'accessStatus': 'ALLOWED'\n            };\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '@alfresco/adf-core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NodePermissionService } from '../../services/node-permission.service';\n\n@Component({\n    selector: 'adf-user-icon-column',\n    template: `\n        <div class=\"adf-cell-value\" [attr.id]=\"group ? 'group-icon' : 'person-icon'\"  *ngIf=\"!isSelected\">\n            <ng-container *ngIf=\"displayText$ | async as user\">\n                <mat-icon *ngIf=\"group\" class=\"adf-group-icon\">people_alt_outline</mat-icon>\n                <div *ngIf=\"!group\" [outerHTML]=\"user | usernameInitials: 'adf-people-initial'\"></div>\n            </ng-container>\n        </div>\n        <div class=\"adf-cell-value\" *ngIf=\"isSelected\">\n            <mat-icon class=\"adf-people-select-icon adf-datatable-selected\" svgIcon=\"selected\"></mat-icon>\n        </div>\n    `,\n    host: { class: 'adf-user-icon-column adf-datatable-content-cell' }\n})\nexport class UserIconColumnComponent implements OnInit {\n    @Input()\n    context: any;\n\n    @Input()\n    node: NodeEntry;\n\n    @Input()\n    selected: boolean = false;\n\n    displayText$ = new BehaviorSubject<User>(null);\n    group = false;\n\n    get isSelected(): boolean {\n        return this.context?.row?.isSelected || this.selected;\n    }\n\n    constructor(private nodePermissionService: NodePermissionService) {}\n\n    ngOnInit() {\n        if (this.context) {\n            const { person, group, authorityId } = this.context.row.obj?.entry ?? this.context.row.obj;\n            this.group = this.isGroup(group, authorityId);\n            this.displayText$.next(person || group || { displayName: authorityId });\n        }\n\n        if (this.node) {\n            const { person, group } = this.nodePermissionService.transformNodeToUserPerson(this.node.entry);\n            this.group = this.isGroup(group, null);\n            this.displayText$.next(person || group);\n        }\n    }\n\n    private isGroup(group, authorityId): boolean {\n        return !!group || authorityId?.startsWith('GROUP_') || authorityId?.startsWith('ROLE_');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Group, NodeEntry } from '@alfresco/js-api';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { EcmUserModel } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-user-name-column',\n    template: `\n        <div class=\"adf-ellipsis-cell\" [attr.data-automation-id]=\"displayText$ | async\">\n            <span class=\"adf-user-name-column\" title=\"{{ displayText$ | async }}\"> {{ displayText$ | async }}</span>\n            <br/>\n            <span class=\"adf-user-email-column\" title=\"{{ subTitleText$ | async }}\" *ngIf=\"subTitleText$ | async\">\n                {{ subTitleText$ | async }}\n            </span>\n        </div>\n    `,\n    host: { class: 'adf-user-name-column adf-datatable-content-cell adf-expand-cell-5 adf-ellipsis-cell' }\n})\nexport class UserNameColumnComponent implements OnInit {\n    @Input()\n    context: any;\n\n    @Input()\n    node: NodeEntry;\n\n    displayText$ = new BehaviorSubject<string>('');\n    subTitleText$ = new BehaviorSubject<string>('');\n\n    constructor(private nodePermissionService: NodePermissionService) {}\n\n    ngOnInit() {\n        if (this.context != null) {\n            const { person, group, authorityId } = this.context.row.obj?.entry ?? this.context.row.obj;\n            const permissionGroup = authorityId ? { displayName: authorityId } as  Group : null;\n            this.updatePerson(person);\n            this.updateGroup(group || permissionGroup);\n        }\n\n        if (this.node) {\n            const { person, group } = this.nodePermissionService.transformNodeToUserPerson(this.node.entry);\n            this.updatePerson(person);\n            this.updateGroup(group);\n        }\n    }\n\n    private updatePerson(person: EcmUserModel) {\n        if (person) {\n            this.displayText$.next(`${person.firstName ?? ''} ${person.lastName ?? ''}`);\n            this.subTitleText$.next(person.email ?? '');\n        }\n   }\n\n    private updateGroup(group: Group) {\n        if (group) {\n            this.displayText$.next(group.displayName);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { RoleModel } from '../../models/role.model';\n\n@Component({\n  selector: 'adf-user-role-column',\n  template: `\n      <mat-form-field floatLabel=\"never\" class=\"adf-role-selector-field\" *ngIf=\"!readonly\">\n          <mat-select\n              (click)=\"$event.stopPropagation()\"\n              [placeholder]=\"placeholder | translate\"\n              [value]=\"value\"\n              (selectionChange)=\"onRoleChanged($event.value)\">\n              <mat-option *ngFor=\"let role of roles\" [value]=\"role.role\">\n                  {{ role.label | adfLocalizedRole }}\n              </mat-option>\n          </mat-select>\n      </mat-form-field>\n\n      <span class=\"adf-datatable-cell-value adf-readonly-role\" [title]=\"value | adfLocalizedRole\" *ngIf=\"readonly\">\n          {{value | adfLocalizedRole}}\n      </span>\n  `,\n    host: { class: 'adf-user-role-column adf-datatable-content-cell adf-expand-cell-4' },\n    styles: [\n        `.adf-role-selector-field {\n            width: 100%;\n            .mat-form-field {\n                width: 100%;\n                max-width: 200px;\n            }\n        }\n        .adf-readonly-role {\n            padding-left: 0 !important;\n        }\n        `\n    ]\n})\nexport class UserRoleColumnComponent {\n\n    @Input()\n    roles: RoleModel[];\n\n    @Input()\n    value: string;\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    placeholder: string = 'PERMISSION_MANAGER.LABELS.SELECT-ROLE';\n\n    @Output()\n    roleChanged: EventEmitter<string> = new EventEmitter<string>();\n\n    onRoleChanged(newRole: string) {\n        this.value = newRole;\n        this.roleChanged.emit(newRole);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '@alfresco/js-api';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'adf-node-path-column',\n    template: `\n        <span class=\"adf-user-name-column adf-datatable-cell-value\"  title=\"{{ displayText$ | async }}\">\n            {{ displayText$ | async }}\n        </span>\n    `,\n    host: { class: 'adf-node-path-column adf-datatable-content-cell' }\n})\nexport class NodePathColumnComponent implements OnInit {\n    @Input()\n    node: Node;\n\n    displayText$ = new BehaviorSubject<string>('');\n\n    ngOnInit() {\n        this.updateValue();\n    }\n\n    protected updateValue() {\n        this.displayText$.next(this.node.path.name);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { RoleModel } from '../../models/role.model';\n\n@Component({\n  selector: 'adf-permission-container',\n  templateUrl: './permission-container.component.html',\n  styleUrls: ['./permission-container.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PermissionContainerComponent implements OnChanges {\n\n    @Input()\n    node: Node;\n\n    @Input()\n    permissions: PermissionDisplayModel[] = [];\n\n    @Input()\n    roles!: RoleModel[];\n\n    @Input()\n    isReadOnly = false;\n\n    @Input()\n    showLocation = false;\n\n    @Input()\n    selectionMode = 'multiple'; // none|single|multiple\n\n    /** Emitted when the permission is updated. */\n    @Output()\n    update = new EventEmitter<{role: string, permission: PermissionDisplayModel}>();\n\n    @Output()\n    updateAll = new EventEmitter<string>();\n\n    /** Emitted when the permission is updated. */\n    @Output()\n    delete = new EventEmitter<PermissionDisplayModel>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter<any>();\n\n    bulkSelectionRole: string;\n\n    ngOnChanges(): void {\n        this.bulkSelectionRole = '';\n    }\n\n    updateRole(role: string, permission: PermissionDisplayModel) {\n        this.update.emit({ role, permission });\n    }\n\n    bulkRoleUpdate(role: string) {\n        this.updateAll.emit(role);\n    }\n\n    removePermission(event: MouseEvent, permissionRow: PermissionDisplayModel) {\n        event.stopPropagation();\n        this.delete.emit(permissionRow);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterViewInit, Directive, ElementRef, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ConnectionPositionPair, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Directive({\n    selector: '[adf-pop-over]',\n    exportAs: 'adfPopOver'\n\n})\nexport class PopOverDirective implements OnInit, OnDestroy, AfterViewInit {\n    get open(): boolean {\n        return this._open;\n    }\n\n    @Input('adf-pop-over') popOver!: TemplateRef<object>;\n    @Input() target!: HTMLElement;\n    @Input() panelClass = 'adf-permission-pop-over';\n\n    private _open = false;\n    private destroy$ = new Subject();\n    private overlayRef!: OverlayRef;\n\n    constructor(\n        private element: ElementRef,\n        private overlay: Overlay,\n        private vcr: ViewContainerRef\n    ) { }\n\n    ngOnInit(): void {\n        this.createOverlay();\n    }\n\n    ngAfterViewInit(): void {\n        this.element.nativeElement.addEventListener('click', () => this.attachOverlay());\n    }\n\n    ngOnDestroy(): void {\n        this.detachOverlay();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private createOverlay(): void {\n        const scrollStrategy = this.overlay.scrollStrategies.reposition();\n        const positionStrategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.target)\n            .withPositions([\n                new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n                new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n            ])\n            .withPush(false);\n\n        this.overlayRef = this.overlay.create({\n            positionStrategy,\n            scrollStrategy,\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            panelClass: this.panelClass\n        });\n\n        this.overlayRef\n            .backdropClick()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this._open = false;\n                this.detachOverlay();\n            });\n    }\n\n    private attachOverlay(): void {\n        if (!this.overlayRef.hasAttached()) {\n            const periodSelectorPortal = new TemplatePortal(this.popOver, this.vcr);\n\n            this.overlayRef.attach(periodSelectorPortal);\n            this._open = true;\n        }\n    }\n\n    private detachOverlay(): void {\n        if (this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CoreModule, PipeModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { PermissionListComponent } from './components/permission-list/permission-list.component';\nimport { AddPermissionComponent } from './components/add-permission/add-permission.component';\nimport { AddPermissionDialogComponent } from './components/add-permission/add-permission-dialog.component';\nimport { InheritPermissionDirective } from './components/inherited-button.directive';\nimport { AddPermissionPanelComponent } from './components/add-permission/add-permission-panel.component';\nimport { SearchModule } from '../search/search.module';\nimport { UserNameColumnComponent } from './components/user-name-column/user-name-column.component';\nimport { UserIconColumnComponent } from './components/user-icon-column/user-icon-column.component';\nimport { UserRoleColumnComponent } from './components/user-role-column/user-role-column.component';\nimport { NodePathColumnComponent } from './components/node-path-column/node-path-column.component';\nimport { PopOverDirective } from './components/pop-over.directive';\nimport { PermissionContainerComponent } from './components/permission-container/permission-container.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        SearchModule,\n        PipeModule\n    ],\n    declarations: [\n        PermissionListComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent,\n        UserNameColumnComponent,\n        UserIconColumnComponent,\n        UserRoleColumnComponent,\n        PopOverDirective,\n        NodePathColumnComponent,\n        PermissionContainerComponent\n    ],\n    exports: [\n        PermissionListComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent,\n        UserNameColumnComponent,\n        UserIconColumnComponent,\n        UserRoleColumnComponent,\n        PopOverDirective,\n        NodePathColumnComponent\n    ]\n})\nexport class PermissionManagerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Inject,\n    OnInit,\n    ViewEncapsulation,\n    ViewChild,\n    OnDestroy\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport {\n    SharedLinksApiService,\n    NodesApiService,\n    ContentService,\n    RenditionsService,\n    AppConfigService\n} from '@alfresco/adf-core';\nimport { SharedLinkEntry, Node } from '@alfresco/js-api';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\nimport moment from 'moment-es6';\nimport { ContentNodeShareSettings } from './content-node-share.settings';\nimport { takeUntil, debounceTime } from 'rxjs/operators';\n\ntype DatePickerType = 'date' | 'time' | 'month' | 'datetime';\n\n@Component({\n    selector: 'adf-share-dialog',\n    templateUrl: './content-node-share.dialog.html',\n    host: { class: 'adf-share-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ShareDialogComponent implements OnInit, OnDestroy {\n\n    minDate = moment().add(1, 'd');\n    sharedId: string;\n    fileName: string;\n    baseShareUrl: string;\n    isFileShared: boolean = false;\n    isDisabled: boolean = false;\n    form: FormGroup = new FormGroup({\n        sharedUrl: new FormControl(''),\n        time: new FormControl({ value: '', disabled: true })\n    });\n    type: DatePickerType = 'datetime';\n    maxDebounceTime = 500;\n\n    @ViewChild('slideToggleExpirationDate', { static: true })\n    slideToggleExpirationDate;\n\n    @ViewChild('dateTimePickerInput', { static: true })\n    dateTimePickerInput;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private appConfigService: AppConfigService,\n        private sharedLinksApiService: SharedLinksApiService,\n        private dialogRef: MatDialogRef<ShareDialogComponent>,\n        private dialog: MatDialog,\n        private nodesApiService: NodesApiService,\n        private contentService: ContentService,\n        private renditionService: RenditionsService,\n        @Inject(MAT_DIALOG_DATA) public data: ContentNodeShareSettings\n    ) {}\n\n    ngOnInit() {\n        this.type = this.appConfigService.get<DatePickerType>('sharedLinkDateTimePickerType', 'datetime');\n\n        if (this.data.node && this.data.node.entry) {\n            this.fileName = this.data.node.entry.name;\n            this.baseShareUrl = this.data.baseShareUrl;\n\n            const properties = this.data.node.entry.properties;\n\n            if (!properties || !properties['qshare:sharedId']) {\n                this.createSharedLinks(this.data.node.entry.id);\n            } else {\n                this.sharedId = properties['qshare:sharedId'];\n                this.isFileShared = true;\n                this.updateForm();\n            }\n        }\n\n        this.time.valueChanges\n            .pipe(\n                debounceTime(this.maxDebounceTime),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe(value => this.onTimeChanged(value));\n    }\n\n    onTimeChanged(date: moment.Moment) {\n        this.updateNode(date).subscribe(\n            () => this.updateEntryExpiryDate(date)\n        );\n    }\n\n    get time(): AbstractControl {\n        return this.form.controls['time'];\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onSlideShareChange(event: MatSlideToggleChange) {\n        if (event.checked) {\n            this.createSharedLinks(this.data.node.entry.id);\n        } else {\n            this.openConfirmationDialog();\n        }\n    }\n\n    get canUpdate() {\n        const { entry } = this.data.node;\n\n        if (entry && entry.allowableOperations) {\n            return this.contentService.hasAllowableOperations(entry, 'update');\n        }\n\n        return true;\n    }\n\n    onToggleExpirationDate(slideToggle: MatSlideToggleChange) {\n        if (slideToggle.checked) {\n            this.time.enable();\n        } else {\n            this.time.disable();\n            this.time.setValue(null);\n        }\n    }\n\n    onDatetimepickerClosed() {\n        this.dateTimePickerInput.nativeElement.blur();\n\n        if (!this.time.value) {\n            this.slideToggleExpirationDate.checked = false;\n        }\n    }\n\n    private openConfirmationDialog() {\n        this.isFileShared = false;\n\n        this.dialog\n            .open(ConfirmDialogComponent, {\n                data: {\n                    title: 'SHARE.CONFIRMATION.DIALOG-TITLE',\n                    message: 'SHARE.CONFIRMATION.MESSAGE',\n                    yesLabel: 'SHARE.CONFIRMATION.REMOVE',\n                    noLabel: 'SHARE.CONFIRMATION.CANCEL'\n                },\n                minWidth: '250px',\n                closeOnNavigation: true\n            })\n            .beforeClosed()\n            .subscribe((deleteSharedLink) => {\n                if (deleteSharedLink) {\n                    this.deleteSharedLink(this.sharedId);\n                } else {\n                    this.isFileShared = true;\n                }\n            });\n    }\n\n    private createSharedLinks(nodeId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.createSharedLinks(nodeId).subscribe(\n            (sharedLink: SharedLinkEntry) => {\n                if (sharedLink.entry) {\n                    this.sharedId = sharedLink.entry.id;\n                    if (this.data.node.entry.properties) {\n                        this.data.node.entry.properties['qshare:sharedId'] = this.sharedId;\n                    } else {\n                        this.data.node.entry.properties = {\n                            'qshare:sharedId': this.sharedId\n                        };\n                    }\n                    this.isDisabled = false;\n                    this.isFileShared = true;\n                    this.renditionService\n                        .generateRenditionForNode(this.data.node.entry.id)\n                        .subscribe(() => {});\n\n                    this.updateForm();\n                }\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            }\n        );\n    }\n\n    deleteSharedLink(sharedId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService\n            .deleteSharedLink(sharedId)\n            .subscribe((response: any) => {\n                if (response instanceof Error) {\n                    this.isDisabled = false;\n                    this.isFileShared = true;\n                    this.handleError(response);\n                } else {\n                    if (this.data.node.entry.properties) {\n                        this.data.node.entry.properties['qshare:sharedId'] = null;\n                        this.data.node.entry.properties['qshare:expiryDate'] = null;\n                    }\n                    this.dialogRef.close(false);\n                }\n            }\n        );\n    }\n\n    private handleError(error: Error) {\n        let message = 'SHARE.UNSHARE_ERROR';\n        let statusCode = 0;\n\n        try {\n            statusCode = JSON.parse(error.message).error.statusCode;\n        } catch {}\n\n        if (statusCode === 403) {\n            message = 'SHARE.UNSHARE_PERMISSION_ERROR';\n        }\n\n        this.sharedLinksApiService.error.next({\n            statusCode,\n            message\n        });\n    }\n\n    private updateForm() {\n        const { entry } = this.data.node;\n        let expiryDate = null;\n\n        if (entry && entry.properties) {\n            expiryDate = entry.properties['qshare:expiryDate'];\n        }\n\n        this.form.setValue({\n            sharedUrl: `${this.baseShareUrl}${this.sharedId}`,\n            time: expiryDate ? moment(expiryDate).local() : null\n        });\n\n        if (expiryDate) {\n            this.time.enable();\n        } else {\n            this.time.disable();\n        }\n    }\n\n    private updateNode(date: moment.Moment): Observable<Node> {\n        const expiryDate = date\n            ? (this.type === 'date' ? date.endOf('day').utc().format() : date.utc().format())\n            : null;\n\n        return this.nodesApiService.updateNode(this.data.node.entry.id, {\n            properties: {\n                'qshare:expiryDate': expiryDate\n            }\n        });\n    }\n\n    private updateEntryExpiryDate(date: moment.Moment) {\n        const { properties } = this.data.node.entry;\n\n        if (properties) {\n            properties['qshare:expiryDate'] = date\n                ? date.local()\n                : null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, OnChanges, NgZone, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NodeEntry, Node } from '@alfresco/js-api';\n\nimport { ShareDialogComponent } from './content-node-share.dialog';\nimport { Observable, from, Subject } from 'rxjs';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n    selector: '[adf-share]',\n    exportAs: 'adfShare'\n})\nexport class NodeSharedDirective implements OnChanges, OnDestroy {\n\n    isFile: boolean = false;\n    isShared: boolean = false;\n\n    /** Node to share. */\n        // tslint:disable-next-line:no-input-rename\n    @Input('adf-share')\n    node: NodeEntry;\n\n    /** Prefix to add to the generated link. */\n    @Input()\n    baseShareUrl: string;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(\n        private dialog: MatDialog,\n        private zone: NgZone,\n        private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    shareNode(nodeEntry: NodeEntry) {\n        if (nodeEntry && nodeEntry.entry && nodeEntry.entry.isFile) {\n            // shared and favorite\n            const nodeId = nodeEntry.entry['nodeId'] || nodeEntry.entry['guid'];\n\n            if (nodeId) {\n                this.getNodeInfo(nodeId).subscribe((entry) => {\n                  this.openShareLinkDialog({ entry });\n                });\n            } else {\n                this.openShareLinkDialog(nodeEntry);\n            }\n        }\n    }\n\n    private getNodeInfo(nodeId: string): Observable<Node> {\n        const options = {\n          include: ['allowableOperations']\n        };\n\n        return from(this.alfrescoApiService.nodesApi.getNodeInfo(nodeId, options));\n      }\n\n    private openShareLinkDialog(node: NodeEntry) {\n        this.dialog.open(ShareDialogComponent, {\n            width: '600px',\n            panelClass: 'adf-share-link-dialog',\n            data: {\n                node,\n                baseShareUrl: this.baseShareUrl\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.zone.onStable\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n                if (this.node && this.node.entry) {\n                    this.isFile = this.node.entry.isFile;\n                    this.isShared = this.node.entry.properties ? this.node.entry.properties['qshare:sharedId'] : false;\n                }\n            });\n    }\n\n    @HostListener('click')\n    onClick() {\n        if (this.node) {\n            this.shareNode(this.node);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ShareDialogComponent } from './content-node-share.dialog';\nimport { NodeSharedDirective } from './content-node-share.directive';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    exports: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ]\n})\nexport class ContentNodeShareModule {\n    static forRoot(): ModuleWithProviders<ContentNodeShareModule> {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n\n    static forChild(): ModuleWithProviders<ContentNodeShareModule> {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry } from '@alfresco/js-api';\n\nexport class TreeBaseNode {\n\n    name: string;\n    nodeId: string;\n    level: number;\n    expandable = true;\n    node: NodeEntry;\n\n    constructor(nodeEntry: NodeEntry, level?: number, expandable?: boolean) {\n        this.name = nodeEntry.entry.name;\n        this.nodeId = nodeEntry.entry.id;\n        this.level = level ? level : 0;\n        this.expandable = expandable ? expandable : true;\n        this.node = nodeEntry ? new NodeEntry(nodeEntry) : undefined;\n\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { NodePaging, NodeEntry } from '@alfresco/js-api';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TreeViewService {\n\n    constructor(private nodeApi: NodesApiService) {\n    }\n\n    getTreeNodes(nodeId): Observable<TreeBaseNode[]> {\n        return this.nodeApi.getNodeChildren(nodeId)\n            .pipe(\n                map((nodePage: NodePaging) => {\n                    return nodePage.list.entries.filter((node) => node.entry.isFolder ? node : null);\n                }),\n                map((nodes: NodeEntry[]) => nodes.map((node) => new TreeBaseNode(node)))\n            );\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { TreeViewService } from '../services/tree-view.service';\n\n@Injectable()\nexport class TreeViewDataSource {\n\n    treeNodes: TreeBaseNode[];\n    dataChange = new BehaviorSubject<TreeBaseNode[]>([]);\n    childrenSubscription = null;\n    changeSubscription = null;\n\n    get data(): TreeBaseNode[] {\n        return this.treeNodes;\n    }\n\n    set data(value: TreeBaseNode[]) {\n        this.treeControl.dataNodes = value;\n        this.dataChange.next(value);\n    }\n\n    constructor(private treeControl: FlatTreeControl<TreeBaseNode>,\n                private treeViewService: TreeViewService) {\n        this.dataChange.subscribe((treeNodes) => this.treeNodes = treeNodes);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<TreeBaseNode[]> {\n        this.changeSubscription = this.treeControl.expansionModel.changed.subscribe((change) => {\n            if ((change as SelectionChange<TreeBaseNode>).added &&\n                (change as SelectionChange<TreeBaseNode>).added.length > 0) {\n                this.expandTreeNodes(change as SelectionChange<TreeBaseNode>);\n            } else if ((change as SelectionChange<TreeBaseNode>).removed) {\n                this.reduceTreeNodes(change as SelectionChange<TreeBaseNode>);\n            }\n        });\n        return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        if (this.childrenSubscription) {\n            this.childrenSubscription.unsubscribe();\n        }\n        if (this.changeSubscription) {\n            this.changeSubscription.unsubscribe();\n        }\n    }\n\n    private expandTreeNodes(change: SelectionChange<TreeBaseNode>) {\n        change.added.forEach((node) => this.expandNode(node));\n    }\n\n    private reduceTreeNodes(change: SelectionChange<TreeBaseNode>) {\n        change.removed.slice().reverse().forEach((node) => this.toggleNode(node));\n    }\n\n    private expandNode(node: TreeBaseNode) {\n        this.childrenSubscription = this.treeViewService.getTreeNodes(node.nodeId)\n            .subscribe((children) => {\n                const index = this.data.indexOf(node);\n                if (!children || index < 0) {\n                    node.expandable = false;\n                    return;\n                }\n                const nodes = children.map((actualNode) => {\n                    actualNode.level = node.level + 1;\n                    return actualNode;\n                });\n                this.data.splice(index + 1, 0, ...nodes);\n                this.dataChange.next(this.data);\n            });\n    }\n\n    toggleNode(node: TreeBaseNode) {\n        const index = this.data.indexOf(node);\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n            && this.data[i].level > node.level; i++ , count++) { }\n        this.data.splice(index + 1, count);\n        this.dataChange.next(this.data);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { TreeViewDataSource } from '../data/tree-view-datasource';\nimport { TreeViewService } from '../services/tree-view.service';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-tree-view-list',\n    templateUrl: './tree-view.component.html',\n    styleUrls: ['./tree-view.component.scss']\n})\n\nexport class TreeViewComponent implements OnChanges {\n\n    /** Identifier of the node to display. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a node in the tree view is clicked. */\n    @Output()\n    nodeClicked: EventEmitter<NodeEntry> = new EventEmitter();\n\n    /** Emitted when an invalid node id is given. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    treeControl: FlatTreeControl<TreeBaseNode>;\n    dataSource: TreeViewDataSource;\n\n    constructor(private treeViewService: TreeViewService) {\n        this.treeControl = new FlatTreeControl<TreeBaseNode>(this.getLevel, this.isExpandable);\n        this.dataSource = new TreeViewDataSource(this.treeControl, this.treeViewService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['nodeId'] && changes['nodeId'].currentValue &&\n            changes['nodeId'].currentValue !== changes['nodeId'].previousValue) {\n            this.loadTreeNode();\n        } else {\n            this.dataSource.data = [];\n        }\n    }\n\n    onNodeClicked(node: NodeEntry) {\n        this.nodeClicked.emit(node);\n    }\n\n    getLevel = (node: TreeBaseNode) => node.level;\n\n    isExpandable = (node: TreeBaseNode) => node.expandable;\n\n    hasChild = (_: number, nodeData: TreeBaseNode) => nodeData.expandable;\n\n    private loadTreeNode() {\n        this.treeViewService.getTreeNodes(this.nodeId)\n            .subscribe(\n                (treeNode: TreeBaseNode[]) => {\n                    this.dataSource.data = treeNode;\n                },\n                (error) => this.error.emit(error)\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { TreeViewComponent } from './components/tree-view.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule\n    ],\n    declarations: [\n        TreeViewComponent\n    ],\n    exports: [\n        TreeViewComponent\n    ]\n})\nexport class TreeViewModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { GroupEntry } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GroupService {\n    constructor(\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    async listAllGroupMembershipsForPerson(personId: string, opts?: any, accumulator = []): Promise<GroupEntry[]> {\n        const groupsPaginated = await this.alfrescoApiService.groupsApi.listGroupMembershipsForPerson(personId, opts);\n        accumulator = [...accumulator, ...groupsPaginated.list.entries];\n        if (groupsPaginated.list.pagination.hasMoreItems) {\n            const skip = groupsPaginated.list.pagination.skipCount + groupsPaginated.list.pagination.count;\n            return this.listAllGroupMembershipsForPerson(personId, {\n                maxItems: opts.maxItems,\n                skipCount: skip\n            }, accumulator);\n        } else {\n            return accumulator;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Observable, Subject, zip } from 'rxjs';\nimport { concatMap, map, takeUntil, tap } from 'rxjs/operators';\nimport { AspectListService } from './aspect-list.service';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { AspectEntry } from '@alfresco/js-api';\n@Component({\n    selector: 'adf-aspect-list',\n    templateUrl: './aspect-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AspectListComponent implements OnInit, OnDestroy {\n\n    /** Node Id of the node that we want to update */\n    @Input()\n    nodeId: string = '';\n\n    /** Emitted every time the user select a new aspect */\n    @Output()\n    valueChanged: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n    propertyColumns: string[] = ['name', 'title', 'dataType'];\n    aspects$: Observable<AspectEntry[]> = null;\n    nodeAspects: string[] = [];\n    nodeAspectStatus: string[] = [];\n    hasEqualAspect: boolean = true;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private aspectListService: AspectListService, private nodeApiService: NodesApiService) {\n    }\n\n    ngOnDestroy(): void {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    ngOnInit(): void {\n        if (this.nodeId) {\n            const node$ = this.nodeApiService.getNode(this.nodeId);\n            const customAspect$ = this.aspectListService.getCustomAspects()\n            .pipe(map(\n                (customAspects) => customAspects.flatMap((customAspect) => customAspect.entry.id)\n            ));\n            this.aspects$ = zip(node$, customAspect$).pipe(\n                tap(([node, customAspects]) => {\n                    this.nodeAspects = node.aspectNames.filter((aspect) => this.aspectListService.getVisibleAspects().includes(aspect) || customAspects.includes(aspect));\n                    this.nodeAspectStatus = [ ...this.nodeAspects ];\n                    this.valueChanged.emit(this.nodeAspects);\n                }),\n                concatMap(() => this.aspectListService.getAspects()),\n                takeUntil(this.onDestroy$));\n        } else {\n            this.aspects$ = this.aspectListService.getAspects()\n                .pipe(takeUntil(this.onDestroy$));\n        }\n    }\n\n    onCheckBoxClick(event: Event) {\n        event.stopImmediatePropagation();\n    }\n\n    onChange(change: MatCheckboxChange, prefixedName: string) {\n        if (change.checked) {\n            this.nodeAspects.push(prefixedName);\n        } else {\n            this.nodeAspects.splice(this.nodeAspects.indexOf(prefixedName), 1);\n        }\n        this.updateEqualityOfAspectList();\n        this.valueChanged.emit(this.nodeAspects);\n    }\n\n    reset() {\n        if (this.nodeAspectStatus && this.nodeAspectStatus.length > 0) {\n            this.nodeAspects.splice(0, this.nodeAspects.length, ...this.nodeAspectStatus);\n            this.hasEqualAspect = true;\n            this.valueChanged.emit(this.nodeAspects);\n        } else {\n            this.clear();\n        }\n    }\n\n    clear() {\n        this.nodeAspects = [];\n        this.updateEqualityOfAspectList();\n        this.valueChanged.emit(this.nodeAspects);\n    }\n\n    getId(aspect: any): string {\n        return aspect?.entry?.title ? aspect?.entry?.title : aspect?.entry?.id.replace(':', '-');\n    }\n\n    getTitle(aspect: any): string {\n        return aspect?.entry?.title ? aspect?.entry?.title : aspect?.entry?.id;\n    }\n\n    private updateEqualityOfAspectList() {\n        if (this.nodeAspectStatus.length !== this.nodeAspects.length) {\n            this.hasEqualAspect =  false;\n        } else {\n            this.hasEqualAspect = this.nodeAspects.every((aspect) => this.nodeAspectStatus.includes(aspect));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AspectListComponent } from './aspect-list.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { PipeModule } from '@alfresco/adf-core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AspectListDialogComponent } from './aspect-list-dialog.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatTableModule,\n        MatExpansionModule,\n        MatCheckboxModule,\n        PipeModule,\n        TranslateModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatProgressSpinnerModule\n    ],\n    exports: [\n        AspectListComponent,\n        AspectListDialogComponent\n    ],\n    declarations: [\n        AspectListComponent,\n        AspectListDialogComponent\n    ]\n})\nexport class AspectListModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ContentTypeDialogComponent } from './content-type-dialog.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatTableModule,\n        MatExpansionModule,\n        MatCheckboxModule,\n        TranslateModule,\n        MatDialogModule,\n        MatButtonModule\n    ],\n    exports: [\n        ContentTypeDialogComponent\n    ],\n    declarations: [\n        ContentTypeDialogComponent\n    ]\n})\nexport class ContentTypeModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { SocialModule } from './social/social.module';\nimport { TagModule } from './tag/tag.module';\nimport { WebScriptModule } from './webscript/webscript.module';\nimport { DocumentListModule } from './document-list/document-list.module';\nimport { UploadModule } from './upload/upload.module';\nimport { SearchModule } from './search/search.module';\nimport { SitesDropdownModule } from './site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { VersionManagerModule } from './version-manager/version-manager.module';\nimport { ContentNodeSelectorModule } from './content-node-selector/content-node-selector.module';\nimport { ContentNodeShareModule } from './content-node-share/content-node-share.module';\nimport { ContentDirectiveModule } from './directives/content-directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { FolderDirectiveModule } from './folder-directive/folder-directive.module';\nimport { ContentMetadataModule } from './content-metadata/content-metadata.module';\nimport { PermissionManagerModule } from './permission-manager/permission-manager.module';\nimport { TreeViewModule } from './tree-view/tree-view.module';\nimport { ContentTypeModule } from './content-type/content-type.module';\nimport { AspectListModule } from './aspect-list/aspect-list.module';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule,\n        ContentTypeModule,\n        AspectListModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-content-services',\n                source: 'assets/adf-content-services'\n            }\n        }\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule,\n        AspectListModule,\n        ContentTypeModule\n    ]\n})\nexport class ContentModule {\n    static forRoot(): ModuleWithProviders<ContentModule> {\n        return {\n            ngModule: ContentModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-content-services',\n                        source: 'assets/adf-content-services'\n                    }\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders<ContentModule> {\n        return {\n            ngModule: ContentModule\n        };\n    }\n}\n"]}