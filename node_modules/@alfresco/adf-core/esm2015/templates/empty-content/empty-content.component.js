/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../icon/icon.component';
import * as ɵngcc2 from '@ngx-translate/core';

const _c0 = ["*"];
export class EmptyContentComponent {
    constructor() {
        this.icon = 'cake';
        this.title = '';
        this.subtitle = '';
    }
}
EmptyContentComponent.ɵfac = function EmptyContentComponent_Factory(t) { return new (t || EmptyContentComponent)(); };
EmptyContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EmptyContentComponent, selectors: [["adf-empty-content"]], hostAttrs: [1, "adf-empty-content"], inputs: { icon: "icon", title: "title", subtitle: "subtitle" }, ngContentSelectors: _c0, decls: 9, vars: 7, consts: [[1, "adf-empty-content"], [1, "adf-empty-content__icon", 3, "value"], [1, "adf-empty-content__title"], [1, "adf-empty-content__subtitle"]], template: function EmptyContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "adf-icon", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(8);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.icon);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 3, ctx.title));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 5, ctx.subtitle));
    } }, directives: [ɵngcc1.IconComponent], pipes: [ɵngcc2.TranslatePipe], encapsulation: 2, changeDetection: 0 });
EmptyContentComponent.propDecorators = {
    icon: [{ type: Input }],
    title: [{ type: Input }],
    subtitle: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmptyContentComponent, [{
        type: Component,
        args: [{
                selector: 'adf-empty-content',
                template: "<div class=\"adf-empty-content\">\n    <adf-icon class=\"adf-empty-content__icon\" [value]=\"icon\"></adf-icon>\n    <div class=\"adf-empty-content__title\">{{ title | translate }}</div>\n    <div class=\"adf-empty-content__subtitle\">{{ subtitle | translate }}</div>\n    <ng-content></ng-content>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-empty-content' }
            }]
    }], function () { return []; }, { icon: [{
            type: Input
        }], title: [{
            type: Input
        }], subtitle: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHktY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlL3RlbXBsYXRlcy9lbXB0eS1jb250ZW50L2VtcHR5LWNvbnRlbnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBUzdGLE1BQU0sT0FBTyxxQkFBcUI7QUFDbEMsSUFSQTtBQUNHLFFBVUMsU0FBSSxHQUFHLE1BQU0sQ0FBQztBQUNsQixRQUdJLFVBQUssR0FBRyxFQUFFLENBQUM7QUFDZixRQUdJLGFBQVEsR0FBRyxFQUFFLENBQUM7QUFDbEIsSUFDQSxDQUFDO0FBQ0Q7aURBdEJDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsbUJBQW1CO2FBQzdCLGdVQUE2QyxrQkFDN0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sa0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLGtCQUNyQyxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUU7ZUFBbUIsRUFBRSxjQUN2Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0hBQ0k7QUFBQztBQUVHLG1CQUNKLEtBQUs7QUFDUixvQkFHRyxLQUFLO0FBQ1IsdUJBR0csS0FBSztBQUNUOzs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtZW1wdHktY29udGVudCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2VtcHR5LWNvbnRlbnQuY29tcG9uZW50Lmh0bWwnLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyBjbGFzczogJ2FkZi1lbXB0eS1jb250ZW50JyB9XG59KVxuZXhwb3J0IGNsYXNzIEVtcHR5Q29udGVudENvbXBvbmVudCB7XG5cbiAgICAvKiogTWF0ZXJpYWwgSWNvbiB0byB1c2UuICovXG4gICAgQElucHV0KClcbiAgICBpY29uID0gJ2Nha2UnO1xuXG4gICAgLyoqIFN0cmluZyBvciBSZXNvdXJjZSBLZXkgZm9yIHRoZSB0aXRsZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlID0gJyc7XG5cbiAgICAvKiogU3RyaW5nIG9yIFJlc291cmNlIEtleSBmb3IgdGhlIHN1YnRpdGxlLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc3VidGl0bGUgPSAnJztcblxufVxuIl19