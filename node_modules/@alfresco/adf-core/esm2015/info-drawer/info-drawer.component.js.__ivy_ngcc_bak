/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ContentChildren, EventEmitter, HostListener, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';
export class InfoDrawerTabComponent {
    constructor() {
        this.label = '';
        this.icon = null;
    }
}
InfoDrawerTabComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-info-drawer-tab',
                template: '<ng-template><ng-content></ng-content></ng-template>'
            },] }
];
InfoDrawerTabComponent.propDecorators = {
    label: [{ type: Input }],
    icon: [{ type: Input }],
    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }]
};
export class InfoDrawerComponent {
    constructor() {
        this.title = null;
        this.selectedIndex = 0;
        this.showHeader = true;
        this.currentTab = new EventEmitter();
    }
    onKeyDown(event) {
        event.cancelBubble = true;
    }
    onKeyUp(event) {
        event.cancelBubble = true;
    }
    showTabLayout() {
        return this.contentBlocks.length > 0;
    }
    onTabChange(event) {
        this.currentTab.emit(event.index);
    }
}
InfoDrawerComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-info-drawer',
                template: "<adf-info-drawer-layout [showHeader]=\"showHeader\">\n    <div role=\"heading\" aria-level=\"1\" *ngIf=\"title\" info-drawer-title>{{ title | translate }}</div>\n    <ng-content *ngIf=\"!title\" info-drawer-title select=\"[info-drawer-title]\"></ng-content>\n\n    <ng-content info-drawer-buttons select=\"[info-drawer-buttons]\"></ng-content>\n\n    <ng-container info-drawer-content *ngIf=\"showTabLayout(); then tabLayout else singleLayout\"></ng-container>\n\n    <ng-template #tabLayout>\n        <mat-tab-group [(selectedIndex)]=\"selectedIndex\" class=\"adf-info-drawer-tabs\" (selectedTabChange)=\"onTabChange($event)\">\n            <mat-tab *ngFor=\"let contentBlock of contentBlocks\"\n                [label]=\"contentBlock.label | translate\"\n                class=\"adf-info-drawer-tab\">\n\n                <ng-template mat-tab-label>\n                    <mat-icon *ngIf=\"contentBlock.icon\">{{ contentBlock.icon }}</mat-icon>\n                    <span *ngIf=\"contentBlock.label\">{{ contentBlock.label | translate }}</span>\n                </ng-template>\n\n                <ng-container *ngTemplateOutlet=\"contentBlock.content\"></ng-container>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-template>\n\n    <ng-template #singleLayout>\n        <ng-content select=\"[info-drawer-content]\"></ng-content>\n    </ng-template>\n</adf-info-drawer-layout>\n",
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-info-drawer' },
                styles: [".adf-info-drawer{display:block}.adf-info-drawer .mat-tab-label{min-width:0}.adf-info-drawer .adf-info-drawer-layout-content{padding:0}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs){padding:10px}.adf-info-drawer .adf-info-drawer-layout-content>:not(.adf-info-drawer-tabs)>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>*{display:block;margin-bottom:20px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content>:last-child{margin-bottom:0}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label{flex-grow:1}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label .mat-icon+span{padding-left:5px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-ink-bar{height:4px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body{padding:10px}.adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content{overflow:initial}"]
            },] }
];
InfoDrawerComponent.propDecorators = {
    title: [{ type: Input }],
    selectedIndex: [{ type: Input }],
    showHeader: [{ type: Input }],
    currentTab: [{ type: Output }],
    contentBlocks: [{ type: ContentChildren, args: [InfoDrawerTabComponent,] }],
    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],
    onKeyUp: [{ type: HostListener, args: ['keyup', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mby1kcmF3ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RyYXZpcy9idWlsZC9BbGZyZXNjby9hbGZyZXNjby1uZzItY29tcG9uZW50cy9saWIvY29yZS8iLCJzb3VyY2VzIjpbImluZm8tZHJhd2VyL2luZm8tZHJhd2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNNUosTUFBTSxPQUFPLHNCQUFzQjtJQUpuQztRQU9JLFVBQUssR0FBVyxFQUFFLENBQUM7UUFJbkIsU0FBSSxHQUFXLElBQUksQ0FBQztJQUl4QixDQUFDOzs7WUFmQSxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsUUFBUSxFQUFFLHNEQUFzRDthQUNuRTs7O29CQUdJLEtBQUs7bUJBSUwsS0FBSztzQkFHTCxTQUFTLFNBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7QUFXNUMsTUFBTSxPQUFPLG1CQUFtQjtJQVBoQztRQVVJLFVBQUssR0FBZ0IsSUFBSSxDQUFDO1FBSTFCLGtCQUFhLEdBQVcsQ0FBQyxDQUFDO1FBSTFCLGVBQVUsR0FBWSxJQUFJLENBQUM7UUFJM0IsZUFBVSxHQUF5QixJQUFJLFlBQVksRUFBVSxDQUFDO0lBc0JsRSxDQUFDO0lBaEJHLFNBQVMsQ0FBQyxLQUFvQjtRQUMxQixLQUFLLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztJQUM5QixDQUFDO0lBR0QsT0FBTyxDQUFDLEtBQW9CO1FBQ3hCLEtBQUssQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxhQUFhO1FBQ1QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELFdBQVcsQ0FBQyxLQUF3QjtRQUNoQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7O1lBM0NKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQiwwM0NBQTJDO2dCQUUzQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtnQkFDckMsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFOzthQUN2Qzs7O29CQUdJLEtBQUs7NEJBSUwsS0FBSzt5QkFJTCxLQUFLO3lCQUlMLE1BQU07NEJBR04sZUFBZSxTQUFDLHNCQUFzQjt3QkFHdEMsWUFBWSxTQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQztzQkFLbEMsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE91dHB1dCwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0VGFiQ2hhbmdlRXZlbnQgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC90YWJzJztcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWluZm8tZHJhd2VyLXRhYicsXG4gICAgdGVtcGxhdGU6ICc8bmctdGVtcGxhdGU+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PjwvbmctdGVtcGxhdGU+J1xufSlcbmV4cG9ydCBjbGFzcyBJbmZvRHJhd2VyVGFiQ29tcG9uZW50IHtcbiAgICAvKiogVGhlIHRpdGxlIG9mIHRoZSB0YWIgKHN0cmluZyBvciB0cmFuc2xhdGlvbiBrZXkpLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgbGFiZWw6IHN0cmluZyA9ICcnO1xuXG4gICAgLyoqIEljb24gdG8gcmVuZGVyIGZvciB0aGUgdGFiLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgaWNvbjogc3RyaW5nID0gbnVsbDtcblxuICAgIEBWaWV3Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiB0cnVlIH0pXG4gICAgY29udGVudDogVGVtcGxhdGVSZWY8YW55Pjtcbn1cblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtaW5mby1kcmF3ZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9pbmZvLWRyYXdlci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vaW5mby1kcmF3ZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHsgJ2NsYXNzJzogJ2FkZi1pbmZvLWRyYXdlcicgfVxufSlcbmV4cG9ydCBjbGFzcyBJbmZvRHJhd2VyQ29tcG9uZW50IHtcbiAgICAvKiogVGhlIHRpdGxlIG9mIHRoZSBpbmZvIGRyYXdlciAoc3RyaW5nIG9yIHRyYW5zbGF0aW9uIGtleSkuICovXG4gICAgQElucHV0KClcbiAgICB0aXRsZTogc3RyaW5nfG51bGwgPSBudWxsO1xuXG4gICAgLyoqIFRoZSBzZWxlY3RlZCBpbmRleCB0YWIuICovXG4gICAgQElucHV0KClcbiAgICBzZWxlY3RlZEluZGV4OiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIFRoZSB2aXNpYmlsaXR5IG9mIHRoZSBoZWFkZXIuICovXG4gICAgQElucHV0KClcbiAgICBzaG93SGVhZGVyOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBFbWl0dGVkIHdoZW4gdGhlIGN1cnJlbnRseSBhY3RpdmUgdGFiIGNoYW5nZXMuICovXG4gICAgQE91dHB1dCgpXG4gICAgY3VycmVudFRhYjogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcblxuICAgIEBDb250ZW50Q2hpbGRyZW4oSW5mb0RyYXdlclRhYkNvbXBvbmVudClcbiAgICBjb250ZW50QmxvY2tzOiBRdWVyeUxpc3Q8SW5mb0RyYXdlclRhYkNvbXBvbmVudD47XG5cbiAgICBASG9zdExpc3RlbmVyKCdrZXlkb3duJywgWyckZXZlbnQnXSlcbiAgICBvbktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICAgICAgZXZlbnQuY2FuY2VsQnViYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCdrZXl1cCcsIFsnJGV2ZW50J10pXG4gICAgb25LZXlVcChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICBldmVudC5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgIH1cblxuICAgIHNob3dUYWJMYXlvdXQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRlbnRCbG9ja3MubGVuZ3RoID4gMDtcbiAgICB9XG5cbiAgICBvblRhYkNoYW5nZShldmVudDogTWF0VGFiQ2hhbmdlRXZlbnQpIHtcbiAgICAgICAgdGhpcy5jdXJyZW50VGFiLmVtaXQoZXZlbnQuaW5kZXgpO1xuICAgIH1cbn1cbiJdfQ==