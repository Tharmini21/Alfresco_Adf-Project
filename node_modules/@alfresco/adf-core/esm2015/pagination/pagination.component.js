/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2 } from '@angular/core';
import { Subject } from 'rxjs';
import { PaginationModel } from '../models/pagination.model';
import { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';
import { takeUntil } from 'rxjs/operators';
import { TranslateService } from '@ngx-translate/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../services/user-preferences.service';
import * as ɵngcc2 from '@ngx-translate/core';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/button';
import * as ɵngcc5 from '@angular/material/menu';
import * as ɵngcc6 from '@angular/material/icon';

function PaginationComponent_ng_container_0_button_16_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function PaginationComponent_ng_container_0_button_16_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const pageSize_r7 = ctx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.onChangePageSize(pageSize_r7); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const pageSize_r7 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", pageSize_r7, " ");
} }
function PaginationComponent_ng_container_0_button_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "arrow_drop_down");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r5 = ɵngcc0.ɵɵreference(24);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r5);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "CORE.PAGINATION.ARIA.CURRENT_PAGE"));
} }
const _c0 = function (a0) { return { total: a0 }; };
function PaginationComponent_ng_container_0_div_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "span", 18);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 1, "CORE.PAGINATION.TOTAL_PAGES", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx_r4.pages.length)), " ");
} }
function PaginationComponent_ng_container_0_button_25_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function PaginationComponent_ng_container_0_button_25_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const pageNumber_r10 = ctx.$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onChangePageNumber(pageNumber_r10); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const pageNumber_r10 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", pageNumber_r10, " ");
} }
const _c1 = function (a0) { return { number: a0 }; };
function PaginationComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "span", 2);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 3);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "span", 4);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "button", 5);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementStart(12, "mat-icon");
    ɵngcc0.ɵɵtext(13, "arrow_drop_down");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "mat-menu", 6, 7);
    ɵngcc0.ɵɵtemplate(16, PaginationComponent_ng_container_0_button_16_Template, 2, 1, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "div", 9);
    ɵngcc0.ɵɵelementStart(18, "span", 10);
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(21, PaginationComponent_ng_container_0_button_21_Template, 4, 4, "button", 11);
    ɵngcc0.ɵɵtemplate(22, PaginationComponent_ng_container_0_div_22_Template, 4, 6, "div", 0);
    ɵngcc0.ɵɵelementStart(23, "mat-menu", 6, 12);
    ɵngcc0.ɵɵtemplate(25, PaginationComponent_ng_container_0_button_25_Template, 2, 1, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(26, "div", 13);
    ɵngcc0.ɵɵelementStart(27, "button", 14);
    ɵngcc0.ɵɵlistener("click", function PaginationComponent_ng_container_0_Template_button_click_27_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.goPrevious(); });
    ɵngcc0.ɵɵpipe(28, "translate");
    ɵngcc0.ɵɵelementStart(29, "mat-icon");
    ɵngcc0.ɵɵtext(30, "keyboard_arrow_left");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(31, "button", 15);
    ɵngcc0.ɵɵlistener("click", function PaginationComponent_ng_container_0_Template_button_click_31_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.goNext(); });
    ɵngcc0.ɵɵpipe(32, "translate");
    ɵngcc0.ɵɵelementStart(33, "mat-icon");
    ɵngcc0.ɵɵtext(34, "keyboard_arrow_right");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r1 = ɵngcc0.ɵɵreference(15);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.itemRangeText, " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 14, "CORE.PAGINATION.ITEMS_PER_PAGE"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.pagination.maxItems, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r1);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(11, 16, "CORE.PAGINATION.ARIA.ITEMS_PER_PAGE"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.supportedPageSizes);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(20, 18, "CORE.PAGINATION.CURRENT_PAGE", ɵngcc0.ɵɵpureFunction1(25, _c1, ctx_r0.current)), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.pages.length > 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.pagination.totalItems);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.pages);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r0.isFirstPage);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(28, 21, "CORE.PAGINATION.ARIA.PREVIOUS_PAGE"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("disabled", ctx_r0.isLastPage);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(32, 23, "CORE.PAGINATION.ARIA.NEXT_PAGE"));
} }
export class PaginationComponent {
    constructor(elementRef, renderer, cdr, userPreferencesService, translate) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.cdr = cdr;
        this.userPreferencesService = userPreferencesService;
        this.translate = translate;
        this._isEmpty = true;
        this._hasItems = false;
        this.change = new EventEmitter();
        this.changePageNumber = new EventEmitter();
        this.changePageSize = new EventEmitter();
        this.nextPage = new EventEmitter();
        this.prevPage = new EventEmitter();
        this.onDestroy$ = new Subject();
    }
    get pagination() {
        return this._pagination;
    }
    set pagination(value) {
        value = value || PaginationComponent.DEFAULT_PAGINATION;
        this._pagination = value;
        this._hasItems = value && value.count > 0;
        this._isEmpty = !this.hasItems;
        if (this._isEmpty) {
            this.renderer.addClass(this.elementRef.nativeElement, 'adf-pagination__empty');
        }
        else {
            this.renderer.removeClass(this.elementRef.nativeElement, 'adf-pagination__empty');
        }
        this.cdr.detectChanges();
    }
    ngOnInit() {
        this.userPreferencesService
            .select(UserPreferenceValues.PaginationSize)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(maxItems => {
            this.pagination = Object.assign(Object.assign(Object.assign({}, PaginationComponent.DEFAULT_PAGINATION), this.pagination), { maxItems });
        });
        if (!this.supportedPageSizes) {
            this.supportedPageSizes = this.userPreferencesService.supportedPageSizes;
        }
        if (this.target) {
            this.target.pagination
                .pipe(takeUntil(this.onDestroy$))
                .subscribe(pagination => {
                if (pagination.count === 0 && !this.isFirstPage) {
                    this.goPrevious();
                }
                this.pagination = Object.assign({}, pagination);
            });
        }
        if (!this.pagination) {
            this.pagination = Object.assign({}, PaginationComponent.DEFAULT_PAGINATION);
        }
    }
    get lastPage() {
        const { maxItems, totalItems } = this.pagination;
        return (totalItems && maxItems)
            ? Math.ceil(totalItems / maxItems)
            : 1;
    }
    get current() {
        const { maxItems, skipCount } = this.pagination;
        return (skipCount && maxItems)
            ? Math.floor(skipCount / maxItems) + 1
            : 1;
    }
    get isLastPage() {
        if (!this.pagination.totalItems && this.pagination.hasMoreItems) {
            return false;
        }
        return this.current === this.lastPage;
    }
    get isFirstPage() {
        return this.current === 1;
    }
    get next() {
        return this.isLastPage ? this.current : this.current + 1;
    }
    get previous() {
        return this.isFirstPage ? 1 : this.current - 1;
    }
    get hasItems() {
        return this._hasItems;
    }
    get isEmpty() {
        return this._isEmpty;
    }
    get range() {
        const { skipCount, maxItems, totalItems } = this.pagination;
        let start = 0;
        if (totalItems || totalItems !== 0) {
            start = skipCount + 1;
        }
        const end = this.isLastPage ? totalItems : skipCount + maxItems;
        return [start, end];
    }
    get pages() {
        return Array(this.lastPage)
            .fill('n')
            .map((_, index) => (index + 1));
    }
    get itemRangeText() {
        const rangeString = this.range.join('-');
        let translation = this.translate.instant('CORE.PAGINATION.ITEMS_RANGE', {
            range: rangeString,
            total: this.pagination.totalItems
        });
        if (!this.pagination.totalItems) {
            translation = translation.substr(0, translation.indexOf(rangeString) + rangeString.length);
        }
        return translation;
    }
    goNext() {
        if (this.hasItems) {
            const maxItems = this.pagination.maxItems;
            const skipCount = (this.next - 1) * maxItems;
            this.pagination = Object.assign(Object.assign({}, this.pagination), { skipCount });
            this.handlePaginationEvent('NEXT_PAGE');
        }
    }
    goPrevious() {
        if (this.hasItems) {
            const maxItems = this.pagination.maxItems;
            const skipCount = (this.previous - 1) * maxItems;
            this.pagination = Object.assign(Object.assign({}, this.pagination), { skipCount });
            this.handlePaginationEvent('PREV_PAGE');
        }
    }
    onChangePageNumber(pageNumber) {
        if (this.hasItems) {
            const maxItems = this.pagination.maxItems;
            const skipCount = (pageNumber - 1) * maxItems;
            this.pagination = Object.assign(Object.assign({}, this.pagination), { skipCount });
            this.handlePaginationEvent('CHANGE_PAGE_NUMBER');
        }
    }
    onChangePageSize(maxItems) {
        this.pagination = Object.assign(Object.assign({}, this.pagination), { skipCount: 0, maxItems });
        this.userPreferencesService.paginationSize = maxItems;
        this.handlePaginationEvent('CHANGE_PAGE_SIZE');
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    handlePaginationEvent(action) {
        const paginationModel = Object.assign({}, this.pagination);
        if (action === 'NEXT_PAGE') {
            this.nextPage.emit(paginationModel);
        }
        if (action === 'PREV_PAGE') {
            this.prevPage.emit(paginationModel);
        }
        if (action === 'CHANGE_PAGE_NUMBER') {
            this.changePageNumber.emit(paginationModel);
        }
        if (action === 'CHANGE_PAGE_SIZE') {
            this.changePageSize.emit(paginationModel);
        }
        this.change.emit(paginationModel);
        if (this.target) {
            this.target.updatePagination(paginationModel);
        }
    }
}
PaginationComponent.ɵfac = function PaginationComponent_Factory(t) { return new (t || PaginationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UserPreferencesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslateService)); };
PaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PaginationComponent, selectors: [["adf-pagination"]], hostAttrs: [1, "adf-pagination"], inputs: { pagination: "pagination", supportedPageSizes: "supportedPageSizes", target: "target" }, outputs: { change: "change", changePageNumber: "changePageNumber", changePageSize: "changePageSize", nextPage: "nextPage", prevPage: "prevPage" }, decls: 1, vars: 1, consts: [[4, "ngIf"], [1, "adf-pagination__block", "adf-pagination__range-block"], [1, "adf-pagination__range"], [1, "adf-pagination__block", "adf-pagination__perpage-block"], [1, "adf-pagination__max-items"], ["mat-icon-button", "", 3, "matMenuTriggerFor"], [1, "adf-pagination__page-selector"], ["pageSizeMenu", "matMenu"], ["mat-menu-item", "", 3, "click", 4, "ngFor", "ngForOf"], [1, "adf-pagination__block", "adf-pagination__actualinfo-block"], [1, "adf-pagination__current-page"], ["mat-icon-button", "", "data-automation-id", "page-selector", 3, "matMenuTriggerFor", 4, "ngIf"], ["pagesMenu", "matMenu"], [1, "adf-pagination__block", "adf-pagination__controls-block"], ["mat-icon-button", "", 1, "adf-pagination__previous-button", 3, "disabled", "click"], ["mat-icon-button", "", 1, "adf-pagination__next-button", 3, "disabled", "click"], ["mat-menu-item", "", 3, "click"], ["mat-icon-button", "", "data-automation-id", "page-selector", 3, "matMenuTriggerFor"], [1, "adf-pagination__total-pages"]], template: function PaginationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, PaginationComponent_ng_container_0_Template, 35, 27, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasItems);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.MatButton, ɵngcc5.MatMenuTrigger, ɵngcc6.MatIcon, ɵngcc5._MatMenu, ɵngcc3.NgForOf, ɵngcc5.MatMenuItem], pipes: [ɵngcc2.TranslatePipe], encapsulation: 2, changeDetection: 0 });
PaginationComponent.DEFAULT_PAGINATION = {
    skipCount: 0,
    maxItems: 25,
    totalItems: 0,
    count: 0,
    hasMoreItems: false
};
PaginationComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef },
    { type: UserPreferencesService },
    { type: TranslateService }
];
PaginationComponent.propDecorators = {
    target: [{ type: Input }],
    supportedPageSizes: [{ type: Input }],
    pagination: [{ type: Input }],
    change: [{ type: Output }],
    changePageNumber: [{ type: Output }],
    changePageSize: [{ type: Output }],
    nextPage: [{ type: Output }],
    prevPage: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PaginationComponent, [{
        type: Component,
        args: [{
                selector: 'adf-pagination',
                host: { 'class': 'adf-pagination' },
                template: "<ng-container *ngIf=\"hasItems\">\n    <div class=\"adf-pagination__block adf-pagination__range-block\">\n        <span class=\"adf-pagination__range\">\n            {{ itemRangeText }}\n        </span>\n    </div>\n\n    <div class=\"adf-pagination__block adf-pagination__perpage-block\">\n        <span>\n            {{ 'CORE.PAGINATION.ITEMS_PER_PAGE' | translate }}\n        </span>\n\n        <span class=\"adf-pagination__max-items\">\n            {{ pagination.maxItems }}\n        </span>\n\n        <button\n            mat-icon-button\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.ITEMS_PER_PAGE' | translate\"\n            [matMenuTriggerFor]=\"pageSizeMenu\">\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <mat-menu #pageSizeMenu=\"matMenu\" class=\"adf-pagination__page-selector\">\n            <button\n                mat-menu-item\n                *ngFor=\"let pageSize of supportedPageSizes\"\n                (click)=\"onChangePageSize(pageSize)\">\n                {{ pageSize }}\n            </button>\n        </mat-menu>\n    </div>\n\n    <div class=\"adf-pagination__block adf-pagination__actualinfo-block\">\n        <span class=\"adf-pagination__current-page\">\n            {{ 'CORE.PAGINATION.CURRENT_PAGE' | translate: { number: current } }}\n        </span>\n\n        <button\n            mat-icon-button\n            data-automation-id=\"page-selector\"\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.CURRENT_PAGE' | translate\"\n            [matMenuTriggerFor]=\"pagesMenu\"\n            *ngIf=\"pages.length > 1\">\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <div *ngIf=\"pagination.totalItems\">\n            <span class=\"adf-pagination__total-pages\">\n                {{ 'CORE.PAGINATION.TOTAL_PAGES' | translate: { total: pages.length } }}\n            </span>\n        </div>\n\n        <mat-menu #pagesMenu=\"matMenu\" class=\"adf-pagination__page-selector\">\n            <button\n                mat-menu-item\n                *ngFor=\"let pageNumber of pages\"\n                (click)=\"onChangePageNumber(pageNumber)\">\n                {{ pageNumber }}\n            </button>\n        </mat-menu>\n    </div>\n\n    <div class=\"adf-pagination__block adf-pagination__controls-block\">\n        <button\n            class=\"adf-pagination__previous-button\"\n            mat-icon-button\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.PREVIOUS_PAGE' | translate\"\n            [disabled]=\"isFirstPage\"\n            (click)=\"goPrevious()\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n\n        <button\n            class=\"adf-pagination__next-button\"\n            mat-icon-button\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.NEXT_PAGE' | translate\"\n            [disabled]=\"isLastPage\"\n            (click)=\"goNext()\">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UserPreferencesService }, { type: ɵngcc2.TranslateService }]; }, { change: [{
            type: Output
        }], changePageNumber: [{
            type: Output
        }], changePageSize: [{
            type: Output
        }], nextPage: [{
            type: Output
        }], prevPage: [{
            type: Output
        }], pagination: [{
            type: Input
        }], supportedPageSizes: [{
            type: Input
        }], target: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,