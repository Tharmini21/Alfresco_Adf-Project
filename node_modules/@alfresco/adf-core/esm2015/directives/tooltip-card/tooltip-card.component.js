import { Component, Input, SecurityContext } from '@angular/core';
import { animate, style, transition, trigger } from '@angular/animations';
import { DomSanitizer } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
import * as ɵngcc2 from '@angular/common';

function TooltipCardComponent_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 4);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r0.text);
    ɵngcc0.ɵɵproperty("src", ctx_r0.image, ɵngcc0.ɵɵsanitizeUrl)("width", ctx_r0.width);
} }
function TooltipCardComponent_hr_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "hr");
} }
function TooltipCardComponent_p_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.text);
} }
function TooltipCardComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 5);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r3.sanitizedHtmlContent(), ɵngcc0.ɵɵsanitizeHtml);
} }
export class TooltipCardComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.image = '';
        this.text = '';
        this.htmlContent = '';
        this.width = '300';
    }
    sanitizedHtmlContent() {
        return this.sanitizer.sanitize(SecurityContext.HTML, this.htmlContent);
    }
}
TooltipCardComponent.ɵfac = function TooltipCardComponent_Factory(t) { return new (t || TooltipCardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
TooltipCardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipCardComponent, selectors: [["adf-tooltip-card-component"]], inputs: { image: "image", text: "text", htmlContent: "htmlContent", width: "width" }, decls: 5, vars: 7, consts: [[1, "adf-tooltip-card"], [3, "src", "width", "alt", 4, "ngIf"], [4, "ngIf"], ["class", "adf-tooltip-card-content", 3, "innerHTML", 4, "ngIf"], [3, "src", "width", "alt"], [1, "adf-tooltip-card-content", 3, "innerHTML"]], template: function TooltipCardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, TooltipCardComponent_img_1_Template, 1, 3, "img", 1);
        ɵngcc0.ɵɵtemplate(2, TooltipCardComponent_hr_2_Template, 1, 0, "hr", 2);
        ɵngcc0.ɵɵtemplate(3, TooltipCardComponent_p_3_Template, 2, 1, "p", 2);
        ɵngcc0.ɵɵtemplate(4, TooltipCardComponent_div_4_Template, 1, 1, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width, "px");
        ɵngcc0.ɵɵproperty("@tooltip", undefined);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.image);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.image);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.text);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.htmlContent);
    } }, directives: [ɵngcc2.NgIf], encapsulation: 2, data: { animation: [
            trigger('tooltip', [
                transition(':enter', [
                    style({ opacity: 0 }),
                    animate(200, style({ opacity: 1 }))
                ]),
                transition(':leave', [
                    animate(200, style({ opacity: 0 }))
                ])
            ])
        ] } });
TooltipCardComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
TooltipCardComponent.propDecorators = {
    image: [{ type: Input }],
    text: [{ type: Input }],
    htmlContent: [{ type: Input }],
    width: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipCardComponent, [{
        type: Component,
        args: [{
                selector: 'adf-tooltip-card-component',
                template: "<div @tooltip class=\"adf-tooltip-card\" [style.width.px]=\"width\">\n    <img *ngIf=\"image \" [src]=\"image\" [width]=\"width\" alt=\"{{text}}\">\n    <hr *ngIf=\"image\" />\n    <p *ngIf=\"text\">{{text}}</p>\n    <div *ngIf=\"htmlContent\" [innerHTML]=\"sanitizedHtmlContent()\" class=\"adf-tooltip-card-content\"></div>\n</div>\n",
                animations: [
                    trigger('tooltip', [
                        transition(':enter', [
                            style({ opacity: 0 }),
                            animate(200, style({ opacity: 1 }))
                        ]),
                        transition(':leave', [
                            animate(200, style({ opacity: 0 }))
                        ])
                    ])
                ]
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, { image: [{
            type: Input
        }], text: [{
            type: Input
        }], htmlContent: [{
            type: Input
        }], width: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC1jYXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvZGlyZWN0aXZlcy90b29sdGlwLWNhcmQvdG9vbHRpcC1jYXJkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQkEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCekQsTUFBTSxPQUFPLG9CQUFvQjtBQUNqQyxJQUtJLFlBQW9CLFNBQXVCO0FBQUksUUFBM0IsY0FBUyxHQUFULFNBQVMsQ0FBYztBQUFDLFFBTG5DLFVBQUssR0FBRyxFQUFFLENBQUM7QUFDeEIsUUFBYSxTQUFJLEdBQUcsRUFBRSxDQUFDO0FBQ3ZCLFFBQWEsZ0JBQVcsR0FBRyxFQUFFLENBQUM7QUFDOUIsUUFBYSxVQUFLLEdBQUcsS0FBSyxDQUFDO0FBQzNCLElBQ21ELENBQUM7QUFDcEQsSUFDSSxvQkFBb0I7QUFBSyxRQUNyQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQy9FLElBQUksQ0FBQztBQUNMO2dEQTNCQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLDRCQUE0QixrQkFDdEM7cVVBQTRDLGtCQUM1QyxVQUFVLEVBQUUsc0JBQ1IsT0FBTyxDQUFDLFNBQVMsRUFBRSwwQkFDZixVQUFVLENBQUMsUUFBUSxFQUFFLDhCQUNqQixLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsOEJBQ3JCLE9BQU8sQ0FBQyxHQUFHO0FBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdEMsQ0FBQywwQkFDRixVQUFVLENBQUMsUUFBUSxFQUFFLDhCQUNqQjtNQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLDBCQUV0QyxDQUFDO0VBQ0wsQ0FBQyxrQkFDTCxjQUNKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFDSTtBQUFDO0FBQ1UsWUFuQlAsWUFBWTtBQUFHO0FBQUc7QUFFbkIsb0JBaUJILEtBQUs7QUFBSyxtQkFDVixLQUFLO0FBQUssMEJBQ1YsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBTZWN1cml0eUNvbnRleHQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFuaW1hdGUsIHN0eWxlLCB0cmFuc2l0aW9uLCB0cmlnZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtdG9vbHRpcC1jYXJkLWNvbXBvbmVudCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Rvb2x0aXAtY2FyZC5jb21wb25lbnQuaHRtbCcsXG4gICAgYW5pbWF0aW9uczogW1xuICAgICAgICB0cmlnZ2VyKCd0b29sdGlwJywgW1xuICAgICAgICAgICAgdHJhbnNpdGlvbignOmVudGVyJywgW1xuICAgICAgICAgICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMCB9KSxcbiAgICAgICAgICAgICAgICBhbmltYXRlKDIwMCwgc3R5bGUoeyBvcGFjaXR5OiAxIH0pKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICB0cmFuc2l0aW9uKCc6bGVhdmUnLCBbXG4gICAgICAgICAgICAgICAgYW5pbWF0ZSgyMDAsIHN0eWxlKHsgb3BhY2l0eTogMCB9KSlcblxuICAgICAgICAgICAgXSlcbiAgICAgICAgXSlcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFRvb2x0aXBDYXJkQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKSBpbWFnZSA9ICcnO1xuICAgIEBJbnB1dCgpIHRleHQgPSAnJztcbiAgICBASW5wdXQoKSBodG1sQ29udGVudCA9ICcnO1xuICAgIEBJbnB1dCgpIHdpZHRoID0gJzMwMCc7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNhbml0aXplcjogRG9tU2FuaXRpemVyKSB7IH1cblxuICAgIHNhbml0aXplZEh0bWxDb250ZW50KCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLnNhbml0aXplci5zYW5pdGl6ZShTZWN1cml0eUNvbnRleHQuSFRNTCwgdGhpcy5odG1sQ29udGVudCk7XG4gICAgfVxufVxuIl19