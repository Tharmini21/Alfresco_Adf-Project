/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { PeopleProcessService } from '../../../../services/people-process.service';
import { Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { FormService } from '../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import { FormControl } from '@angular/forms';
import { of } from 'rxjs';
import { catchError, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../services/form.service';
import * as ɵngcc2 from '../../../../services/people-process.service';
import * as ɵngcc3 from '@angular/material/form-field';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/material/input';
import * as ɵngcc6 from '@angular/forms';
import * as ɵngcc7 from '@angular/material/autocomplete';
import * as ɵngcc8 from '@angular/material/tooltip';
import * as ɵngcc9 from '../error/error.component';
import * as ɵngcc10 from '@angular/material/core';
import * as ɵngcc11 from '@ngx-translate/core';
import * as ɵngcc12 from '../../../../pipes/user-initial.pipe';

const _c0 = ["inputValue"];
function PeopleWidgetComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function PeopleWidgetComponent_mat_option_10_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelement(1, "img", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    const i_r6 = ctx_r8.index;
    const user_r5 = ctx_r8.$implicit;
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-people-widget-pic-", i_r6, "");
    ɵngcc0.ɵɵproperty("alt", ctx_r7.getDisplayName(user_r5))("src", ctx_r7.peopleProcessService.getUserImage(user_r5), ɵngcc0.ɵɵsanitizeUrl);
} }
function PeopleWidgetComponent_mat_option_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 10);
    ɵngcc0.ɵɵelementStart(1, "div", 11);
    ɵngcc0.ɵɵelement(2, "div", 12);
    ɵngcc0.ɵɵpipe(3, "usernameInitials");
    ɵngcc0.ɵɵtemplate(4, PeopleWidgetComponent_mat_option_10_div_4_Template, 2, 3, "div", 13);
    ɵngcc0.ɵɵelementStart(5, "span", 14);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const user_r5 = ctx.$implicit;
    const i_r6 = ctx.index;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("value", user_r5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-people-widget-user-", i_r6, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("outerHTML", ɵngcc0.ɵɵpipeBind2(3, 5, user_r5, "adf-people-widget-pic"), ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", user_r5.pictureId);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.getDisplayName(user_r5));
} }
function PeopleWidgetComponent_error_widget_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 17);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
export class PeopleWidgetComponent extends WidgetComponent {
    constructor(formService, peopleProcessService) {
        super(formService);
        this.formService = formService;
        this.peopleProcessService = peopleProcessService;
        this.searchTerm = new FormControl();
        this.errorMsg = '';
        this.searchTerms$ = this.searchTerm.valueChanges;
        this.users$ = this.searchTerms$.pipe(tap(() => {
            this.errorMsg = '';
        }), distinctUntilChanged(), switchMap((searchTerm) => {
            const value = searchTerm.email ? this.getDisplayName(searchTerm) : searchTerm;
            return this.formService.getWorkflowUsers(value, this.groupId)
                .pipe(catchError((err) => {
                this.errorMsg = err.message;
                return of();
            }));
        }), map((list) => {
            const value = this.searchTerm.value.email ? this.getDisplayName(this.searchTerm.value) : this.searchTerm.value;
            this.checkUserAndValidateForm(list, value);
            return list;
        }));
        this.peopleSelected = new EventEmitter();
    }
    ngOnInit() {
        if (this.field) {
            if (this.field.value) {
                this.searchTerm.setValue(this.field.value);
            }
            if (this.field.readOnly) {
                this.searchTerm.disable();
            }
            const params = this.field.params;
            if (params && params.restrictWithGroup) {
                const restrictWithGroup = params.restrictWithGroup;
                this.groupId = restrictWithGroup.id;
            }
        }
    }
    checkUserAndValidateForm(list, value) {
        const isValidUser = this.isValidUser(list, value);
        if (isValidUser || value === '') {
            this.field.validationSummary.message = '';
            this.field.validate();
            this.field.form.validateForm();
        }
        else {
            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';
            this.field.markAsInvalid();
            this.field.form.markAsInvalid();
        }
    }
    isValidUser(users, name) {
        if (users) {
            return users.find((user) => {
                const selectedUser = this.getDisplayName(user).toLocaleLowerCase() === name.toLocaleLowerCase();
                if (selectedUser) {
                    this.peopleSelected.emit(user && user.id || undefined);
                }
                return selectedUser;
            }) ? true : false;
        }
        return false;
    }
    getDisplayName(model) {
        if (model) {
            const displayName = `${model.firstName || ''} ${model.lastName || ''}`;
            return displayName.trim();
        }
        return '';
    }
    onItemSelect(item) {
        if (item) {
            this.field.value = item;
        }
    }
}
PeopleWidgetComponent.ɵfac = function PeopleWidgetComponent_Factory(t) { return new (t || PeopleWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.PeopleProcessService)); };
PeopleWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PeopleWidgetComponent, selectors: [["people-widget"]], viewQuery: function PeopleWidgetComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
    } }, hostBindings: function PeopleWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function PeopleWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function PeopleWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function PeopleWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function PeopleWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function PeopleWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function PeopleWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function PeopleWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function PeopleWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function PeopleWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, outputs: { peopleSelected: "peopleSelected" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 23, consts: [["id", "people-widget-content"], [1, "adf-label"], [4, "ngIf"], ["matInput", "", "data-automation-id", "adf-people-search-input", "type", "text", "matTooltipPosition", "above", "matTooltipShowDelay", "1000", 1, "adf-input", 3, "id", "formControl", "placeholder", "matAutocomplete", "matTooltip"], ["inputValue", ""], [1, "adf-people-widget-list", 3, "displayWith", "optionSelected"], ["auto", "matAutocomplete"], [3, "value", 4, "ngFor", "ngForOf"], [3, "error"], [3, "required", 4, "ngIf"], [3, "value"], [1, "adf-people-widget-row", 3, "id"], [3, "outerHTML"], ["class", "adf-people-widget-image-row", 4, "ngIf"], [1, "adf-people-label-name"], [1, "adf-people-widget-image-row"], [1, "adf-people-widget-image", 3, "id", "alt", "src"], [3, "required"]], template: function PeopleWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-form-field");
        ɵngcc0.ɵɵelementStart(2, "label", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, PeopleWidgetComponent_span_5_Template, 2, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(6, "input", 3, 4);
        ɵngcc0.ɵɵelementStart(8, "mat-autocomplete", 5, 6);
        ɵngcc0.ɵɵlistener("optionSelected", function PeopleWidgetComponent_Template_mat_autocomplete_optionSelected_8_listener($event) { return ctx.onItemSelect($event.option.value); });
        ɵngcc0.ɵɵtemplate(10, PeopleWidgetComponent_mat_option_10_Template, 7, 8, "mat-option", 7);
        ɵngcc0.ɵɵpipe(11, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(12, "error-widget", 8);
        ɵngcc0.ɵɵtemplate(13, PeopleWidgetComponent_error_widget_13_Template, 2, 3, "error-widget", 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(9);
        ɵngcc0.ɵɵclassMapInterpolate1("adf-people-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 19, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.field.placeholder);
        ɵngcc0.ɵɵproperty("id", ctx.field.id)("formControl", ctx.searchTerm)("matAutocomplete", _r2)("matTooltip", ctx.field.tooltip);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("displayWith", ctx.getDisplayName);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(11, 21, ctx.users$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc3.MatFormField, ɵngcc4.NgIf, ɵngcc5.MatInput, ɵngcc6.DefaultValueAccessor, ɵngcc7.MatAutocompleteTrigger, ɵngcc6.NgControlStatus, ɵngcc6.FormControlDirective, ɵngcc8.MatTooltip, ɵngcc7.MatAutocomplete, ɵngcc4.NgForOf, ɵngcc9.ErrorWidgetComponent, ɵngcc10.MatOption], pipes: [ɵngcc11.TranslatePipe, ɵngcc4.AsyncPipe, ɵngcc12.InitialUsernamePipe], encapsulation: 2 });
PeopleWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: PeopleProcessService }
];
PeopleWidgetComponent.propDecorators = {
    input: [{ type: ViewChild, args: ['inputValue', { static: true },] }],
    peopleSelected: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PeopleWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'people-widget',
                template: "<div class=\"adf-people-widget {{field.className}}\"\n     [class.adf-invalid]=\"!field.isValid\"\n     [class.adf-readonly]=\"field.readOnly\"\n     id=\"people-widget-content\">\n    <mat-form-field>\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <input #inputValue\n               matInput\n               class=\"adf-input\"\n               data-automation-id=\"adf-people-search-input\"\n               type=\"text\"\n               [id]=\"field.id\"\n               [formControl]=\"searchTerm\"\n               placeholder=\"{{field.placeholder}}\"\n               [matAutocomplete]=\"auto\"\n               [matTooltip]=\"field.tooltip\"\n               matTooltipPosition=\"above\"\n               matTooltipShowDelay=\"1000\">\n        <mat-autocomplete class=\"adf-people-widget-list\"\n                          #auto=\"matAutocomplete\"\n                          (optionSelected)=\"onItemSelect($event.option.value)\"\n                          [displayWith]=\"getDisplayName\">\n            <mat-option *ngFor=\"let user of users$ | async; let i = index\" [value]=\"user\">\n                <div class=\"adf-people-widget-row\" id=\"adf-people-widget-user-{{i}}\">\n                    <div [outerHTML]=\"user | usernameInitials:'adf-people-widget-pic'\"></div>\n                    <div *ngIf=\"user.pictureId\" class=\"adf-people-widget-image-row\">\n                        <img id=\"adf-people-widget-pic-{{i}}\" class=\"adf-people-widget-image\"\n                             [alt]=\"getDisplayName(user)\" [src]=\"peopleProcessService.getUserImage(user)\"/>\n                    </div>\n                    <span class=\"adf-people-label-name\">{{getDisplayName(user)}}</span>\n                </div>\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc2.PeopleProcessService }]; }, { peopleSelected: [{
            type: Output
        }], input: [{
            type: ViewChild,
            args: ['inputValue', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,