/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation } from '@angular/core';
import { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';
import { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';
import { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';
import moment from 'moment-es6';
import { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';
import { MomentDateAdapter } from '../../../../utils/moment-date-adapter';
import { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';
import { FormService } from './../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../../../services/form.service';
import * as ɵngcc2 from '@angular/material/core';
import * as ɵngcc3 from '../../../../services/user-preferences.service';
import * as ɵngcc4 from '@angular/material/form-field';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '@angular/material/input';
import * as ɵngcc7 from '@mat-datetimepicker/core';
import * as ɵngcc8 from '@angular/forms';
import * as ɵngcc9 from '@angular/material/tooltip';
import * as ɵngcc10 from '../error/error.component';
import * as ɵngcc11 from '@ngx-translate/core';

function DateTimeWidgetComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function DateTimeWidgetComponent_error_widget_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 10);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
const ɵ0 = MOMENT_DATE_FORMATS, ɵ1 = MAT_MOMENT_DATETIME_FORMATS;
export class DateTimeWidgetComponent extends WidgetComponent {
    constructor(formService, dateAdapter, userPreferencesService) {
        super(formService);
        this.formService = formService;
        this.dateAdapter = dateAdapter;
        this.userPreferencesService = userPreferencesService;
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        this.userPreferencesService
            .select(UserPreferenceValues.Locale)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(locale => this.dateAdapter.setLocale(locale));
        const momentDateAdapter = this.dateAdapter;
        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;
        if (this.field) {
            if (this.field.minValue) {
                this.minDate = moment(this.field.minValue, 'YYYY-MM-DDTHH:mm:ssZ');
            }
            if (this.field.maxValue) {
                this.maxDate = moment(this.field.maxValue, 'YYYY-MM-DDTHH:mm:ssZ');
            }
        }
        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat)
            .add(moment(this.field.value, this.field.dateDisplayFormat).utcOffset(), 'minutes');
    }
    ngOnChanges(changes) {
        if (changes && changes.field && !changes.field.firstChange && changes.field.currentValue.value !== changes.field.previousValue.value) {
            this.displayDate = moment(changes.field.currentValue.value, this.field.dateDisplayFormat)
                .add(moment(changes.field.currentValue.value, this.field.dateDisplayFormat).utcOffset(), 'minutes');
        }
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    onDateChanged(newDateValue) {
        if (newDateValue && newDateValue.value) {
            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);
        }
        else if (newDateValue) {
            this.field.value = newDateValue;
        }
        else {
            this.field.value = null;
        }
        this.onFieldChanged(this.field);
    }
}
DateTimeWidgetComponent.ɵfac = function DateTimeWidgetComponent_Factory(t) { return new (t || DateTimeWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserPreferencesService)); };
DateTimeWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DateTimeWidgetComponent, selectors: [["date-time-widget"]], features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: DateAdapter, useClass: MomentDateAdapter },
            { provide: MAT_DATE_FORMATS, useValue: ɵ0 },
            { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },
            { provide: MAT_DATETIME_FORMATS, useValue: ɵ1 }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 12, vars: 26, consts: [["id", "data-time-widget"], [1, "adf-date-time-widget"], [1, "adf-label"], [4, "ngIf"], ["matInput", "", "matTooltipPosition", "above", "matTooltipShowDelay", "1000", 3, "matDatetimepicker", "id", "ngModel", "required", "disabled", "min", "max", "placeholder", "matTooltip", "ngModelChange", "focusout", "dateChange"], ["matSuffix", "", 3, "for", "disabled"], [3, "error"], [3, "required", 4, "ngIf"], ["type", "datetime", 3, "openOnFocus", "timeInterval"], ["datetimePicker", ""], [3, "required"]], template: function DateTimeWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-form-field", 1);
        ɵngcc0.ɵɵelementStart(2, "label", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, DateTimeWidgetComponent_span_5_Template, 2, 0, "span", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "input", 4);
        ɵngcc0.ɵɵlistener("ngModelChange", function DateTimeWidgetComponent_Template_input_ngModelChange_6_listener($event) { return ctx.displayDate = $event; })("focusout", function DateTimeWidgetComponent_Template_input_focusout_6_listener($event) { return ctx.onDateChanged($event.srcElement.value); })("dateChange", function DateTimeWidgetComponent_Template_input_dateChange_6_listener($event) { return ctx.onDateChanged($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "mat-datetimepicker-toggle", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(8, "error-widget", 6);
        ɵngcc0.ɵɵtemplate(9, DateTimeWidgetComponent_error_widget_9_Template, 2, 3, "error-widget", 7);
        ɵngcc0.ɵɵelement(10, "mat-datetimepicker", 8, 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(11);
        ɵngcc0.ɵɵclassMap(ctx.field.className);
        ɵngcc0.ɵɵclassProp("adf-invalid", !ctx.field.isValid);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate2("", ɵngcc0.ɵɵpipeBind1(4, 24, ctx.field.name), " (", ctx.field.dateDisplayFormat, ")");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("matDatetimepicker", _r2)("id", ctx.field.id)("ngModel", ctx.displayDate)("required", ctx.isRequired())("disabled", ctx.field.readOnly)("min", ctx.minDate)("max", ctx.maxDate)("placeholder", ctx.field.placeholder)("matTooltip", ctx.field.tooltip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("for", _r2)("disabled", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("openOnFocus", true)("timeInterval", 5);
    } }, directives: [ɵngcc4.MatFormField, ɵngcc5.NgIf, ɵngcc6.MatInput, ɵngcc7.MatDatetimepickerInput, ɵngcc8.DefaultValueAccessor, ɵngcc8.NgControlStatus, ɵngcc8.NgModel, ɵngcc8.RequiredValidator, ɵngcc9.MatTooltip, ɵngcc7.MatDatetimepickerToggle, ɵngcc4.MatSuffix, ɵngcc10.ErrorWidgetComponent, ɵngcc7.MatDatetimepicker], pipes: [ɵngcc11.TranslatePipe], styles: [".adf-date-time-widget .mat-form-field-suffix{top:26px}.adf-date-time-widget .mat-form-field-label-wrapper{top:20px}"], encapsulation: 2 });
DateTimeWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: DateAdapter },
    { type: UserPreferencesService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateTimeWidgetComponent, [{
        type: Component,
        args: [{
                providers: [
                    { provide: DateAdapter, useClass: MomentDateAdapter },
                    { provide: MAT_DATE_FORMATS, useValue: ɵ0 },
                    { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },
                    { provide: MAT_DATETIME_FORMATS, useValue: ɵ1 }
                ],
                selector: 'date-time-widget',
                template: "<div class=\"{{field.className}}\" id=\"data-time-widget\" [class.adf-invalid]=\"!field.isValid\">\n    <mat-form-field class=\"adf-date-time-widget\">\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }} ({{field.dateDisplayFormat}})<span *ngIf=\"isRequired()\">*</span></label>\n        <input matInput\n               [matDatetimepicker]=\"datetimePicker\"\n               [id]=\"field.id\"\n               [(ngModel)]=\"displayDate\"\n               [required]=\"isRequired()\"\n               [disabled]=\"field.readOnly\"\n               [min]=\"minDate\"\n               [max]=\"maxDate\"\n               (focusout)=\"onDateChanged($any($event).srcElement.value)\"\n               (dateChange)=\"onDateChanged($event)\"\n               [placeholder]=\"field.placeholder\"\n               [matTooltip]=\"field.tooltip\"\n               matTooltipPosition=\"above\"\n               matTooltipShowDelay=\"1000\">\n        <mat-datetimepicker-toggle matSuffix [for]=\"datetimePicker\" [disabled]=\"field.readOnly\"></mat-datetimepicker-toggle>\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n    <mat-datetimepicker #datetimePicker type=\"datetime\" [openOnFocus]=\"true\" [timeInterval]=\"5\"></mat-datetimepicker>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-date-time-widget .mat-form-field-suffix{top:26px}.adf-date-time-widget .mat-form-field-label-wrapper{top:20px}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc2.DateAdapter }, { type: ɵngcc3.UserPreferencesService }]; }, null); })();
export { ɵ0, ɵ1 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,