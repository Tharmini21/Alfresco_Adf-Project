/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ENTER, ESCAPE } from '@angular/cdk/keycodes';
import { Component, ElementRef, ViewEncapsulation } from '@angular/core';
import { FormService } from '../../../services/form.service';
import { WidgetComponent } from './../widget.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../services/form.service';
import * as ɵngcc2 from '@angular/material/form-field';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/input';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '@angular/material/autocomplete';
import * as ɵngcc7 from '../error/error.component';
import * as ɵngcc8 from '@angular/material/core';
import * as ɵngcc9 from '@ngx-translate/core';

function FunctionalGroupWidgetComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FunctionalGroupWidgetComponent_mat_option_9_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-option", 9);
    ɵngcc0.ɵɵlistener("click", function FunctionalGroupWidgetComponent_mat_option_9_Template_mat_option_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const item_r4 = ctx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onItemClick(item_r4, $event); });
    ɵngcc0.ɵɵelementStart(1, "span", 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r4 = ctx.$implicit;
    const i_r5 = ctx.index;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate1("id", "adf-group-widget-user-", i_r5, "");
    ɵngcc0.ɵɵproperty("id", ctx_r2.field.id + "-" + item_r4.id)("value", item_r4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r4.name);
} }
function FunctionalGroupWidgetComponent_error_widget_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "error-widget", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("required", ɵngcc0.ɵɵpipeBind1(1, 1, "FORM.FIELD.REQUIRED"));
} }
export class FunctionalGroupWidgetComponent extends WidgetComponent {
    constructor(formService, elementRef) {
        super(formService);
        this.formService = formService;
        this.elementRef = elementRef;
        this.groups = [];
        this.minTermLength = 1;
    }
    ngOnInit() {
        if (this.field) {
            const group = this.field.value;
            if (group) {
                this.value = group.name;
            }
            const params = this.field.params;
            if (params && params['restrictWithGroup']) {
                const restrictWithGroup = params['restrictWithGroup'];
                this.groupId = restrictWithGroup.id;
            }
            if (this.value) {
                this.formService
                    .getWorkflowGroups(this.value, this.groupId)
                    .subscribe(groups => this.groups = groups || []);
            }
        }
    }
    onKeyUp(event) {
        if (this.value && this.value.length >= this.minTermLength && this.oldValue !== this.value) {
            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {
                this.oldValue = this.value;
                this.formService
                    .getWorkflowGroups(this.value, this.groupId)
                    .subscribe(groups => this.groups = groups || []);
            }
        }
    }
    flushValue() {
        const option = this.groups.find((item) => item.name.toLocaleLowerCase() === this.value.toLocaleLowerCase());
        if (option) {
            this.field.value = option;
            this.value = option.name;
        }
        else {
            this.field.value = null;
            this.value = null;
        }
        this.field.updateForm();
    }
    onItemClick(item, event) {
        if (item) {
            this.field.value = item;
            this.value = item.name;
        }
        if (event) {
            event.preventDefault();
        }
    }
    onItemSelect(item) {
        if (item) {
            this.field.value = item;
            this.value = item.name;
        }
    }
}
FunctionalGroupWidgetComponent.ɵfac = function FunctionalGroupWidgetComponent_Factory(t) { return new (t || FunctionalGroupWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FunctionalGroupWidgetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FunctionalGroupWidgetComponent, selectors: [["functional-group-widget"]], hostBindings: function FunctionalGroupWidgetComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function FunctionalGroupWidgetComponent_click_HostBindingHandler($event) { return ctx.event($event); })("blur", function FunctionalGroupWidgetComponent_blur_HostBindingHandler($event) { return ctx.event($event); })("change", function FunctionalGroupWidgetComponent_change_HostBindingHandler($event) { return ctx.event($event); })("focus", function FunctionalGroupWidgetComponent_focus_HostBindingHandler($event) { return ctx.event($event); })("focusin", function FunctionalGroupWidgetComponent_focusin_HostBindingHandler($event) { return ctx.event($event); })("focusout", function FunctionalGroupWidgetComponent_focusout_HostBindingHandler($event) { return ctx.event($event); })("input", function FunctionalGroupWidgetComponent_input_HostBindingHandler($event) { return ctx.event($event); })("invalid", function FunctionalGroupWidgetComponent_invalid_HostBindingHandler($event) { return ctx.event($event); })("select", function FunctionalGroupWidgetComponent_select_HostBindingHandler($event) { return ctx.event($event); });
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 12, vars: 22, consts: [["id", "functional-group-div"], [1, "adf-label"], [4, "ngIf"], ["matInput", "", "type", "text", "data-automation-id", "adf-group-search-input", 1, "adf-input", 3, "id", "ngModel", "disabled", "placeholder", "matAutocomplete", "ngModelChange", "keyup"], [3, "optionSelected"], ["auto", "matAutocomplete"], [3, "id", "value", "click", 4, "ngFor", "ngForOf"], [3, "error"], [3, "required", 4, "ngIf"], [3, "id", "value", "click"], ["id", "adf-group-label-name"], [3, "required"]], template: function FunctionalGroupWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-form-field");
        ɵngcc0.ɵɵelementStart(2, "label", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, FunctionalGroupWidgetComponent_span_5_Template, 2, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "input", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function FunctionalGroupWidgetComponent_Template_input_ngModelChange_6_listener($event) { return ctx.value = $event; })("keyup", function FunctionalGroupWidgetComponent_Template_input_keyup_6_listener($event) { return ctx.onKeyUp($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "mat-autocomplete", 4, 5);
        ɵngcc0.ɵɵlistener("optionSelected", function FunctionalGroupWidgetComponent_Template_mat_autocomplete_optionSelected_7_listener($event) { return ctx.onItemSelect($event.option.value); });
        ɵngcc0.ɵɵtemplate(9, FunctionalGroupWidgetComponent_mat_option_9_Template, 3, 4, "mat-option", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(10, "error-widget", 7);
        ɵngcc0.ɵɵtemplate(11, FunctionalGroupWidgetComponent_error_widget_11_Template, 2, 3, "error-widget", 8);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵclassMapInterpolate1("adf-group-widget ", ctx.field.className, "");
        ɵngcc0.ɵɵclassProp("is-dirty", ctx.value)("adf-invalid", !ctx.field.isValid)("adf-readonly", ctx.field.readOnly);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("for", ctx.field.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 20, ctx.field.name));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRequired());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.field.placeholder);
        ɵngcc0.ɵɵproperty("id", ctx.field.id)("ngModel", ctx.value)("disabled", ctx.field.readOnly)("matAutocomplete", _r1);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.groups);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.field.validationSummary);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isInvalidFieldRequired());
    } }, directives: [ɵngcc2.MatFormField, ɵngcc3.NgIf, ɵngcc4.MatInput, ɵngcc5.DefaultValueAccessor, ɵngcc6.MatAutocompleteTrigger, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc6.MatAutocomplete, ɵngcc3.NgForOf, ɵngcc7.ErrorWidgetComponent, ɵngcc8.MatOption], pipes: [ɵngcc9.TranslatePipe], styles: [".adf-group-widget{width:100%}"], encapsulation: 2 });
FunctionalGroupWidgetComponent.ctorParameters = () => [
    { type: FormService },
    { type: ElementRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FunctionalGroupWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'functional-group-widget',
                template: "<div class=\"adf-group-widget {{field.className}}\"\n     [class.is-dirty]=\"value\"\n     [class.adf-invalid]=\"!field.isValid\" [class.adf-readonly]=\"field.readOnly\" id=\"functional-group-div\">\n    <mat-form-field>\n        <label class=\"adf-label\" [attr.for]=\"field.id\">{{field.name | translate }}<span *ngIf=\"isRequired()\">*</span></label>\n        <input matInput\n               class=\"adf-input\"\n               type=\"text\"\n               data-automation-id=\"adf-group-search-input\"\n               [id]=\"field.id\"\n               [(ngModel)]=\"value\"\n               (keyup)=\"onKeyUp($event)\"\n               [disabled]=\"field.readOnly\"\n               placeholder=\"{{field.placeholder}}\"\n               [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onItemSelect($event.option.value)\">\n            <mat-option *ngFor=\"let item of groups; let i = index\" id=\"adf-group-widget-user-{{i}}\"\n                       [id]=\"field.id +'-'+item.id\"\n                       (click)=\"onItemClick(item, $event)\"  [value]=\"item\">\n                <span id=\"adf-group-label-name\">{{item.name}}</span>\n            </mat-option>\n        </mat-autocomplete>\n\n    </mat-form-field>\n    <error-widget [error]=\"field.validationSummary\"></error-widget>\n    <error-widget *ngIf=\"isInvalidFieldRequired()\" required=\"{{ 'FORM.FIELD.REQUIRED' | translate }}\"></error-widget>\n</div>\n",
                host: {
                    '(click)': 'event($event)',
                    '(blur)': 'event($event)',
                    '(change)': 'event($event)',
                    '(focus)': 'event($event)',
                    '(focusin)': 'event($event)',
                    '(focusout)': 'event($event)',
                    '(input)': 'event($event)',
                    '(invalid)': 'event($event)',
                    '(select)': 'event($event)'
                },
                encapsulation: ViewEncapsulation.None,
                styles: [".adf-group-widget{width:100%}"]
            }]
    }], function () { return [{ type: ɵngcc1.FormService }, { type: ɵngcc0.ElementRef }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,