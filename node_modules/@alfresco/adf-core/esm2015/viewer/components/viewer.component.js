/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { __awaiter } from "tslib";
import { Component, ContentChild, EventEmitter, HostListener, ElementRef, Input, Output, TemplateRef, ViewEncapsulation } from '@angular/core';
import { BaseEvent } from '../../events';
import { AlfrescoApiService } from '../../services/alfresco-api.service';
import { LogService } from '../../services/log.service';
import { ViewerMoreActionsComponent } from './viewer-more-actions.component';
import { ViewerOpenWithComponent } from './viewer-open-with.component';
import { ViewerSidebarComponent } from './viewer-sidebar.component';
import { ViewerToolbarComponent } from './viewer-toolbar.component';
import { fromEvent, Subject } from 'rxjs';
import { ViewUtilService } from '../services/view-util.service';
import { AppExtensionService } from '@alfresco/adf-extensions';
import { filter, skipWhile, takeUntil } from 'rxjs/operators';
import { MatDialog } from '@angular/material/dialog';
import { ContentService } from '../../services/content.service';
import { UploadService } from '../../services/upload.service';
import { FileModel } from '../../models';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/alfresco-api.service';
import * as ɵngcc2 from '../services/view-util.service';
import * as ɵngcc3 from '../../services/log.service';
import * as ɵngcc4 from '@alfresco/adf-extensions';
import * as ɵngcc5 from '../../services/content.service';
import * as ɵngcc6 from '../../services/upload.service';
import * as ɵngcc7 from '@angular/material/dialog';
import * as ɵngcc8 from '@angular/common';
import * as ɵngcc9 from '@angular/flex-layout/flex';
import * as ɵngcc10 from '@angular/cdk/a11y';
import * as ɵngcc11 from '../../toolbar/toolbar.component';
import * as ɵngcc12 from '../../toolbar/toolbar-title.component';
import * as ɵngcc13 from '../../toolbar/toolbar-divider.component';
import * as ɵngcc14 from '@angular/material/button';
import * as ɵngcc15 from '@angular/material/icon';
import * as ɵngcc16 from '@angular/material/menu';
import * as ɵngcc17 from '../../directives/node-download.directive';
import * as ɵngcc18 from '@angular/flex-layout/extended';
import * as ɵngcc19 from '@angular/material/progress-spinner';
import * as ɵngcc20 from './pdf-viewer.component';
import * as ɵngcc21 from './img-viewer.component';
import * as ɵngcc22 from './media-player.component';
import * as ɵngcc23 from './txt-viewer.component';
import * as ɵngcc24 from './unknown-format/unknown-format.component';
import * as ɵngcc25 from '../../pipes/mime-type-icon.pipe';
import * as ɵngcc26 from '@ngx-translate/core';

function ViewerComponent_div_0_ng_container_3_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 17);
    ɵngcc0.ɵɵlistener("click", function ViewerComponent_div_0_ng_container_3_ng_container_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(3); return ctx_r16.toggleLeftSidebar(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "mat-icon");
    ɵngcc0.ɵɵtext(5, "info_outline");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 6, "ADF_VIEWER.ACTIONS.INFO"));
    ɵngcc0.ɵɵproperty("color", ctx_r6.showLeftSidebar ? "accent" : null);
    ɵngcc0.ɵɵattribute("aria-expanded", ctx_r6.showLeftSidebar)("aria-label", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ACTIONS.INFO"));
} }
function ViewerComponent_div_0_ng_container_3_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵlistener("click", function ViewerComponent_div_0_ng_container_3_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(3); return ctx_r18.onBackButtonClick(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ACTIONS.CLOSE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_VIEWER.ACTIONS.CLOSE"));
} }
function ViewerComponent_div_0_ng_container_3_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function ViewerComponent_div_0_ng_container_3_button_6_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(3); return ctx_r20.onNavigateBeforeClick($event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "navigate_before");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ACTIONS.PREV_FILE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_VIEWER.ACTIONS.PREV_FILE"));
} }
function ViewerComponent_div_0_ng_container_3_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 20);
    ɵngcc0.ɵɵlistener("click", function ViewerComponent_div_0_ng_container_3_button_11_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(3); return ctx_r22.onNavigateNextClick($event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "navigate_next");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ACTIONS.NEXT_FILE"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_VIEWER.ACTIONS.NEXT_FILE"));
} }
function ViewerComponent_div_0_ng_container_3_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 21);
    ɵngcc0.ɵɵelementStart(1, "button", 22);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "mat-icon");
    ɵngcc0.ɵɵtext(6, "arrow_drop_down");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "mat-menu", 23, 24);
    ɵngcc0.ɵɵprojection(9, 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r24 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r24);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 3, "ADF_VIEWER.ACTIONS.OPEN_WITH"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("overlapTrigger", false);
} }
function ViewerComponent_div_0_ng_container_3_button_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 25);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "file_download");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 6, "ADF_VIEWER.ACTIONS.DOWNLOAD"));
    ɵngcc0.ɵɵproperty("adfNodeDownload", ctx_r11.nodeEntry)("version", ctx_r11.versionEntry);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 4, "ADF_VIEWER.ACTIONS.DOWNLOAD"));
} }
function ViewerComponent_div_0_ng_container_3_button_16_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 26);
    ɵngcc0.ɵɵlistener("click", function ViewerComponent_div_0_ng_container_3_button_16_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(3); return ctx_r25.printContent(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "print");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ACTIONS.PRINT"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_VIEWER.ACTIONS.PRINT"));
} }
function ViewerComponent_div_0_ng_container_3_button_17_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 27);
    ɵngcc0.ɵɵlistener("click", function ViewerComponent_div_0_ng_container_3_button_17_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(3); return ctx_r27.enterFullScreen(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "fullscreen");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ACTIONS.FULLSCREEN"));
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "ADF_VIEWER.ACTIONS.FULLSCREEN"));
} }
function ViewerComponent_div_0_ng_container_3_ng_container_18_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "adf-toolbar-divider");
    ɵngcc0.ɵɵelementStart(2, "button", 28);
    ɵngcc0.ɵɵlistener("click", function ViewerComponent_div_0_ng_container_3_ng_container_18_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(3); return ctx_r29.toggleSidebar(); });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementStart(5, "mat-icon");
    ɵngcc0.ɵɵtext(6, "info_outline");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 6, "ADF_VIEWER.ACTIONS.INFO"));
    ɵngcc0.ɵɵproperty("color", ctx_r14.showRightSidebar ? "accent" : null);
    ɵngcc0.ɵɵattribute("aria-expanded", ctx_r14.showRightSidebar)("aria-label", ɵngcc0.ɵɵpipeBind1(3, 4, "ADF_VIEWER.ACTIONS.INFO"));
} }
function ViewerComponent_div_0_ng_container_3_ng_container_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 29);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "mat-icon");
    ɵngcc0.ɵɵtext(5, "more_vert");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "mat-menu", 23, 30);
    ɵngcc0.ɵɵprojection(8, 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r31 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 6, "ADF_VIEWER.ACTIONS.MORE_ACTIONS"));
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r31);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(2, 4, "ADF_VIEWER.ACTIONS.MORE_ACTIONS"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("overlapTrigger", false);
} }
function ViewerComponent_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "adf-toolbar", 6);
    ɵngcc0.ɵɵelementStart(2, "adf-toolbar-title");
    ɵngcc0.ɵɵtemplate(3, ViewerComponent_div_0_ng_container_3_ng_container_3_Template, 6, 8, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(4, ViewerComponent_div_0_ng_container_3_button_4_Template, 5, 6, "button", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 8);
    ɵngcc0.ɵɵtemplate(6, ViewerComponent_div_0_ng_container_3_button_6_Template, 5, 6, "button", 9);
    ɵngcc0.ɵɵelement(7, "img", 10);
    ɵngcc0.ɵɵpipe(8, "adfMimeTypeIcon");
    ɵngcc0.ɵɵelementStart(9, "span", 11);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(11, ViewerComponent_div_0_ng_container_3_button_11_Template, 5, 6, "button", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(12, 1);
    ɵngcc0.ɵɵtemplate(13, ViewerComponent_div_0_ng_container_3_ng_container_13_Template, 10, 5, "ng-container", 13);
    ɵngcc0.ɵɵelement(14, "adf-toolbar-divider");
    ɵngcc0.ɵɵtemplate(15, ViewerComponent_div_0_ng_container_3_button_15_Template, 5, 8, "button", 14);
    ɵngcc0.ɵɵtemplate(16, ViewerComponent_div_0_ng_container_3_button_16_Template, 5, 6, "button", 15);
    ɵngcc0.ɵɵtemplate(17, ViewerComponent_div_0_ng_container_3_button_17_Template, 5, 6, "button", 16);
    ɵngcc0.ɵɵtemplate(18, ViewerComponent_div_0_ng_container_3_ng_container_18_Template, 7, 8, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(19, ViewerComponent_div_0_ng_container_3_ng_container_19_Template, 9, 8, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.allowLeftSidebar);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.allowGoBack);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.allowNavigate && ctx_r1.canNavigateBefore);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("alt", ctx_r1.mimeType)("src", ɵngcc0.ɵɵpipeBind1(8, 13, ctx_r1.mimeType), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.fileTitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.allowNavigate && ctx_r1.canNavigateNext);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.mnuOpenWith);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.allowDownload);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.allowPrint);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.viewerType !== "media" && ctx_r1.allowFullScreen);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.allowRightSidebar);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.mnuMoreActions);
} }
function ViewerComponent_div_0_ng_container_5_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ViewerComponent_div_0_ng_container_5_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ViewerComponent_div_0_ng_container_5_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 32);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r32.sidebarRightTemplate)("ngTemplateOutletContext", ctx_r32.sidebarRightTemplateContext);
} }
function ViewerComponent_div_0_ng_container_5_ng_content_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 4, ["*ngIf", "!sidebarRightTemplate"]);
} }
function ViewerComponent_div_0_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 31);
    ɵngcc0.ɵɵtemplate(2, ViewerComponent_div_0_ng_container_5_ng_container_2_Template, 2, 2, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(3, ViewerComponent_div_0_ng_container_5_ng_content_3_Template, 1, 0, "ng-content", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", "adf-viewer__sidebar__right");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.sidebarRightTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.sidebarRightTemplate);
} }
function ViewerComponent_div_0_ng_container_6_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ViewerComponent_div_0_ng_container_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ViewerComponent_div_0_ng_container_6_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 32);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r35 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r35.sidebarLeftTemplate)("ngTemplateOutletContext", ctx_r35.sidebarLeftTemplateContext);
} }
function ViewerComponent_div_0_ng_container_6_ng_content_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 5, ["*ngIf", "!sidebarLeftTemplate"]);
} }
function ViewerComponent_div_0_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 33);
    ɵngcc0.ɵɵtemplate(2, ViewerComponent_div_0_ng_container_6_ng_container_2_Template, 2, 2, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(3, ViewerComponent_div_0_ng_container_6_ng_content_3_Template, 1, 0, "ng-content", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", "adf-viewer__sidebar__left");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.sidebarLeftTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.sidebarLeftTemplate);
} }
function ViewerComponent_div_0_div_7_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 37);
    ɵngcc0.ɵɵelementStart(2, "h2");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div");
    ɵngcc0.ɵɵelement(6, "mat-spinner");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 1, "ADF_VIEWER.LOADING"));
} }
function ViewerComponent_div_0_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 34);
    ɵngcc0.ɵɵelementStart(1, "div", 35);
    ɵngcc0.ɵɵelementStart(2, "div", 36);
    ɵngcc0.ɵɵtemplate(3, ViewerComponent_div_0_div_7_ng_container_3_Template, 7, 3, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.isLoading);
} }
function ViewerComponent_div_0_div_8_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r47 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "adf-pdf-viewer", 41);
    ɵngcc0.ɵɵlistener("close", function ViewerComponent_div_0_div_8_ng_container_3_Template_adf_pdf_viewer_close_1_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r46 = ɵngcc0.ɵɵnextContext(3); return ctx_r46.onBackButtonClick(); })("error", function ViewerComponent_div_0_div_8_ng_container_3_Template_adf_pdf_viewer_error_1_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r48 = ɵngcc0.ɵɵnextContext(3); return ctx_r48.onUnsupportedFile(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r39 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("thumbnailsTemplate", ctx_r39.thumbnailsTemplate)("allowThumbnails", ctx_r39.allowThumbnails)("blobFile", ctx_r39.blobFile)("urlFile", ctx_r39.urlFileContent)("nameFile", ctx_r39.displayName)("cacheType", ctx_r39.cacheTypeForContent);
} }
function ViewerComponent_div_0_div_8_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r50 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "adf-img-viewer", 42);
    ɵngcc0.ɵɵlistener("error", function ViewerComponent_div_0_div_8_ng_container_4_Template_adf_img_viewer_error_1_listener() { ɵngcc0.ɵɵrestoreView(_r50); const ctx_r49 = ɵngcc0.ɵɵnextContext(3); return ctx_r49.onUnsupportedFile(); })("submit", function ViewerComponent_div_0_div_8_ng_container_4_Template_adf_img_viewer_submit_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r50); const ctx_r51 = ɵngcc0.ɵɵnextContext(3); return ctx_r51.onSubmitFile($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r40 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("urlFile", ctx_r40.urlFileContent)("nameFile", ctx_r40.displayName)("blobFile", ctx_r40.blobFile)("readOnly", ctx_r40.readOnly);
} }
function ViewerComponent_div_0_div_8_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    const _r53 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "adf-media-player", 43);
    ɵngcc0.ɵɵlistener("error", function ViewerComponent_div_0_div_8_ng_container_5_Template_adf_media_player_error_1_listener() { ɵngcc0.ɵɵrestoreView(_r53); const ctx_r52 = ɵngcc0.ɵɵnextContext(3); return ctx_r52.onUnsupportedFile(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r41 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("urlFile", ctx_r41.urlFileContent)("nodeId", ctx_r41.nodeEntry == null ? null : ctx_r41.nodeEntry.entry == null ? null : ctx_r41.nodeEntry.entry.id)("mimeType", ctx_r41.mimeType)("blobFile", ctx_r41.blobFile)("nameFile", ctx_r41.displayName);
} }
function ViewerComponent_div_0_div_8_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "adf-txt-viewer", 44);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r42 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("urlFile", ctx_r42.urlFileContent)("blobFile", ctx_r42.blobFile);
} }
function ViewerComponent_div_0_div_8_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 37);
    ɵngcc0.ɵɵelementStart(2, "h2");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div");
    ɵngcc0.ɵɵelement(6, "mat-spinner");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 1, "ADF_VIEWER.LOADING"));
} }
function ViewerComponent_div_0_div_8_ng_container_8_ng_container_1_adf_preview_extension_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "adf-preview-extension", 48);
} if (rf & 2) {
    const ext_r56 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r57 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("id", ext_r56.component)("node", ctx_r57.nodeEntry.entry)("url", ctx_r57.urlFileContent)("extension", ctx_r57.extension);
    ɵngcc0.ɵɵattribute("data-automation-id", ext_r56.component);
} }
function ViewerComponent_div_0_div_8_ng_container_8_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ViewerComponent_div_0_div_8_ng_container_8_ng_container_1_adf_preview_extension_1_Template, 1, 5, "adf-preview-extension", 47);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ext_r56 = ctx.$implicit;
    const ctx_r54 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r54.checkExtensions(ext_r56.fileExtension));
} }
function ViewerComponent_div_0_div_8_ng_container_8_span_2_1_ng_template_0_Template(rf, ctx) { }
const _c0 = function (a0, a1) { return { urlFileContent: a0, extension: a1 }; };
function ViewerComponent_div_0_div_8_ng_container_8_span_2_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ViewerComponent_div_0_div_8_ng_container_8_span_2_1_ng_template_0_Template, 0, 0, "ng-template", 50);
} if (rf & 2) {
    const extensionTemplate_r59 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r60 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", extensionTemplate_r59.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx_r60.urlFileContent, ctx_r60.extension));
} }
function ViewerComponent_div_0_div_8_ng_container_8_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 49);
    ɵngcc0.ɵɵtemplate(1, ViewerComponent_div_0_div_8_ng_container_8_span_2_1_Template, 1, 5, undefined, 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const extensionTemplate_r59 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", extensionTemplate_r59.isVisible);
} }
function ViewerComponent_div_0_div_8_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ViewerComponent_div_0_div_8_ng_container_8_ng_container_1_Template, 2, 1, "ng-container", 45);
    ɵngcc0.ɵɵtemplate(2, ViewerComponent_div_0_div_8_ng_container_8_span_2_Template, 2, 1, "span", 46);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r44 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r44.viewerExtensions);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r44.extensionTemplates);
} }
function ViewerComponent_div_0_div_8_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "adf-viewer-unknown-format");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ViewerComponent_div_0_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 34);
    ɵngcc0.ɵɵelementStart(1, "div", 35);
    ɵngcc0.ɵɵelementStart(2, "div", 38);
    ɵngcc0.ɵɵtemplate(3, ViewerComponent_div_0_div_8_ng_container_3_Template, 2, 6, "ng-container", 39);
    ɵngcc0.ɵɵtemplate(4, ViewerComponent_div_0_div_8_ng_container_4_Template, 2, 4, "ng-container", 39);
    ɵngcc0.ɵɵtemplate(5, ViewerComponent_div_0_div_8_ng_container_5_Template, 2, 5, "ng-container", 39);
    ɵngcc0.ɵɵtemplate(6, ViewerComponent_div_0_div_8_ng_container_6_Template, 2, 2, "ng-container", 39);
    ɵngcc0.ɵɵtemplate(7, ViewerComponent_div_0_div_8_ng_container_7_Template, 7, 3, "ng-container", 39);
    ɵngcc0.ɵɵtemplate(8, ViewerComponent_div_0_div_8_ng_container_8_Template, 3, 2, "ng-container", 39);
    ɵngcc0.ɵɵtemplate(9, ViewerComponent_div_0_div_8_ng_container_9_Template, 2, 0, "ng-container", 40);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r5.viewerType);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "pdf");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "image");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "media");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "text");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "in_creation");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "custom");
} }
function ViewerComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵtemplate(3, ViewerComponent_div_0_ng_container_3_Template, 20, 15, "ng-container", 3);
    ɵngcc0.ɵɵelementStart(4, "div", 4);
    ɵngcc0.ɵɵtemplate(5, ViewerComponent_div_0_ng_container_5_Template, 4, 3, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(6, ViewerComponent_div_0_ng_container_6_Template, 4, 3, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(7, ViewerComponent_div_0_div_7_Template, 4, 1, "div", 5);
    ɵngcc0.ɵɵtemplate(8, ViewerComponent_div_0_div_8_Template, 10, 7, "div", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("adf-viewer-overlay-container", ctx_r0.overlayMode)("adf-viewer-inline-container", !ctx_r0.overlayMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkTrapFocus", ctx_r0.overlayMode);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showToolbar && !ctx_r0.toolbar);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.allowRightSidebar && ctx_r0.showRightSidebar);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.allowLeftSidebar && ctx_r0.showLeftSidebar);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isLoading);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.isLoading);
} }
const _c1 = [[["adf-viewer-toolbar"]], [["adf-viewer-toolbar-actions"]], [["adf-viewer-open-with"]], [["adf-viewer-more-actions"]], [["adf-viewer-sidebar"]], [["adf-viewer-sidebar"]]];
const _c2 = ["adf-viewer-toolbar", "adf-viewer-toolbar-actions", "adf-viewer-open-with", "adf-viewer-more-actions", "adf-viewer-sidebar", "adf-viewer-sidebar"];
export class ViewerComponent {
    constructor(apiService, viewUtilService, logService, extensionService, contentService, uploadService, el, dialog) {
        this.apiService = apiService;
        this.viewUtilService = viewUtilService;
        this.logService = logService;
        this.extensionService = extensionService;
        this.contentService = contentService;
        this.uploadService = uploadService;
        this.el = el;
        this.dialog = dialog;
        this.urlFile = '';
        this.urlFileViewer = null;
        this.nodeId = null;
        this.versionId = null;
        this.sharedLinkId = null;
        this.overlayMode = false;
        this.showViewer = true;
        this.showToolbar = true;
        this.allowGoBack = true;
        this.allowDownload = true;
        this.allowPrint = false;
        this.allowFullScreen = true;
        this.allowNavigate = false;
        this.canNavigateBefore = true;
        this.canNavigateNext = true;
        this.allowLeftSidebar = false;
        this.allowRightSidebar = false;
        this.allowThumbnails = true;
        this.showRightSidebar = false;
        this.showLeftSidebar = false;
        this.sidebarRightTemplate = null;
        this.sidebarLeftTemplate = null;
        this.thumbnailsTemplate = null;
        this.maxRetries = 30;
        this.goBack = new EventEmitter();
        this.print = new EventEmitter();
        this.showViewerChange = new EventEmitter();
        this.extensionChange = new EventEmitter();
        this.navigateBefore = new EventEmitter();
        this.navigateNext = new EventEmitter();
        this.invalidSharedLink = new EventEmitter();
        this.TRY_TIMEOUT = 10000;
        this.viewerType = 'unknown';
        this.isLoading = false;
        this.extensionTemplates = [];
        this.externalExtensions = [];
        this.sidebarRightTemplateContext = { node: null };
        this.sidebarLeftTemplateContext = { node: null };
        this.viewerExtensions = [];
        this.readOnly = true;
        this.cacheTypeForContent = '';
        this.extensions = {
            image: ['png', 'jpg', 'jpeg', 'gif', 'bpm', 'svg'],
            media: ['wav', 'mp4', 'mp3', 'webm', 'ogg'],
            text: ['txt', 'xml', 'html', 'json', 'ts', 'css', 'md'],
            pdf: ['pdf']
        };
        this.mimeTypes = {
            text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],
            pdf: ['application/pdf'],
            image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],
            media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/mp3', 'audio/ogg', 'audio/wav']
        };
        this.onDestroy$ = new Subject();
        this.shouldCloseViewer = true;
        this.keyDown$ = fromEvent(document, 'keydown');
        viewUtilService.maxRetries = this.maxRetries;
    }
    isSourceDefined() {
        return !!(this.urlFile || this.blobFile || this.nodeId || this.sharedLinkId);
    }
    ngOnInit() {
        this.apiService.nodeUpdated.pipe(filter((node) => {
            return node && node.id === this.nodeId &&
                (node.name !== this.fileName ||
                    this.getNodeVersionProperty(this.nodeEntry.entry) !== this.getNodeVersionProperty(node));
        }), takeUntil(this.onDestroy$)).subscribe((node) => this.onNodeUpdated(node));
        this.viewUtilService.viewerTypeChange.pipe(takeUntil(this.onDestroy$)).subscribe((type) => {
            this.viewerType = type;
        });
        this.viewUtilService.urlFileContentChange.pipe(takeUntil(this.onDestroy$)).subscribe((content) => {
            this.urlFileContent = content;
        });
        this.closeOverlayManager();
        this.loadExtensions();
        this.cacheTypeForContent = '';
    }
    loadExtensions() {
        this.viewerExtensions = this.extensionService.getViewerExtensions();
        this.viewerExtensions
            .forEach((extension) => {
            this.externalExtensions.push(extension.fileExtension);
        });
    }
    getNodeVersionProperty(node) {
        var _a;
        return (_a = node === null || node === void 0 ? void 0 : node.properties['cm:versionLabel']) !== null && _a !== void 0 ? _a : '';
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    onNodeUpdated(node) {
        if (node && node.id === this.nodeId) {
            this.cacheTypeForContent = 'no-cache';
            this.generateCacheBusterNumber();
            this.isLoading = true;
            this.setUpNodeFile(node).then(() => {
                this.isLoading = false;
            });
        }
    }
    ngOnChanges() {
        if (this.showViewer) {
            if (!this.isSourceDefined()) {
                throw new Error('A content source attribute value is missing.');
            }
            this.isLoading = true;
            if (this.blobFile) {
                this.setUpBlobData();
                this.isLoading = false;
            }
            else if (this.urlFile) {
                this.setUpUrlFile();
                this.isLoading = false;
            }
            else if (this.nodeId) {
                this.apiService.nodesApi.getNode(this.nodeId, { include: ['allowableOperations'] }).then((node) => {
                    this.nodeEntry = node;
                    if (this.versionId) {
                        this.apiService.versionsApi.getVersion(this.nodeId, this.versionId).then((version) => {
                            this.versionEntry = version;
                            this.setUpNodeFile(node.entry, version.entry).then(() => {
                                this.isLoading = false;
                            });
                        });
                    }
                    else {
                        this.setUpNodeFile(node.entry).then(() => {
                            this.isLoading = false;
                        });
                    }
                }, () => {
                    this.isLoading = false;
                    this.logService.error('This node does not exist');
                });
            }
            else if (this.sharedLinkId) {
                this.allowGoBack = false;
                this.apiService.sharedLinksApi.getSharedLink(this.sharedLinkId).then((sharedLinkEntry) => {
                    this.setUpSharedLinkFile(sharedLinkEntry);
                    this.isLoading = false;
                }, () => {
                    this.isLoading = false;
                    this.logService.error('This sharedLink does not exist');
                    this.invalidSharedLink.next();
                });
            }
        }
    }
    setUpBlobData() {
        this.fileTitle = this.getDisplayName('Unknown');
        this.mimeType = this.blobFile.type;
        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);
        this.allowDownload = false;
        this.extensionChange.emit(this.mimeType);
        this.scrollTop();
    }
    setUpUrlFile() {
        const filenameFromUrl = this.getFilenameFromUrl(this.urlFile);
        this.fileTitle = this.getDisplayName(filenameFromUrl);
        this.extension = this.getFileExtension(filenameFromUrl);
        this.urlFileContent = this.urlFile;
        this.fileName = this.displayName;
        this.viewerType = this.urlFileViewer || this.getViewerTypeByExtension(this.extension);
        if (this.viewerType === 'unknown') {
            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);
        }
        this.extensionChange.emit(this.extension);
        this.scrollTop();
    }
    setUpNodeFile(nodeData, versionData) {
        var _a, _b, _c, _d;
        return __awaiter(this, void 0, void 0, function* () {
            this.readOnly = !this.contentService.hasAllowableOperations(nodeData, 'update');
            let setupNode;
            if (versionData && versionData.content) {
                this.mimeType = versionData.content.mimeType;
            }
            else if (nodeData.content) {
                this.mimeType = nodeData.content.mimeType;
            }
            this.fileTitle = this.getDisplayName(versionData ? versionData.name : nodeData.name);
            const currentFileVersion = ((_b = (_a = this.nodeEntry) === null || _a === void 0 ? void 0 : _a.entry) === null || _b === void 0 ? void 0 : _b.properties) && this.nodeEntry.entry.properties['cm:versionLabel'] ?
                encodeURI((_d = (_c = this.nodeEntry) === null || _c === void 0 ? void 0 : _c.entry) === null || _d === void 0 ? void 0 : _d.properties['cm:versionLabel']) : encodeURI('1.0');
            this.urlFileContent = versionData ? this.apiService.contentApi.getVersionContentUrl(this.nodeId, versionData.id) :
                this.apiService.contentApi.getContentUrl(this.nodeId);
            this.urlFileContent = this.cacheBusterNumber ? this.urlFileContent + '&' + currentFileVersion + '&' + this.cacheBusterNumber :
                this.urlFileContent + '&' + currentFileVersion;
            this.extension = this.getFileExtension(versionData ? versionData.name : nodeData.name);
            this.fileName = versionData ? versionData.name : nodeData.name;
            this.viewerType = this.getViewerTypeByExtension(this.extension);
            if (this.viewerType === 'unknown') {
                this.viewerType = this.getViewerTypeByMimeType(this.mimeType);
            }
            if (this.viewerType === 'unknown') {
                if (versionData) {
                    setupNode = this.viewUtilService.displayNodeRendition(nodeData.id, versionData.id);
                }
                else {
                    setupNode = this.viewUtilService.displayNodeRendition(nodeData.id);
                }
            }
            this.extensionChange.emit(this.extension);
            this.sidebarRightTemplateContext.node = nodeData;
            this.sidebarLeftTemplateContext.node = nodeData;
            this.scrollTop();
            return setupNode;
        });
    }
    setUpSharedLinkFile(details) {
        this.mimeType = details.entry.content.mimeType;
        this.fileTitle = this.getDisplayName(details.entry.name);
        this.extension = this.getFileExtension(details.entry.name);
        this.fileName = details.entry.name;
        this.urlFileContent = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, false);
        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);
        if (this.viewerType === 'unknown') {
            this.viewerType = this.getViewerTypeByExtension(this.extension);
        }
        if (this.viewerType === 'unknown') {
            this.displaySharedLinkRendition(this.sharedLinkId);
        }
        this.extensionChange.emit(this.extension);
    }
    toggleSidebar() {
        this.showRightSidebar = !this.showRightSidebar;
        if (this.showRightSidebar && this.nodeId) {
            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })
                .then((nodeEntry) => {
                this.sidebarRightTemplateContext.node = nodeEntry.entry;
            });
        }
    }
    toggleLeftSidebar() {
        this.showLeftSidebar = !this.showLeftSidebar;
        if (this.showRightSidebar && this.nodeId) {
            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })
                .then((nodeEntry) => {
                this.sidebarLeftTemplateContext.node = nodeEntry.entry;
            });
        }
    }
    getDisplayName(name) {
        return this.displayName || name;
    }
    scrollTop() {
        window.scrollTo(0, 1);
    }
    getViewerTypeByMimeType(mimeType) {
        if (mimeType) {
            mimeType = mimeType.toLowerCase();
            const editorTypes = Object.keys(this.mimeTypes);
            for (const type of editorTypes) {
                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {
                    return type;
                }
            }
        }
        return 'unknown';
    }
    getViewerTypeByExtension(extension) {
        if (extension) {
            extension = extension.toLowerCase();
        }
        if (this.isCustomViewerExtension(extension)) {
            return 'custom';
        }
        if (this.extensions.image.indexOf(extension) >= 0) {
            return 'image';
        }
        if (this.extensions.media.indexOf(extension) >= 0) {
            return 'media';
        }
        if (this.extensions.text.indexOf(extension) >= 0) {
            return 'text';
        }
        if (this.extensions.pdf.indexOf(extension) >= 0) {
            return 'pdf';
        }
        return 'unknown';
    }
    onBackButtonClick() {
        this.close();
    }
    onNavigateBeforeClick(event) {
        this.navigateBefore.next(event);
    }
    onNavigateNextClick(event) {
        this.navigateNext.next(event);
    }
    close() {
        if (this.otherMenu) {
            this.otherMenu.hidden = false;
        }
        this.showViewer = false;
        this.showViewerChange.emit(this.showViewer);
    }
    getFilenameFromUrl(url) {
        const anchor = url.indexOf('#');
        const query = url.indexOf('?');
        const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);
        return url.substring(url.lastIndexOf('/', end) + 1, end);
    }
    getFileExtension(fileName) {
        if (fileName) {
            const match = fileName.match(/\.([^\./\?\#]+)($|\?|\#)/);
            return match ? match[1] : null;
        }
        return null;
    }
    isCustomViewerExtension(extension) {
        const extensions = this.externalExtensions || [];
        if (extension && extensions.length > 0) {
            extension = extension.toLowerCase();
            return extensions.flat().indexOf(extension) >= 0;
        }
        return false;
    }
    handleKeyboardEvent(event) {
        if (event && event.defaultPrevented) {
            return;
        }
        const key = event.keyCode;
        if (key === 37 && this.canNavigateBefore) {
            event.preventDefault();
            this.onNavigateBeforeClick(event);
        }
        if (key === 39 && this.canNavigateNext) {
            event.preventDefault();
            this.onNavigateNextClick(event);
        }
        if (key === 70 && event.ctrlKey) {
            event.preventDefault();
            this.enterFullScreen();
        }
    }
    printContent() {
        if (this.allowPrint) {
            const args = new BaseEvent();
            this.print.next(args);
            if (!args.defaultPrevented) {
                this.viewUtilService.printFileGeneric(this.nodeId, this.mimeType);
            }
        }
    }
    enterFullScreen() {
        if (this.allowFullScreen) {
            const container = this.el.nativeElement.querySelector('.adf-viewer__fullscreen-container');
            if (container) {
                if (container.requestFullscreen) {
                    container.requestFullscreen();
                }
                else if (container.webkitRequestFullscreen) {
                    container.webkitRequestFullscreen();
                }
                else if (container.mozRequestFullScreen) {
                    container.mozRequestFullScreen();
                }
                else if (container.msRequestFullscreen) {
                    container.msRequestFullscreen();
                }
            }
        }
    }
    displaySharedLinkRendition(sharedId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const rendition = yield this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'pdf');
                if (rendition.entry.status.toString() === 'CREATED') {
                    this.viewerType = 'pdf';
                    this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'pdf');
                }
            }
            catch (error) {
                this.logService.error(error);
                try {
                    const rendition = yield this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'imgpreview');
                    if (rendition.entry.status.toString() === 'CREATED') {
                        this.viewerType = 'image';
                        this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'imgpreview');
                    }
                }
                catch (error) {
                    this.logService.error(error);
                }
            }
        });
    }
    checkExtensions(extensionAllowed) {
        if (typeof extensionAllowed === 'string') {
            return this.extension.toLowerCase() === extensionAllowed.toLowerCase();
        }
        else if (extensionAllowed.length > 0) {
            return extensionAllowed.find((currentExtension) => {
                return this.extension.toLowerCase() === currentExtension.toLowerCase();
            });
        }
    }
    onSubmitFile(newImageBlob) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
        if (((_b = (_a = this === null || this === void 0 ? void 0 : this.nodeEntry) === null || _a === void 0 ? void 0 : _a.entry) === null || _b === void 0 ? void 0 : _b.id) && !this.readOnly) {
            const newImageFile = new File([newImageBlob], (_d = (_c = this === null || this === void 0 ? void 0 : this.nodeEntry) === null || _c === void 0 ? void 0 : _c.entry) === null || _d === void 0 ? void 0 : _d.name, { type: (_g = (_f = (_e = this === null || this === void 0 ? void 0 : this.nodeEntry) === null || _e === void 0 ? void 0 : _e.entry) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.mimeType });
            const newFile = new FileModel(newImageFile, {
                majorVersion: false,
                newVersion: true,
                parentId: (_j = (_h = this === null || this === void 0 ? void 0 : this.nodeEntry) === null || _h === void 0 ? void 0 : _h.entry) === null || _j === void 0 ? void 0 : _j.parentId,
                nodeType: (_m = (_l = (_k = this === null || this === void 0 ? void 0 : this.nodeEntry) === null || _k === void 0 ? void 0 : _k.entry) === null || _l === void 0 ? void 0 : _l.content) === null || _m === void 0 ? void 0 : _m.mimeType
            }, (_p = (_o = this === null || this === void 0 ? void 0 : this.nodeEntry) === null || _o === void 0 ? void 0 : _o.entry) === null || _p === void 0 ? void 0 : _p.id);
            this.uploadService.addToQueue(...[newFile]);
            this.uploadService.uploadFilesInTheQueue();
        }
    }
    onUnsupportedFile() {
        this.viewerType = 'unknown';
    }
    closeOverlayManager() {
        this.dialog.afterOpened.pipe(skipWhile(() => !this.overlayMode), takeUntil(this.onDestroy$)).subscribe(() => this.shouldCloseViewer = false);
        this.dialog.afterAllClosed.pipe(skipWhile(() => !this.overlayMode), takeUntil(this.onDestroy$)).subscribe(() => this.shouldCloseViewer = true);
        this.keyDown$.pipe(skipWhile(() => !this.overlayMode), filter((e) => e.keyCode === 27), takeUntil(this.onDestroy$)).subscribe((event) => {
            event.preventDefault();
            if (this.shouldCloseViewer) {
                this.close();
            }
        });
    }
    generateCacheBusterNumber() {
        this.cacheBusterNumber = Date.now();
    }
}
ViewerComponent.ɵfac = function ViewerComponent_Factory(t) { return new (t || ViewerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlfrescoApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewUtilService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.LogService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AppExtensionService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.ContentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.UploadService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog)); };
ViewerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ViewerComponent, selectors: [["adf-viewer"]], contentQueries: function ViewerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ViewerToolbarComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ViewerSidebarComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ViewerOpenWithComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ViewerMoreActionsComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbar = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidebar = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mnuOpenWith = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mnuMoreActions = _t.first);
    } }, hostAttrs: [1, "adf-viewer"], hostBindings: function ViewerComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup", function ViewerComponent_keyup_HostBindingHandler($event) { return ctx.handleKeyboardEvent($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { urlFile: "urlFile", urlFileViewer: "urlFileViewer", nodeId: "nodeId", versionId: "versionId", sharedLinkId: "sharedLinkId", overlayMode: "overlayMode", showViewer: "showViewer", showToolbar: "showToolbar", allowGoBack: "allowGoBack", allowDownload: "allowDownload", allowPrint: "allowPrint", allowFullScreen: "allowFullScreen", allowNavigate: "allowNavigate", canNavigateBefore: "canNavigateBefore", canNavigateNext: "canNavigateNext", allowLeftSidebar: "allowLeftSidebar", allowRightSidebar: "allowRightSidebar", allowThumbnails: "allowThumbnails", showRightSidebar: "showRightSidebar", showLeftSidebar: "showLeftSidebar", sidebarRightTemplate: "sidebarRightTemplate", sidebarLeftTemplate: "sidebarLeftTemplate", thumbnailsTemplate: "thumbnailsTemplate", maxRetries: "maxRetries", mimeType: "mimeType", fileName: "fileName", blobFile: "blobFile", displayName: "displayName" }, outputs: { goBack: "goBack", print: "print", showViewerChange: "showViewerChange", extensionChange: "extensionChange", navigateBefore: "navigateBefore", navigateNext: "navigateNext", invalidSharedLink: "invalidSharedLink" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 1, vars: 1, consts: [["class", "adf-viewer-container", 3, "adf-viewer-overlay-container", "adf-viewer-inline-container", 4, "ngIf"], [1, "adf-viewer-container"], ["fxLayout", "column", "cdkTrapFocusAutoCapture", "", 1, "adf-viewer-content", 3, "cdkTrapFocus"], [4, "ngIf"], ["fxLayout", "row", "fxFlex", "1 1 auto"], ["class", "adf-viewer-main", "fxFlexOrder", "1", "fxFlex", "1 1 auto", 4, "ngIf"], ["id", "adf-viewer-toolbar", 1, "adf-viewer-toolbar"], ["class", "adf-viewer-close-button", "data-automation-id", "adf-toolbar-back", "mat-icon-button", "", 3, "title", "click", 4, "ngIf"], ["fxFlex", "1 1 auto", 1, "adf-viewer__file-title"], ["data-automation-id", "adf-toolbar-pref-file", "mat-icon-button", "", 3, "title", "click", 4, "ngIf"], ["data-automation-id", "adf-file-thumbnail", 1, "adf-viewer__mimeicon", 3, "alt", "src"], ["id", "adf-viewer-display-name", 1, "adf-viewer__display-name"], ["data-automation-id", "adf-toolbar-next-file", "mat-icon-button", "", 3, "title", "click", 4, "ngIf"], ["data-automation-id", "adf-toolbar-custom-btn", 4, "ngIf"], ["id", "adf-viewer-download", "mat-icon-button", "", "data-automation-id", "adf-toolbar-download", 3, "title", "adfNodeDownload", "version", 4, "ngIf"], ["id", "adf-viewer-print", "mat-icon-button", "", "data-automation-id", "adf-toolbar-print", 3, "title", "click", 4, "ngIf"], ["id", "adf-viewer-fullscreen", "mat-icon-button", "", "data-automation-id", "adf-toolbar-fullscreen", 3, "title", "click", 4, "ngIf"], ["mat-icon-button", "", "data-automation-id", "adf-toolbar-left-sidebar", 3, "title", "color", "click"], ["data-automation-id", "adf-toolbar-back", "mat-icon-button", "", 1, "adf-viewer-close-button", 3, "title", "click"], ["data-automation-id", "adf-toolbar-pref-file", "mat-icon-button", "", 3, "title", "click"], ["data-automation-id", "adf-toolbar-next-file", "mat-icon-button", "", 3, "title", "click"], ["data-automation-id", "adf-toolbar-custom-btn"], ["id", "adf-viewer-openwith", "mat-button", "", "data-automation-id", "adf-toolbar-open-with", 3, "matMenuTriggerFor"], [3, "overlapTrigger"], ["mnuOpenWith", "matMenu"], ["id", "adf-viewer-download", "mat-icon-button", "", "data-automation-id", "adf-toolbar-download", 3, "title", "adfNodeDownload", "version"], ["id", "adf-viewer-print", "mat-icon-button", "", "data-automation-id", "adf-toolbar-print", 3, "title", "click"], ["id", "adf-viewer-fullscreen", "mat-icon-button", "", "data-automation-id", "adf-toolbar-fullscreen", 3, "title", "click"], ["mat-icon-button", "", "data-automation-id", "adf-toolbar-sidebar", 3, "title", "color", "click"], ["id", "adf-viewer-moreactions", "mat-icon-button", "", "data-automation-id", "adf-toolbar-more-actions", 3, "matMenuTriggerFor", "title"], ["mnuMoreActions", "matMenu"], ["fxFlexOrder", "4", "id", "adf-right-sidebar", 1, "adf-viewer__sidebar", 3, "ngClass"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["fxFlexOrder", "1", "id", "adf-left-sidebar", 1, "adf-viewer__sidebar", 3, "ngClass"], ["fxFlexOrder", "1", "fxFlex", "1 1 auto", 1, "adf-viewer-main"], [1, "adf-viewer-layout-content", "adf-viewer__fullscreen-container"], [1, "adf-viewer-content-container"], ["fxFlex", "1 1 auto", 1, "adf-viewer__loading-screen"], [1, "adf-viewer-content-container", 3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [3, "thumbnailsTemplate", "allowThumbnails", "blobFile", "urlFile", "nameFile", "cacheType", "close", "error"], [3, "urlFile", "nameFile", "blobFile", "readOnly", "error", "submit"], ["id", "adf-mdedia-player", 3, "urlFile", "nodeId", "mimeType", "blobFile", "nameFile", "error"], [3, "urlFile", "blobFile"], [4, "ngFor", "ngForOf"], ["class", "adf-viewer-custom-content", 4, "ngFor", "ngForOf"], [3, "id", "node", "url", "extension", 4, "ngIf"], [3, "id", "node", "url", "extension"], [1, "adf-viewer-custom-content"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function ViewerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵtemplate(0, ViewerComponent_div_0_Template, 9, 10, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.showViewer);
    } }, directives: [ɵngcc8.NgIf, ɵngcc9.DefaultLayoutDirective, ɵngcc10.CdkTrapFocus, ɵngcc9.DefaultFlexDirective, ɵngcc11.ToolbarComponent, ɵngcc12.ToolbarTitleComponent, ɵngcc13.ToolbarDividerComponent, ɵngcc14.MatButton, ɵngcc15.MatIcon, ɵngcc16.MatMenuTrigger, ɵngcc16._MatMenu, ɵngcc17.NodeDownloadDirective, ɵngcc9.DefaultFlexOrderDirective, ɵngcc8.NgClass, ɵngcc18.DefaultClassDirective, ɵngcc8.NgTemplateOutlet, ɵngcc19.MatSpinner, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc8.NgSwitchDefault, ɵngcc20.PdfViewerComponent, ɵngcc21.ImgViewerComponent, ɵngcc22.MediaPlayerComponent, ɵngcc23.TxtViewerComponent, ɵngcc8.NgForOf, ɵngcc4.PreviewExtensionComponent, ɵngcc24.UnknownFormatComponent], pipes: [ɵngcc25.MimeTypeIconPipe, ɵngcc26.TranslatePipe], encapsulation: 2 });
ViewerComponent.ctorParameters = () => [
    { type: AlfrescoApiService },
    { type: ViewUtilService },
    { type: LogService },
    { type: AppExtensionService },
    { type: ContentService },
    { type: UploadService },
    { type: ElementRef },
    { type: MatDialog }
];
ViewerComponent.propDecorators = {
    toolbar: [{ type: ContentChild, args: [ViewerToolbarComponent,] }],
    sidebar: [{ type: ContentChild, args: [ViewerSidebarComponent,] }],
    mnuOpenWith: [{ type: ContentChild, args: [ViewerOpenWithComponent,] }],
    mnuMoreActions: [{ type: ContentChild, args: [ViewerMoreActionsComponent,] }],
    urlFile: [{ type: Input }],
    urlFileViewer: [{ type: Input }],
    blobFile: [{ type: Input }],
    nodeId: [{ type: Input }],
    versionId: [{ type: Input }],
    sharedLinkId: [{ type: Input }],
    overlayMode: [{ type: Input }],
    showViewer: [{ type: Input }],
    showToolbar: [{ type: Input }],
    displayName: [{ type: Input }],
    allowGoBack: [{ type: Input }],
    allowDownload: [{ type: Input }],
    allowPrint: [{ type: Input }],
    allowFullScreen: [{ type: Input }],
    allowNavigate: [{ type: Input }],
    canNavigateBefore: [{ type: Input }],
    canNavigateNext: [{ type: Input }],
    allowLeftSidebar: [{ type: Input }],
    allowRightSidebar: [{ type: Input }],
    allowThumbnails: [{ type: Input }],
    showRightSidebar: [{ type: Input }],
    showLeftSidebar: [{ type: Input }],
    sidebarRightTemplate: [{ type: Input }],
    sidebarLeftTemplate: [{ type: Input }],
    thumbnailsTemplate: [{ type: Input }],
    mimeType: [{ type: Input }],
    fileName: [{ type: Input }],
    maxRetries: [{ type: Input }],
    goBack: [{ type: Output }],
    print: [{ type: Output }],
    showViewerChange: [{ type: Output }],
    extensionChange: [{ type: Output }],
    navigateBefore: [{ type: Output }],
    navigateNext: [{ type: Output }],
    invalidSharedLink: [{ type: Output }],
    handleKeyboardEvent: [{ type: HostListener, args: ['document:keyup', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewerComponent, [{
        type: Component,
        args: [{
                selector: 'adf-viewer',
                template: "<div *ngIf=\"showViewer\"\n     class=\"adf-viewer-container\"\n     [class.adf-viewer-overlay-container]=\"overlayMode\"\n     [class.adf-viewer-inline-container]=\"!overlayMode\">\n\n    <div class=\"adf-viewer-content\"\n         fxLayout=\"column\"\n         [cdkTrapFocus]=\"overlayMode\"\n         cdkTrapFocusAutoCapture>\n        <ng-content select=\"adf-viewer-toolbar\"></ng-content>\n        <ng-container *ngIf=\"showToolbar && !toolbar\">\n            <adf-toolbar id=\"adf-viewer-toolbar\" class=\"adf-viewer-toolbar\">\n                <adf-toolbar-title>\n\n                    <ng-container *ngIf=\"allowLeftSidebar\">\n                        <button mat-icon-button\n                                [attr.aria-expanded]=\"showLeftSidebar\"\n                                [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.INFO' | translate\"\n                                title=\"{{ 'ADF_VIEWER.ACTIONS.INFO' | translate }}\"\n                                data-automation-id=\"adf-toolbar-left-sidebar\"\n                                [color]=\"showLeftSidebar ? 'accent' : null\"\n                                (click)=\"toggleLeftSidebar()\">\n                            <mat-icon>info_outline</mat-icon>\n                        </button>\n                    </ng-container>\n\n                    <button *ngIf=\"allowGoBack\"\n                            class=\"adf-viewer-close-button\"\n                            data-automation-id=\"adf-toolbar-back\"\n                            [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.CLOSE' | translate\"\n                            mat-icon-button\n                            title=\"{{ 'ADF_VIEWER.ACTIONS.CLOSE' | translate }}\"\n                            (click)=\"onBackButtonClick()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </adf-toolbar-title>\n\n                <div fxFlex=\"1 1 auto\"\n                     class=\"adf-viewer__file-title\">\n                    <button *ngIf=\"allowNavigate && canNavigateBefore\"\n                            data-automation-id=\"adf-toolbar-pref-file\"\n                            mat-icon-button\n                            [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.PREV_FILE' | translate\"\n                            title=\"{{ 'ADF_VIEWER.ACTIONS.PREV_FILE' | translate }}\"\n                            (click)=\"onNavigateBeforeClick($event)\">\n                        <mat-icon>navigate_before</mat-icon>\n                    </button>\n                    <img class=\"adf-viewer__mimeicon\"\n                         [alt]=\"mimeType\"\n                         [src]=\"mimeType | adfMimeTypeIcon\"\n                         data-automation-id=\"adf-file-thumbnail\">\n                    <span class=\"adf-viewer__display-name\"\n                          id=\"adf-viewer-display-name\">{{ fileTitle }}</span>\n                    <button *ngIf=\"allowNavigate && canNavigateNext\"\n                            data-automation-id=\"adf-toolbar-next-file\"\n                            mat-icon-button\n                            [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.NEXT_FILE' | translate\"\n                            title=\"{{ 'ADF_VIEWER.ACTIONS.NEXT_FILE' | translate }}\"\n                            (click)=\"onNavigateNextClick($event)\">\n                        <mat-icon>navigate_next</mat-icon>\n                    </button>\n                </div>\n\n                <ng-content select=\"adf-viewer-toolbar-actions\"></ng-content>\n\n                <ng-container *ngIf=\"mnuOpenWith\"\n                              data-automation-id='adf-toolbar-custom-btn'>\n                    <button id=\"adf-viewer-openwith\"\n                            mat-button\n                            [matMenuTriggerFor]=\"mnuOpenWith\"\n                            data-automation-id=\"adf-toolbar-open-with\">\n                        <span>{{ 'ADF_VIEWER.ACTIONS.OPEN_WITH' | translate }}</span>\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #mnuOpenWith=\"matMenu\"\n                              [overlapTrigger]=\"false\">\n                        <ng-content select=\"adf-viewer-open-with\"></ng-content>\n                    </mat-menu>\n                </ng-container>\n\n                <adf-toolbar-divider></adf-toolbar-divider>\n\n                <button id=\"adf-viewer-download\"\n                        *ngIf=\"allowDownload\"\n                        mat-icon-button\n                        [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.DOWNLOAD' | translate\"\n                        title=\"{{ 'ADF_VIEWER.ACTIONS.DOWNLOAD' | translate }}\"\n                        data-automation-id=\"adf-toolbar-download\"\n                        [adfNodeDownload]=\"nodeEntry\"\n                        [version]=\"versionEntry\">\n                    <mat-icon>file_download</mat-icon>\n                </button>\n\n                <button id=\"adf-viewer-print\"\n                        *ngIf=\"allowPrint\"\n                        mat-icon-button\n                        [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.PRINT' | translate\"\n                        title=\"{{ 'ADF_VIEWER.ACTIONS.PRINT' | translate }}\"\n                        data-automation-id=\"adf-toolbar-print\"\n                        (click)=\"printContent()\">\n                    <mat-icon>print</mat-icon>\n                </button>\n\n                <button id=\"adf-viewer-fullscreen\"\n                        *ngIf=\"viewerType !== 'media' && allowFullScreen\"\n                        mat-icon-button\n                        [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.FULLSCREEN' | translate\"\n                        title=\"{{ 'ADF_VIEWER.ACTIONS.FULLSCREEN' | translate }}\"\n                        data-automation-id=\"adf-toolbar-fullscreen\"\n                        (click)=\"enterFullScreen()\">\n                    <mat-icon>fullscreen</mat-icon>\n                </button>\n\n                <ng-container *ngIf=\"allowRightSidebar\">\n                    <adf-toolbar-divider></adf-toolbar-divider>\n\n                    <button mat-icon-button\n                            [attr.aria-expanded]=\"showRightSidebar\"\n                            [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.INFO' | translate\"\n                            title=\"{{ 'ADF_VIEWER.ACTIONS.INFO' | translate }}\"\n                            data-automation-id=\"adf-toolbar-sidebar\"\n                            [color]=\"showRightSidebar ? 'accent' : null\"\n                            (click)=\"toggleSidebar()\">\n                        <mat-icon>info_outline</mat-icon>\n                    </button>\n\n                </ng-container>\n\n                <ng-container *ngIf=\"mnuMoreActions\">\n                    <button id=\"adf-viewer-moreactions\"\n                            mat-icon-button\n                            [matMenuTriggerFor]=\"mnuMoreActions\"\n                            [attr.aria-label]=\"'ADF_VIEWER.ACTIONS.MORE_ACTIONS' | translate\"\n                            title=\"{{ 'ADF_VIEWER.ACTIONS.MORE_ACTIONS' | translate }}\"\n                            data-automation-id=\"adf-toolbar-more-actions\">\n                        <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #mnuMoreActions=\"matMenu\"\n                              [overlapTrigger]=\"false\">\n                        <ng-content select=\"adf-viewer-more-actions\"></ng-content>\n                    </mat-menu>\n                </ng-container>\n\n            </adf-toolbar>\n        </ng-container>\n\n        <div fxLayout=\"row\"\n             fxFlex=\"1 1 auto\">\n            <ng-container *ngIf=\"allowRightSidebar && showRightSidebar\">\n                <div class=\"adf-viewer__sidebar\"\n                     [ngClass]=\"'adf-viewer__sidebar__right'\"\n                     fxFlexOrder=\"4\"\n                     id=\"adf-right-sidebar\">\n                    <ng-container *ngIf=\"sidebarRightTemplate\">\n                        <ng-container *ngTemplateOutlet=\"sidebarRightTemplate;context:sidebarRightTemplateContext\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-content *ngIf=\"!sidebarRightTemplate\"\n                                select=\"adf-viewer-sidebar\"></ng-content>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"allowLeftSidebar && showLeftSidebar\">\n                <div class=\"adf-viewer__sidebar\"\n                     [ngClass]=\"'adf-viewer__sidebar__left'\"\n                     fxFlexOrder=\"1\"\n                     id=\"adf-left-sidebar\">\n                    <ng-container *ngIf=\"sidebarLeftTemplate\">\n                        <ng-container *ngTemplateOutlet=\"sidebarLeftTemplate;context:sidebarLeftTemplateContext\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-content *ngIf=\"!sidebarLeftTemplate\"\n                                select=\"adf-viewer-sidebar\"></ng-content>\n                </div>\n            </ng-container>\n\n            <div *ngIf=\"isLoading\"\n                 class=\"adf-viewer-main\"\n                 fxFlexOrder=\"1\"\n                 fxFlex=\"1 1 auto\">\n                <div class=\"adf-viewer-layout-content adf-viewer__fullscreen-container\">\n                    <div class=\"adf-viewer-content-container\">\n                        <ng-container *ngIf=\"isLoading\">\n                            <div class=\"adf-viewer__loading-screen\"\n                                 fxFlex=\"1 1 auto\">\n                                <h2>{{ 'ADF_VIEWER.LOADING' | translate }}</h2>\n                                <div>\n                                    <mat-spinner></mat-spinner>\n                                </div>\n                            </div>\n                        </ng-container>\n\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"!isLoading\"\n                 class=\"adf-viewer-main\"\n                 fxFlexOrder=\"1\"\n                 fxFlex=\"1 1 auto\">\n                <div class=\"adf-viewer-layout-content adf-viewer__fullscreen-container\">\n                    <div class=\"adf-viewer-content-container\"\n                         [ngSwitch]=\"viewerType\">\n\n                        <ng-container *ngSwitchCase=\"'pdf'\">\n                            <adf-pdf-viewer (close)=\"onBackButtonClick()\"\n                                            [thumbnailsTemplate]=\"thumbnailsTemplate\"\n                                            [allowThumbnails]=\"allowThumbnails\"\n                                            [blobFile]=\"blobFile\"\n                                            [urlFile]=\"urlFileContent\"\n                                            [nameFile]=\"displayName\"\n                                            [cacheType]=\"cacheTypeForContent\"\n                                            (error)=\"onUnsupportedFile()\"></adf-pdf-viewer>\n                        </ng-container>\n\n                        <ng-container *ngSwitchCase=\"'image'\">\n                            <adf-img-viewer [urlFile]=\"urlFileContent\"\n                                            [nameFile]=\"displayName\"\n                                            [blobFile]=\"blobFile\"\n                                            [readOnly]=\"readOnly\"\n                                            (error)=\"onUnsupportedFile()\"\n                                            (submit)=\"onSubmitFile($event)\"\n                            ></adf-img-viewer>\n                        </ng-container>\n\n                        <ng-container *ngSwitchCase=\"'media'\">\n                            <adf-media-player id=\"adf-mdedia-player\"\n                                              [urlFile]=\"urlFileContent\"\n                                              [nodeId]=\"nodeEntry?.entry?.id\"\n                                              [mimeType]=\"mimeType\"\n                                              [blobFile]=\"blobFile\"\n                                              [nameFile]=\"displayName\"\n                                              (error)=\"onUnsupportedFile()\"></adf-media-player>\n                        </ng-container>\n\n                        <ng-container *ngSwitchCase=\"'text'\">\n                            <adf-txt-viewer [urlFile]=\"urlFileContent\"\n                                            [blobFile]=\"blobFile\"></adf-txt-viewer>\n                        </ng-container>\n\n                        <ng-container *ngSwitchCase=\"'in_creation'\">\n                            <div class=\"adf-viewer__loading-screen\"\n                                 fxFlex=\"1 1 auto\">\n                                <h2>{{ 'ADF_VIEWER.LOADING' | translate }}</h2>\n                                <div>\n                                    <mat-spinner></mat-spinner>\n                                </div>\n                            </div>\n                        </ng-container>\n\n                        <ng-container *ngSwitchCase=\"'custom'\">\n                            <ng-container *ngFor=\"let ext of viewerExtensions\">\n                                <adf-preview-extension *ngIf=\"checkExtensions(ext.fileExtension)\"\n                                                       [id]=\"ext.component\"\n                                                       [node]=\"nodeEntry.entry\"\n                                                       [url]=\"urlFileContent\"\n                                                       [extension]=\"extension\"\n                                                       [attr.data-automation-id]=\"ext.component\">\n                                </adf-preview-extension>\n                            </ng-container>\n\n                            <span class=\"adf-viewer-custom-content\"\n                                  *ngFor=\"let extensionTemplate of extensionTemplates\">\n                                <ng-template *ngIf=\"extensionTemplate.isVisible\"\n                                             [ngTemplateOutlet]=\"extensionTemplate.template\"\n                                             [ngTemplateOutletContext]=\"{ urlFileContent: urlFileContent, extension:extension }\">\n                                </ng-template>\n                            </span>\n                        </ng-container>\n\n                        <ng-container *ngSwitchDefault>\n                            <adf-viewer-unknown-format></adf-viewer-unknown-format>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n",
                host: { 'class': 'adf-viewer' },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.AlfrescoApiService }, { type: ɵngcc2.ViewUtilService }, { type: ɵngcc3.LogService }, { type: ɵngcc4.AppExtensionService }, { type: ɵngcc5.ContentService }, { type: ɵngcc6.UploadService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc7.MatDialog }]; }, { urlFile: [{
            type: Input
        }], urlFileViewer: [{
            type: Input
        }], nodeId: [{
            type: Input
        }], versionId: [{
            type: Input
        }], sharedLinkId: [{
            type: Input
        }], overlayMode: [{
            type: Input
        }], showViewer: [{
            type: Input
        }], showToolbar: [{
            type: Input
        }], allowGoBack: [{
            type: Input
        }], allowDownload: [{
            type: Input
        }], allowPrint: [{
            type: Input
        }], allowFullScreen: [{
            type: Input
        }], allowNavigate: [{
            type: Input
        }], canNavigateBefore: [{
            type: Input
        }], canNavigateNext: [{
            type: Input
        }], allowLeftSidebar: [{
            type: Input
        }], allowRightSidebar: [{
            type: Input
        }], allowThumbnails: [{
            type: Input
        }], showRightSidebar: [{
            type: Input
        }], showLeftSidebar: [{
            type: Input
        }], sidebarRightTemplate: [{
            type: Input
        }], sidebarLeftTemplate: [{
            type: Input
        }], thumbnailsTemplate: [{
            type: Input
        }], maxRetries: [{
            type: Input
        }], goBack: [{
            type: Output
        }], print: [{
            type: Output
        }], showViewerChange: [{
            type: Output
        }], extensionChange: [{
            type: Output
        }], navigateBefore: [{
            type: Output
        }], navigateNext: [{
            type: Output
        }], invalidSharedLink: [{
            type: Output
        }], mimeType: [{
            type: Input
        }], fileName: [{
            type: Input
        }], handleKeyboardEvent: [{
            type: HostListener,
            args: ['document:keyup', ['$event']]
        }], toolbar: [{
            type: ContentChild,
            args: [ViewerToolbarComponent]
        }], sidebar: [{
            type: ContentChild,
            args: [ViewerSidebarComponent]
        }], mnuOpenWith: [{
            type: ContentChild,
            args: [ViewerOpenWithComponent]
        }], mnuMoreActions: [{
            type: ContentChild,
            args: [ViewerMoreActionsComponent]
        }], blobFile: [{
            type: Input
        }], displayName: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,