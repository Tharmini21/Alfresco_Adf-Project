/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input } from '@angular/core';
import { DEFAULT_SEPARATOR } from '../card-view-textitem/card-view-textitem.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../card-view-item-dispatcher/card-view-item-dispatcher.component';

function CardViewComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelement(2, "adf-card-view-item-dispatcher", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const property_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("data-automation-id", "header-" + property_r1.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("property", property_r1)("editable", ctx_r0.editable)("displayEmpty", ctx_r0.displayEmpty)("displayNoneOption", property_r1["displayNoneOption"] !== undefined ? property_r1["displayNoneOption"] : ctx_r0.displayNoneOption)("displayClearAction", ctx_r0.displayClearAction)("copyToClipboardAction", ctx_r0.copyToClipboardAction)("useChipsForMultiValueProperty", ctx_r0.useChipsForMultiValueProperty)("multiValueSeparator", ctx_r0.multiValueSeparator);
} }
export class CardViewComponent {
    constructor() {
        this.displayEmpty = true;
        this.displayNoneOption = true;
        this.displayClearAction = true;
        this.copyToClipboardAction = true;
        this.useChipsForMultiValueProperty = true;
        this.multiValueSeparator = DEFAULT_SEPARATOR;
    }
}
CardViewComponent.ɵfac = function CardViewComponent_Factory(t) { return new (t || CardViewComponent)(); };
CardViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CardViewComponent, selectors: [["adf-card-view"]], inputs: { displayEmpty: "displayEmpty", displayNoneOption: "displayNoneOption", displayClearAction: "displayClearAction", copyToClipboardAction: "copyToClipboardAction", useChipsForMultiValueProperty: "useChipsForMultiValueProperty", multiValueSeparator: "multiValueSeparator", properties: "properties", editable: "editable" }, decls: 2, vars: 1, consts: [[1, "adf-property-list"], [4, "ngFor", "ngForOf"], [1, "adf-property"], [3, "property", "editable", "displayEmpty", "displayNoneOption", "displayClearAction", "copyToClipboardAction", "useChipsForMultiValueProperty", "multiValueSeparator"]], template: function CardViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, CardViewComponent_div_1_Template, 3, 9, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.properties);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.CardViewItemDispatcherComponent], encapsulation: 2 });
CardViewComponent.propDecorators = {
    properties: [{ type: Input }],
    editable: [{ type: Input }],
    displayEmpty: [{ type: Input }],
    displayNoneOption: [{ type: Input }],
    displayClearAction: [{ type: Input }],
    copyToClipboardAction: [{ type: Input }],
    useChipsForMultiValueProperty: [{ type: Input }],
    multiValueSeparator: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CardViewComponent, [{
        type: Component,
        args: [{
                selector: 'adf-card-view',
                template: "<div class=\"adf-property-list\">\n    <div *ngFor=\"let property of properties\">\n        <div [attr.data-automation-id]=\"'header-'+property.key\" class=\"adf-property\">\n            <adf-card-view-item-dispatcher\n                [property]=\"property\"\n                [editable]=\"editable\"\n                [displayEmpty]=\"displayEmpty\"\n                [displayNoneOption]=\"property['displayNoneOption'] !== undefined ? property['displayNoneOption'] : displayNoneOption\"\n                [displayClearAction]=\"displayClearAction\"\n                [copyToClipboardAction]=\"copyToClipboardAction\"\n                [useChipsForMultiValueProperty]=\"useChipsForMultiValueProperty\"\n                [multiValueSeparator]=\"multiValueSeparator\">\n            </adf-card-view-item-dispatcher>\n        </div>\n    </div>\n</div>\n"
            }]
    }], function () { return []; }, { displayEmpty: [{
            type: Input
        }], displayNoneOption: [{
            type: Input
        }], displayClearAction: [{
            type: Input
        }], copyToClipboardAction: [{
            type: Input
        }], useChipsForMultiValueProperty: [{
            type: Input
        }], multiValueSeparator: [{
            type: Input
        }], properties: [{
            type: Input
        }], editable: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvY2FyZC12aWV3L2NvbXBvbmVudHMvY2FyZC12aWV3L2NhcmQtdmlldy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9EQUFvRCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTXZGLE1BQU0sT0FBTyxpQkFBaUI7QUFDOUIsSUFMQTtBQUNHLFFBY0MsaUJBQVksR0FBWSxJQUFJLENBQUM7QUFDakMsUUFHSSxzQkFBaUIsR0FBWSxJQUFJLENBQUM7QUFDdEMsUUFHSSx1QkFBa0IsR0FBWSxJQUFJLENBQUM7QUFDdkMsUUFHSSwwQkFBcUIsR0FBWSxJQUFJLENBQUM7QUFDMUMsUUFHSSxrQ0FBNkIsR0FBWSxJQUFJLENBQUM7QUFDbEQsUUFHSSx3QkFBbUIsR0FBVyxpQkFBaUIsQ0FBQztBQUNwRCxJQUFBLENBQUM7QUFDRDs2Q0FyQ0MsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxlQUFlO2lCQUN6Qjs7bURBQXlDLGNBQzVDOzs7OzttR0FDSTtBQUFDO0FBQ0kseUJBQ0wsS0FBSztBQUNSLHVCQUdHLEtBQUs7QUFDUiwyQkFHRyxLQUFLO0FBQ1IsZ0NBR0csS0FBSztBQUNSLGlDQUdHLEtBQUs7QUFDUixvQ0FHRyxLQUFLO0FBQ1IsNENBR0csS0FBSztBQUNSLGtDQUdHLEtBQUs7QUFDVDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcmRWaWV3SXRlbSB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvY2FyZC12aWV3LWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IERFRkFVTFRfU0VQQVJBVE9SIH0gZnJvbSAnLi4vY2FyZC12aWV3LXRleHRpdGVtL2NhcmQtdmlldy10ZXh0aXRlbS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1jYXJkLXZpZXcnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9jYXJkLXZpZXcuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENhcmRWaWV3Q29tcG9uZW50IHtcbiAgICAvKiogKCoqcmVxdWlyZWQqKikgSXRlbXMgdG8gc2hvdyBpbiB0aGUgY2FyZCB2aWV3LiAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHJvcGVydGllczogQ2FyZFZpZXdJdGVtIFtdO1xuXG4gICAgLyoqIFRvZ2dsZXMgd2hldGhlciBvciBub3QgdGhlIGl0ZW1zIGNhbiBiZSBlZGl0ZWQuICovXG4gICAgQElucHV0KClcbiAgICBlZGl0YWJsZTogYm9vbGVhbjtcblxuICAgIC8qKiBUb2dnbGVzIHdoZXRoZXIgb3Igbm90IHRvIHNob3cgZW1wdHkgaXRlbXMgaW4gbm9uLWVkaXRhYmxlIG1vZGUuICovXG4gICAgQElucHV0KClcbiAgICBkaXNwbGF5RW1wdHk6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFRvZ2dsZXMgd2hldGhlciBvciBub3QgdG8gZGlzcGxheSBub25lIG9wdGlvbi4gKi9cbiAgICBASW5wdXQoKVxuICAgIGRpc3BsYXlOb25lT3B0aW9uOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBUb2dnbGVzIHdoZXRoZXIgb3Igbm90IHRvIGRpc3BsYXkgY2xlYXIgYWN0aW9uLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgZGlzcGxheUNsZWFyQWN0aW9uOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBUb2dnbGVzIHdoZXRoZXIgb3Igbm90IHRvIGVuYWJsZSBjb3B5IHRvIGNsaXBib2FyZCBhY3Rpb24uICovXG4gICAgQElucHV0KClcbiAgICBjb3B5VG9DbGlwYm9hcmRBY3Rpb246IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFRvZ2dsZXMgd2hldGhlciBvciBub3QgdG8gZW5hYmxlIGNoaXBzIGZvciBtdWx0aXZhbHVlZCBwcm9wZXJ0aWVzLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdXNlQ2hpcHNGb3JNdWx0aVZhbHVlUHJvcGVydHk6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFN0cmluZyBzZXBhcmF0b3IgYmV0d2VlbiBtdWx0aS12YWx1ZSBwcm9wZXJ0eSBpdGVtcy4gKi9cbiAgICBASW5wdXQoKVxuICAgIG11bHRpVmFsdWVTZXBhcmF0b3I6IHN0cmluZyA9IERFRkFVTFRfU0VQQVJBVE9SO1xufVxuIl19