/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { Router, ActivatedRoute } from '@angular/router';
import { AuthenticationService } from '../../services/authentication.service';
import { LogService } from '../../services/log.service';
import { TranslationService } from '../../services/translation.service';
import { UserPreferencesService } from '../../services/user-preferences.service';
import { AlfrescoApiService } from '../../services/alfresco-api.service';
import { LoginErrorEvent } from '../models/login-error.event';
import { LoginSubmitEvent } from '../models/login-submit.event';
import { LoginSuccessEvent } from '../models/login-success.event';
import { AppConfigService, AppConfigValues } from '../../app-config/app-config.service';
import { DomSanitizer } from '@angular/platform-browser';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '../../services/authentication.service';
import * as ɵngcc3 from '../../services/translation.service';
import * as ɵngcc4 from '../../services/log.service';
import * as ɵngcc5 from '@angular/router';
import * as ɵngcc6 from '../../app-config/app-config.service';
import * as ɵngcc7 from '../../services/user-preferences.service';
import * as ɵngcc8 from '@angular/platform-browser';
import * as ɵngcc9 from '../../services/alfresco-api.service';
import * as ɵngcc10 from '@angular/material/card';
import * as ɵngcc11 from '@angular/common';
import * as ɵngcc12 from '@angular/material/icon';
import * as ɵngcc13 from '@angular/material/form-field';
import * as ɵngcc14 from '@angular/material/input';
import * as ɵngcc15 from '@angular/material/button';
import * as ɵngcc16 from '@angular/material/progress-spinner';
import * as ɵngcc17 from '@angular/material/checkbox';
import * as ɵngcc18 from '@ngx-translate/core';

function LoginComponent_8_ng_template_0_Template(rf, ctx) { }
const _c0 = function (a0) { return [a0]; };
function LoginComponent_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, LoginComponent_8_ng_template_0_Template, 0, 0, "ng-template", 12);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r0.data))("ngForTemplate", ctx_r0.headerTemplate);
} }
function LoginComponent_img_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 13);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("alt", ɵngcc0.ɵɵpipeBind1(1, 2, "LOGIN.LOGO"));
    ɵngcc0.ɵɵproperty("src", ctx_r1.logoImageUrl, ɵngcc0.ɵɵsanitizeUrl);
} }
function LoginComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 15);
    ɵngcc0.ɵɵtext(2, "warning");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 16);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 1, ctx_r2.errorMsg));
} }
function LoginComponent_div_13_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 30);
    ɵngcc0.ɵɵelementStart(1, "span", 31);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r7.formError["username"]));
} }
function LoginComponent_div_13_span_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 32);
    ɵngcc0.ɵɵelementStart(1, "span", 33);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r8.formError["password"]));
} }
function LoginComponent_div_13_span_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 34);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "LOGIN.BUTTON.LOGIN"));
} }
function LoginComponent_div_13_div_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 35);
    ɵngcc0.ɵɵelementStart(1, "span", 34);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 36);
    ɵngcc0.ɵɵelement(5, "mat-spinner", 37);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, "LOGIN.BUTTON.CHECKING"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("diameter", 25);
} }
function LoginComponent_div_13_div_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 35);
    ɵngcc0.ɵɵelementStart(1, "span", 34);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "mat-icon", 38);
    ɵngcc0.ɵɵtext(5, "done");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "LOGIN.BUTTON.WELCOME"));
} }
function LoginComponent_div_13_div_22_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 39);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 40);
    ɵngcc0.ɵɵlistener("change", function LoginComponent_div_13_div_22_Template_mat_checkbox_change_1_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.rememberMe = !ctx_r13.rememberMe; });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", ctx_r12.rememberMe);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(3, 2, "LOGIN.LABEL.REMEMBER"), " ");
} }
const _c1 = function (a0) { return { "adf-is-invalid": a0 }; };
function LoginComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 17);
    ɵngcc0.ɵɵelementStart(2, "mat-form-field", 18);
    ɵngcc0.ɵɵelementStart(3, "input", 19);
    ɵngcc0.ɵɵlistener("blur", function LoginComponent_div_13_Template_input_blur_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.trimUsername($event); });
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, LoginComponent_div_13_span_5_Template, 4, 3, "span", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 21);
    ɵngcc0.ɵɵelementStart(7, "mat-form-field", 18);
    ɵngcc0.ɵɵelement(8, "input", 22);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementStart(10, "button", 23);
    ɵngcc0.ɵɵlistener("click", function LoginComponent_div_13_Template_button_click_10_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.toggleShowPassword($event); })("keyup.enter", function LoginComponent_div_13_Template_button_keyup_enter_10_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.toggleShowPassword($event); });
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementStart(12, "mat-icon", 24);
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(14, LoginComponent_div_13_span_14_Template, 4, 3, "span", 25);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(15);
    ɵngcc0.ɵɵelement(16, "br");
    ɵngcc0.ɵɵelementStart(17, "button", 26);
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵtemplate(19, LoginComponent_div_13_span_19_Template, 3, 3, "span", 27);
    ɵngcc0.ɵɵtemplate(20, LoginComponent_div_13_div_20_Template, 6, 4, "div", 28);
    ɵngcc0.ɵɵtemplate(21, LoginComponent_div_13_div_21_Template, 6, 3, "div", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(22, LoginComponent_div_13_div_22_Template, 4, 4, "div", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(27, _c1, ctx_r3.isErrorStyle(ctx_r3.form.controls.username)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(4, 19, "LOGIN.LABEL.USERNAME"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.formError["username"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(9, 21, "LOGIN.LABEL.PASSWORD"));
    ɵngcc0.ɵɵproperty("type", ctx_r3.isPasswordShow ? "text" : "password");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(11, 23, ctx_r3.isPasswordShow ? "LOGIN.ARIA-LABEL.HIDE-PASSWORD" : "LOGIN.ARIA-LABEL.SHOW-PASSWORD"))("data-automation-id", ctx_r3.isPasswordShow ? "hide_password" : "show_password");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.isPasswordShow ? "visibility" : "visibility_off", " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.formError["password"]);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassProp("adf-isChecking", ctx_r3.actualLoginStep === ctx_r3.LoginSteps.Checking)("adf-isWelcome", ctx_r3.actualLoginStep === ctx_r3.LoginSteps.Welcome);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r3.form.valid);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(18, 25, "LOGIN.BUTTON.LOGIN"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.actualLoginStep === ctx_r3.LoginSteps.Landing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.actualLoginStep === ctx_r3.LoginSteps.Checking);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.actualLoginStep === ctx_r3.LoginSteps.Welcome);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.showRememberMe);
} }
function LoginComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "button", 41);
    ɵngcc0.ɵɵlistener("click", function LoginComponent_div_14_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.implicitLogin(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "span", 34);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(2, 2, "LOGIN.BUTTON.SSO"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 4, "LOGIN.BUTTON.SSO"));
} }
function LoginComponent_mat_card_actions_15_2_ng_template_0_Template(rf, ctx) { }
function LoginComponent_mat_card_actions_15_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, LoginComponent_mat_card_actions_15_2_ng_template_0_Template, 0, 0, "ng-template", 12);
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r21.data))("ngForTemplate", ctx_r21.footerTemplate);
} }
function LoginComponent_mat_card_actions_15_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 44);
    ɵngcc0.ɵɵelementStart(1, "div", 45);
    ɵngcc0.ɵɵelementStart(2, "a", 46);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 47);
    ɵngcc0.ɵɵelementStart(6, "a", 46);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r22.needHelpLink, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, "LOGIN.ACTION.HELP"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r22.registerLink, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 6, "LOGIN.ACTION.REGISTER"));
} }
function LoginComponent_mat_card_actions_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-actions");
    ɵngcc0.ɵɵelementStart(1, "div", 42);
    ɵngcc0.ɵɵtemplate(2, LoginComponent_mat_card_actions_15_2_Template, 1, 4, undefined, 6);
    ɵngcc0.ɵɵtemplate(3, LoginComponent_mat_card_actions_15_div_3_Template, 9, 8, "div", 43);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.footerTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r5.footerTemplate && ctx_r5.showLoginActions);
} }
const _c2 = ["*"];
var LoginSteps;
(function (LoginSteps) {
    LoginSteps[LoginSteps["Landing"] = 0] = "Landing";
    LoginSteps[LoginSteps["Checking"] = 1] = "Checking";
    LoginSteps[LoginSteps["Welcome"] = 2] = "Welcome";
})(LoginSteps || (LoginSteps = {}));
export class LoginComponent {
    constructor(_fb, authService, translateService, logService, router, appConfig, userPreferences, route, sanitizer, alfrescoApiService) {
        this._fb = _fb;
        this.authService = authService;
        this.translateService = translateService;
        this.logService = logService;
        this.router = router;
        this.appConfig = appConfig;
        this.userPreferences = userPreferences;
        this.route = route;
        this.sanitizer = sanitizer;
        this.alfrescoApiService = alfrescoApiService;
        this.isPasswordShow = false;
        this.showRememberMe = true;
        this.showLoginActions = true;
        this.needHelpLink = '';
        this.registerLink = '';
        this.logoImageUrl = './assets/images/alfresco-logo.svg';
        this.backgroundImageUrl = './assets/images/background.svg';
        this.copyrightText = '\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';
        this.successRoute = null;
        this.success = new EventEmitter();
        this.error = new EventEmitter();
        this.executeSubmit = new EventEmitter();
        this.implicitFlow = false;
        this.isError = false;
        this.actualLoginStep = LoginSteps.Landing;
        this.LoginSteps = LoginSteps;
        this.rememberMe = true;
        this.minLength = 2;
        this.onDestroy$ = new Subject();
    }
    ngOnInit() {
        this.initFormError();
        this.initFormFieldsDefault();
        this.initFormFieldsMessages();
        this.successRoute = this.appConfig.get('successRoute', this.successRoute);
        if (this.authService.isLoggedIn()) {
            this.router.navigate([this.successRoute]);
        }
        else {
            if (this.authService.isOauth()) {
                const oauth = this.appConfig.get(AppConfigValues.OAUTHCONFIG, null);
                if (oauth && oauth.silentLogin) {
                    this.redirectToImplicitLogin();
                }
                else if (oauth && oauth.implicitFlow) {
                    this.implicitFlow = true;
                }
            }
            this.route.queryParams.subscribe((params) => {
                const url = params['redirectUrl'];
                const provider = this.appConfig.get(AppConfigValues.PROVIDERS);
                this.authService.setRedirect({ provider, url });
            });
        }
        if (this.fieldsValidation) {
            this.form = this._fb.group(this.fieldsValidation);
        }
        this.form.valueChanges
            .pipe(takeUntil(this.onDestroy$))
            .subscribe(data => this.onValueChanged(data));
    }
    ngOnDestroy() {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    }
    submit() {
        this.onSubmit(this.form.value);
    }
    redirectToImplicitLogin() {
        this.alfrescoApiService.getInstance().oauth2Auth.implicitLogin();
    }
    onSubmit(values) {
        this.disableError();
        const args = new LoginSubmitEvent({
            controls: { username: this.form.controls.username }
        });
        this.executeSubmit.emit(args);
        if (!args.defaultPrevented) {
            this.performLogin(values);
        }
    }
    implicitLogin() {
        if (this.authService.isLoggedIn()) {
            this.router.navigate([this.successRoute]);
        }
        this.authService.ssoImplicitLogin();
    }
    onValueChanged(data) {
        this.disableError();
        for (const field in this.formError) {
            if (field) {
                this.formError[field] = '';
                const hasError = (this.form.controls[field].errors && data[field] !== '') ||
                    (this.form.controls[field].dirty &&
                        !this.form.controls[field].valid);
                if (hasError) {
                    for (const key in this.form.controls[field].errors) {
                        if (key) {
                            const message = this._message[field][key];
                            if (message && message.value) {
                                const translated = this.translateService.instant(message.value, message.params);
                                this.formError[field] += translated;
                            }
                        }
                    }
                }
            }
        }
    }
    performLogin(values) {
        this.actualLoginStep = LoginSteps.Checking;
        this.authService
            .login(values.username, values.password, this.rememberMe)
            .subscribe((token) => {
            const redirectUrl = this.authService.getRedirect();
            this.actualLoginStep = LoginSteps.Welcome;
            this.userPreferences.setStoragePrefix(values.username);
            values.password = null;
            this.success.emit(new LoginSuccessEvent(token, values.username, null));
            if (redirectUrl) {
                this.authService.setRedirect(null);
                this.router.navigateByUrl(redirectUrl);
            }
            else if (this.successRoute) {
                this.router.navigate([this.successRoute]);
            }
        }, (err) => {
            this.actualLoginStep = LoginSteps.Landing;
            this.displayErrorMessage(err);
            this.isError = true;
            this.error.emit(new LoginErrorEvent(err));
        }, () => this.logService.info('Login done'));
    }
    displayErrorMessage(err) {
        if (err.error &&
            err.error.crossDomain &&
            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1) {
            this.errorMsg = err.error.message;
        }
        else if (err.status === 403 &&
            err.message.indexOf('Invalid CSRF-token') !== -1) {
            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';
        }
        else if (err.status === 403 &&
            err.message.indexOf('The system is currently in read-only mode') !==
                -1) {
            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';
        }
        else {
            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';
        }
    }
    addCustomFormError(field, msg) {
        this.formError[field] += msg;
    }
    addCustomValidationError(field, ruleId, msg, params) {
        this._message[field][ruleId] = {
            value: msg,
            params
        };
    }
    toggleShowPassword(event) {
        event.stopPropagation();
        this.isPasswordShow = !this.isPasswordShow;
    }
    isErrorStyle(field) {
        return !field.valid && field.dirty && !field.pristine;
    }
    trimUsername(event) {
        event.target.value = event.target.value.trim();
    }
    getBackgroundUrlImageUrl() {
        return this.sanitizer.bypassSecurityTrustStyle(`url(${this.backgroundImageUrl})`);
    }
    initFormError() {
        this.formError = {
            username: '',
            password: ''
        };
    }
    initFormFieldsMessages() {
        this._message = {
            username: {
                required: {
                    value: 'LOGIN.MESSAGES.USERNAME-REQUIRED'
                },
                minlength: {
                    value: 'LOGIN.MESSAGES.USERNAME-MIN',
                    params: {
                        minLength: this.minLength
                    }
                }
            },
            password: {
                required: {
                    value: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'
                }
            }
        };
    }
    initFormFieldsDefault() {
        this.form = this._fb.group({
            username: ['', Validators.compose([Validators.required, Validators.minLength(this.minLength)])],
            password: ['', Validators.required]
        });
    }
    disableError() {
        this.isError = false;
        this.initFormError();
    }
}
LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AuthenticationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TranslationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.LogService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.AppConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.UserPreferencesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.AlfrescoApiService)); };
LoginComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LoginComponent, selectors: [["adf-login"]], hostAttrs: [1, "adf-login"], inputs: { showRememberMe: "showRememberMe", showLoginActions: "showLoginActions", needHelpLink: "needHelpLink", registerLink: "registerLink", logoImageUrl: "logoImageUrl", backgroundImageUrl: "backgroundImageUrl", copyrightText: "copyrightText", successRoute: "successRoute", fieldsValidation: "fieldsValidation" }, outputs: { success: "success", error: "error", executeSubmit: "executeSubmit" }, ngContentSelectors: _c2, decls: 18, vars: 10, consts: [[1, "adf-login-content"], [1, "adf-ie11FixerParent"], [1, "adf-ie11FixerChild"], [1, "adf-login-card-wide"], ["id", "adf-login-form", "autocomplete", "off", 3, "formGroup", "submit"], [1, "adf-alfresco-logo"], [4, "ngIf"], ["id", "adf-login-img-logo", "class", "adf-img-logo", 3, "src", "alt", 4, "ngIf"], [1, "adf-login-controls"], [1, "adf-error-container"], ["id", "login-error", "data-automation-id", "login-error", "class", "adf-error  adf-error-message", 4, "ngIf"], ["data-automation-id", "login-copyright", 1, "adf-copyright"], ["ngFor", "", 3, "ngForOf", "ngForTemplate"], ["id", "adf-login-img-logo", 1, "adf-img-logo", 3, "src", "alt"], ["id", "login-error", "data-automation-id", "login-error", 1, "adf-error", "adf-error-message"], [1, "adf-error-icon"], [1, "adf-login-error-message"], [1, "adf-login__field", 3, "ngClass"], ["floatPlaceholder", "never", "color", "primary", 1, "adf-full-width"], ["matInput", "", "type", "text", "formControlName", "username", "autocapitalize", "none", "id", "username", "data-automation-id", "username", 1, "adf-full-width", 3, "placeholder", "blur"], ["class", "adf-login-validation", "for", "username", 4, "ngIf"], [1, "adf-login__field"], ["matInput", "", "formControlName", "password", "id", "password", "data-automation-id", "password", 3, "placeholder", "type"], ["matSuffix", "", "mat-icon-button", "", "type", "button", 3, "click", "keyup.enter"], [1, "adf-login-password-icon"], ["class", "adf-login-validation", "for", "password", 4, "ngIf"], ["type", "submit", "id", "login-button", "mat-raised-button", "", "color", "accent", "data-automation-id", "login-button", 1, "adf-login-button", 3, "disabled"], ["class", "adf-login-button-label", 4, "ngIf"], ["class", "adf-interactive-login-label", 4, "ngIf"], ["class", "adf-login__remember-me", 4, "ngIf"], ["for", "username", 1, "adf-login-validation"], ["id", "username-error", "data-automation-id", "username-error", 1, "adf-login-error"], ["for", "password", 1, "adf-login-validation"], ["id", "password-required", "data-automation-id", "password-required", 1, "adf-login-error"], [1, "adf-login-button-label"], [1, "adf-interactive-login-label"], [1, "adf-login-spinner-container"], ["id", "checking-spinner", 1, "adf-login-checking-spinner", 3, "diameter"], [1, "adf-welcome-icon"], [1, "adf-login__remember-me"], ["id", "adf-login-remember", "color", "primary", 1, "adf-login-remember-me", 3, "checked", "change"], ["type", "button", "id", "login-button-sso", "mat-raised-button", "", "color", "primary", "data-automation-id", "login-button-sso", 1, "adf-login-button", 3, "click"], [1, "adf-login-action-container"], ["class", "adf-login-action", 4, "ngIf"], [1, "adf-login-action"], ["id", "adf-login-action-left", 1, "adf-login-action-left"], [3, "href"], ["id", "adf-login-action-right", 1, "adf-login-action-right"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "mat-card", 3);
        ɵngcc0.ɵɵelementStart(4, "form", 4);
        ɵngcc0.ɵɵlistener("submit", function LoginComponent_Template_form_submit_4_listener() { return ctx.onSubmit(ctx.form.value); });
        ɵngcc0.ɵɵelementStart(5, "mat-card-header");
        ɵngcc0.ɵɵelementStart(6, "mat-card-title");
        ɵngcc0.ɵɵelementStart(7, "div", 5);
        ɵngcc0.ɵɵtemplate(8, LoginComponent_8_Template, 1, 4, undefined, 6);
        ɵngcc0.ɵɵtemplate(9, LoginComponent_img_9_Template, 2, 4, "img", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "mat-card-content", 8);
        ɵngcc0.ɵɵelementStart(11, "div", 9);
        ɵngcc0.ɵɵtemplate(12, LoginComponent_div_12_Template, 6, 3, "div", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(13, LoginComponent_div_13_Template, 23, 29, "div", 6);
        ɵngcc0.ɵɵtemplate(14, LoginComponent_div_14_Template, 6, 6, "div", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(15, LoginComponent_mat_card_actions_15_Template, 4, 2, "mat-card-actions", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "div", 11);
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("background-image", ctx.getBackgroundUrlImageUrl());
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("formGroup", ctx.form);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.headerTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.headerTemplate);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isError);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.implicitFlow);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.implicitFlow);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.footerTemplate || ctx.showLoginActions);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.copyrightText, " ");
    } }, directives: [ɵngcc10.MatCard, ɵngcc1.ɵangular_packages_forms_forms_y, ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc10.MatCardHeader, ɵngcc10.MatCardTitle, ɵngcc11.NgIf, ɵngcc10.MatCardContent, ɵngcc11.NgForOf, ɵngcc12.MatIcon, ɵngcc11.NgClass, ɵngcc13.MatFormField, ɵngcc14.MatInput, ɵngcc1.DefaultValueAccessor, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc15.MatButton, ɵngcc13.MatSuffix, ɵngcc16.MatSpinner, ɵngcc17.MatCheckbox, ɵngcc10.MatCardActions], pipes: [ɵngcc18.TranslatePipe], encapsulation: 2 });
LoginComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: AuthenticationService },
    { type: TranslationService },
    { type: LogService },
    { type: Router },
    { type: AppConfigService },
    { type: UserPreferencesService },
    { type: ActivatedRoute },
    { type: DomSanitizer },
    { type: AlfrescoApiService }
];
LoginComponent.propDecorators = {
    showRememberMe: [{ type: Input }],
    showLoginActions: [{ type: Input }],
    needHelpLink: [{ type: Input }],
    registerLink: [{ type: Input }],
    logoImageUrl: [{ type: Input }],
    backgroundImageUrl: [{ type: Input }],
    copyrightText: [{ type: Input }],
    fieldsValidation: [{ type: Input }],
    successRoute: [{ type: Input }],
    success: [{ type: Output }],
    error: [{ type: Output }],
    executeSubmit: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoginComponent, [{
        type: Component,
        args: [{
                selector: 'adf-login',
                template: "<div class=\"adf-login-content\" [style.background-image]=\"getBackgroundUrlImageUrl()\">\n    <div class=\"adf-ie11FixerParent\">\n        <div class=\"adf-ie11FixerChild\">\n\n            <mat-card class=\"adf-login-card-wide\">\n                <form id=\"adf-login-form\" [formGroup]=\"form\" (submit)=\"onSubmit(form.value)\" autocomplete=\"off\">\n                    <mat-card-header>\n                        <mat-card-title>\n                            <div class=\"adf-alfresco-logo\">\n                                <!--HEADER TEMPLATE-->\n                                <ng-template *ngIf=\"headerTemplate\"\n                                             ngFor [ngForOf]=\"[data]\"\n                                             [ngForTemplate]=\"headerTemplate\">\n                                </ng-template>\n                                <img *ngIf=\"!headerTemplate\" id=\"adf-login-img-logo\" class=\"adf-img-logo\" [src]=\"logoImageUrl\"\n                                     alt=\"{{'LOGIN.LOGO' | translate }}\">\n                            </div>\n                        </mat-card-title>\n                    </mat-card-header>\n\n                    <mat-card-content class=\"adf-login-controls\">\n\n                        <!--ERRORS AREA-->\n                        <div class=\"adf-error-container\">\n                            <div *ngIf=\"isError\" id=\"login-error\" data-automation-id=\"login-error\"\n                                 class=\"adf-error  adf-error-message\">\n                                <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                                <span class=\"adf-login-error-message\">{{errorMsg | translate }}</span>\n                            </div>\n                        </div>\n\n                        <div *ngIf=\"!implicitFlow\">\n\n                            <!--USERNAME FIELD-->\n                            <div class=\"adf-login__field\"\n                                 [ngClass]=\"{'adf-is-invalid': isErrorStyle(form.controls.username)}\">\n                                <mat-form-field class=\"adf-full-width\" floatPlaceholder=\"never\" color=\"primary\">\n                                    <input matInput placeholder=\"{{'LOGIN.LABEL.USERNAME' | translate }}\"\n                                           type=\"text\"\n                                           class=\"adf-full-width\"\n                                           formControlName=\"username\"\n                                           autocapitalize=\"none\"\n                                           id=\"username\"\n                                           data-automation-id=\"username\"\n                                           (blur)=\"trimUsername($event)\">\n                                </mat-form-field>\n\n                                <span class=\"adf-login-validation\" for=\"username\" *ngIf=\"formError['username']\">\n                                <span id=\"username-error\" class=\"adf-login-error\" data-automation-id=\"username-error\">{{formError['username'] | translate }}</span>\n                            </span>\n                            </div>\n\n                            <!--PASSWORD FIELD-->\n                            <div class=\"adf-login__field\">\n                                <mat-form-field class=\"adf-full-width\" floatPlaceholder=\"never\" color=\"primary\">\n                                    <input matInput placeholder=\"{{'LOGIN.LABEL.PASSWORD' | translate }}\"\n                                           [type]=\"isPasswordShow ? 'text' : 'password'\"\n                                           formControlName=\"password\"\n                                           id=\"password\"\n                                           data-automation-id=\"password\">\n                                        <button\n                                            matSuffix\n                                            mat-icon-button\n                                            type=\"button\"\n                                            [attr.aria-label]=\"(isPasswordShow ?\n                                                    'LOGIN.ARIA-LABEL.HIDE-PASSWORD':\n                                                    'LOGIN.ARIA-LABEL.SHOW-PASSWORD'\n                                                ) | translate\"\n                                            (click)=\"toggleShowPassword($event)\"\n                                            (keyup.enter)=\"toggleShowPassword($event)\"\n                                            [attr.data-automation-id]=\"isPasswordShow ? 'hide_password':'show_password'\">\n                                           <mat-icon class=\"adf-login-password-icon\">\n                                               {{ isPasswordShow ? 'visibility':'visibility_off' }}\n                                            </mat-icon>\n                                       </button>\n                                </mat-form-field>\n                                <span class=\"adf-login-validation\" for=\"password\" *ngIf=\"formError['password']\">\n                                <span id=\"password-required\" class=\"adf-login-error\"\n                                      data-automation-id=\"password-required\">{{formError['password'] | translate }}</span>\n                            </span>\n                            </div>\n\n                            <!--CUSTOM CONTENT-->\n                            <ng-content></ng-content>\n\n                            <br>\n                            <button type=\"submit\" id=\"login-button\"\n                                    class=\"adf-login-button\"\n                                    mat-raised-button color=\"accent\"\n                                    [class.adf-isChecking]=\"actualLoginStep === LoginSteps.Checking\"\n                                    [class.adf-isWelcome]=\"actualLoginStep === LoginSteps.Welcome\"\n                                    data-automation-id=\"login-button\" [disabled]=\"!form.valid\"\n                                    [attr.aria-label]=\"'LOGIN.BUTTON.LOGIN' | translate\">\n\n                                <span *ngIf=\"actualLoginStep === LoginSteps.Landing\" class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.LOGIN' | translate }}</span>\n\n                                <div *ngIf=\"actualLoginStep === LoginSteps.Checking\"\n                                     class=\"adf-interactive-login-label\">\n                                    <span\n                                        class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.CHECKING' | translate }}</span>\n                                    <div class=\"adf-login-spinner-container\">\n                                        <mat-spinner id=\"checking-spinner\" class=\"adf-login-checking-spinner\"\n                                                     [diameter]=\"25\"></mat-spinner>\n                                    </div>\n                                </div>\n\n\n                                <div *ngIf=\"actualLoginStep === LoginSteps.Welcome\" class=\"adf-interactive-login-label\">\n                                    <span class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.WELCOME' | translate }}</span>\n                                    <mat-icon class=\"adf-welcome-icon\">done</mat-icon>\n                                </div>\n\n                            </button>\n                            <div *ngIf=\"showRememberMe\" class=\"adf-login__remember-me\">\n                                <mat-checkbox id=\"adf-login-remember\" color=\"primary\" class=\"adf-login-remember-me\"\n                                              [checked]=\"rememberMe\"\n                                              (change)=\"rememberMe = !rememberMe\">{{ 'LOGIN.LABEL.REMEMBER' | translate }}\n                                </mat-checkbox>\n                            </div>\n                        </div>\n\n                        <div *ngIf=\"implicitFlow\">\n                            <button type=\"button\" (click)=\"implicitLogin()\" id=\"login-button-sso\"\n                                    [attr.aria-label]=\"'LOGIN.BUTTON.SSO' | translate\"\n                                    class=\"adf-login-button\"\n                                    mat-raised-button color=\"primary\"\n                                    data-automation-id=\"login-button-sso\">\n                                <span  class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.SSO' | translate }}</span>\n                            </button>\n                        </div>\n\n                    </mat-card-content>\n\n                    <mat-card-actions *ngIf=\"footerTemplate || showLoginActions\">\n\n                        <div class=\"adf-login-action-container\">\n                            <!--FOOTER TEMPLATE-->\n                            <ng-template *ngIf=\"footerTemplate\"\n                                         ngFor [ngForOf]=\"[data]\"\n                                         [ngForTemplate]=\"footerTemplate\">\n                            </ng-template>\n                            <div class=\"adf-login-action\" *ngIf=\"!footerTemplate && showLoginActions\">\n                                <div id=\"adf-login-action-left\" class=\"adf-login-action-left\">\n                                    <a href=\"{{needHelpLink}}\">{{'LOGIN.ACTION.HELP' | translate }}</a>\n                                </div>\n                                <div id=\"adf-login-action-right\" class=\"adf-login-action-right\">\n                                    <a href=\"{{registerLink}}\">{{'LOGIN.ACTION.REGISTER' | translate }}</a>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card-actions>\n\n                </form>\n            </mat-card>\n\n            <div class=\"adf-copyright\" data-automation-id=\"login-copyright\">\n                {{ copyrightText }}\n            </div>\n\n        </div>\n    </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                host: {
                    class: 'adf-login'
                }
            }]
    }], function () { return [{ type: ɵngcc1.FormBuilder }, { type: ɵngcc2.AuthenticationService }, { type: ɵngcc3.TranslationService }, { type: ɵngcc4.LogService }, { type: ɵngcc5.Router }, { type: ɵngcc6.AppConfigService }, { type: ɵngcc7.UserPreferencesService }, { type: ɵngcc5.ActivatedRoute }, { type: ɵngcc8.DomSanitizer }, { type: ɵngcc9.AlfrescoApiService }]; }, { showRememberMe: [{
            type: Input
        }], showLoginActions: [{
            type: Input
        }], needHelpLink: [{
            type: Input
        }], registerLink: [{
            type: Input
        }], logoImageUrl: [{
            type: Input
        }], backgroundImageUrl: [{
            type: Input
        }], copyrightText: [{
            type: Input
        }], successRoute: [{
            type: Input
        }], success: [{
            type: Output
        }], error: [{
            type: Output
        }], executeSubmit: [{
            type: Output
        }], fieldsValidation: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,