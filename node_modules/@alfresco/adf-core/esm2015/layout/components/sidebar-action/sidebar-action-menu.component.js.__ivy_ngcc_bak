/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';
export class SidebarActionMenuComponent {
    constructor() {
        this.width = 272;
    }
    isExpanded() {
        return this.expanded;
    }
}
SidebarActionMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-sidebar-action-menu',
                template: "<div class=\"adf-sidebar-action-menu\">\n    <button *ngIf=\"isExpanded()\" mat-raised-button class=\"adf-sidebar-action-menu-button\" data-automation-id=\"create-button\" [matMenuTriggerFor]=\"adfSidebarMenu\">\n        <span *ngIf=\"title\" class=\"adf-sidebar-action-menu-text\">{{ title }}</span>\n        <ng-content select=\"[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]\"></ng-content>\n    </button>\n\n    <div *ngIf=\"!isExpanded()\" class=\"adf-sidebar-action-menu-icon\" [matMenuTriggerFor]=\"adfSidebarMenu\">\n        <ng-content select=\"[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]\"></ng-content>\n    </div>\n\n    <mat-menu #adfSidebarMenu=\"matMenu\" class=\"adf-sidebar-action-menu-panel\" [overlapTrigger]=\"false\" yPosition=\"below\">\n        <div class=\"adf-sidebar-action-menu-options\" [style.width.px]=\"width\">\n            <ng-content select=\"[adf-sidebar-menu-options], [sidebar-menu-options]\"></ng-content>\n        </div>\n    </mat-menu>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-sidebar-action-menu' }
            },] }
];
SidebarActionMenuComponent.propDecorators = {
    title: [{ type: Input }],
    expanded: [{ type: Input }],
    width: [{ type: Input }]
};
export class SidebarMenuDirective {
}
SidebarMenuDirective.decorators = [
    { type: Directive, args: [{ selector: '[adf-sidebar-menu-options], [sidebar-menu-options]' },] }
];
export class SidebarMenuTitleIconDirective {
}
SidebarMenuTitleIconDirective.decorators = [
    { type: Directive, args: [{ selector: '[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]' },] }
];
export class SidebarMenuExpandIconDirective {
}
SidebarMenuExpandIconDirective.decorators = [
    { type: Directive, args: [{ selector: '[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1hY3Rpb24tbWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdHJhdmlzL2J1aWxkL0FsZnJlc2NvL2FsZnJlc2NvLW5nMi1jb21wb25lbnRzL2xpYi9jb3JlLyIsInNvdXJjZXMiOlsibGF5b3V0L2NvbXBvbmVudHMvc2lkZWJhci1hY3Rpb24vc2lkZWJhci1hY3Rpb24tbWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBVXhHLE1BQU0sT0FBTywwQkFBMEI7SUFSdkM7UUFvQkksVUFBSyxHQUFXLEdBQUcsQ0FBQztJQUt4QixDQUFDO0lBSEcsVUFBVTtRQUNOLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDOzs7WUF4QkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLCsvQkFBbUQ7Z0JBQ25ELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtnQkFDckMsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFO2FBQy9DOzs7b0JBS0ksS0FBSzt1QkFJTCxLQUFLO29CQUlMLEtBQUs7O0FBV3FFLE1BQU0sT0FBTyxvQkFBb0I7OztZQUEvRyxTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsb0RBQW9ELEVBQUU7O0FBQ1EsTUFBTSxPQUFPLDZCQUE2Qjs7O1lBQTlILFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSwwREFBMEQsRUFBRTs7QUFDSSxNQUFNLE9BQU8sOEJBQThCOzs7WUFBakksU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLDREQUE0RCxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRGlyZWN0aXZlLCBJbnB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtc2lkZWJhci1hY3Rpb24tbWVudScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NpZGViYXItYWN0aW9uLW1lbnUuY29tcG9uZW50Lmh0bWwnLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyAnY2xhc3MnOiAnYWRmLXNpZGViYXItYWN0aW9uLW1lbnUnIH1cbn0pXG5cbmV4cG9ydCBjbGFzcyBTaWRlYmFyQWN0aW9uTWVudUNvbXBvbmVudCB7XG5cbiAgICAvKiogVGhlIHRpdGxlIG9mIHRoZSBzaWRlYmFyIGFjdGlvbi4gKi9cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlOiBzdHJpbmc7XG5cbiAgICAvKiogVG9nZ2xlIHRoZSBzaWRlYmFyIGFjdGlvbiBtZW51IG9uIGV4cGFuZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGV4cGFuZGVkOiBib29sZWFuO1xuXG4gICAgLyoqIFdpZHRoIGluIHBpeGVscyBmb3Igc2lkZWJhciBhY3Rpb24gbWVudSBvcHRpb25zLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgd2lkdGg6IG51bWJlciA9IDI3MjtcblxuICAgIGlzRXhwYW5kZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmV4cGFuZGVkO1xuICAgIH1cbn1cblxuLyoqXG4gKiBEaXJlY3RpdmUgc2VsZWN0b3JzIHdpdGhvdXQgYWRmLSBwcmVmaXggd2lsbCBiZSBkZXByZWNhdGVkIG9uIDMuMC4wXG4gKi9cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1thZGYtc2lkZWJhci1tZW51LW9wdGlvbnNdLCBbc2lkZWJhci1tZW51LW9wdGlvbnNdJyB9KSBleHBvcnQgY2xhc3MgU2lkZWJhck1lbnVEaXJlY3RpdmUge31cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1thZGYtc2lkZWJhci1tZW51LXRpdGxlLWljb25dLCBbc2lkZWJhci1tZW51LXRpdGxlLWljb25dJyB9KSBleHBvcnQgY2xhc3MgU2lkZWJhck1lbnVUaXRsZUljb25EaXJlY3RpdmUgeyB9XG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbYWRmLXNpZGViYXItbWVudS1leHBhbmQtaWNvbl0sIFtzaWRlYmFyLW1lbnUtZXhwYW5kLWljb25dJyB9KSBleHBvcnQgY2xhc3MgU2lkZWJhck1lbnVFeHBhbmRJY29uRGlyZWN0aXZlIHsgfVxuIl19