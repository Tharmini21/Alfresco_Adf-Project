/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
export class HeaderLayoutComponent {
    constructor() {
        this.redirectUrl = '/';
        this.showSidenavToggle = true;
        this.clicked = new EventEmitter();
        this.expandedSidenav = true;
        this.position = 'start';
    }
    toggleMenu() {
        this.clicked.emit(true);
        this.expandedSidenav = !this.expandedSidenav;
    }
    ngOnInit() {
        if (!this.logo) {
            this.logo = './assets/images/logo.png';
        }
    }
}
HeaderLayoutComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-layout-header',
                template: "<mat-toolbar\n    [color]=\"color\"\n    [style.background-color]=\"color\"\n    role=\"heading\"\n    aria-level=\"1\">\n    <button\n        *ngIf=\"showSidenavToggle && position === 'start'\"\n        id=\"adf-sidebar-toggle-start\"\n        data-automation-id=\"adf-menu-icon\"\n        class=\"mat-icon-button adf-menu-icon\"\n        mat-icon-button\n        (click)=\"toggleMenu()\"\n        [attr.aria-expanded]=\"expandedSidenav\"\n        [attr.aria-label]=\"'CORE.HEADER.ACCESSIBILITY.SIDEBAR_TOGGLE_BUTTON_ARIA_LABEL' | translate\">\n        <mat-icon\n            class=\"mat-icon material-icon\"\n            role=\"img\"\n            aria-hidden=\"true\">menu</mat-icon>\n    </button>\n\n    <a [routerLink]=\"redirectUrl\" title=\"{{ tooltip }}\">\n        <img\n            src=\"{{ logo }}\"\n            class=\"adf-app-logo\"\n            alt=\"{{ 'CORE.HEADER.LOGO_ARIA' | translate }}\"\n        />\n    </a>\n\n    <span\n        role=\"link\"\n        [attr.aria-label]=\"title | translate\"\n        [routerLink]=\"redirectUrl\"\n        fxFlex=\"1 1 auto\"\n        fxShow\n        fxHide.lt-sm=\"true\"\n        class=\"adf-app-title\"\n        >{{ title }}</span>\n    <ng-content></ng-content>\n\n    <button\n        *ngIf=\"showSidenavToggle && position === 'end'\"\n        id=\"adf-sidebar-toggle-end\"\n        data-automation-id=\"adf-menu-icon\"\n        class=\"mat-icon-button adf-menu-icon\"\n        mat-icon-button\n        (click)=\"toggleMenu()\"\n        [attr.aria-expanded]=\"expandedSidenav\"\n        [attr.aria-label]=\"'CORE.HEADER.ACCESSIBILITY.SIDEBAR_TOGGLE_BUTTON_ARIA_LABEL' | translate\">\n    >\n        <mat-icon\n            class=\"mat-icon material-icon\"\n            role=\"img\"\n            aria-hidden=\"true\">menu</mat-icon>\n    </button>\n</mat-toolbar>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-layout-header' }
            },] }
];
HeaderLayoutComponent.propDecorators = {
    title: [{ type: Input }],
    logo: [{ type: Input }],
    redirectUrl: [{ type: Input }],
    tooltip: [{ type: Input }],
    color: [{ type: Input }],
    showSidenavToggle: [{ type: Input }],
    clicked: [{ type: Output }],
    expandedSidenav: [{ type: Input }],
    position: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvIiwic291cmNlcyI6WyJsYXlvdXQvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFVLE1BQU0sZUFBZSxDQUFDO0FBU2xHLE1BQU0sT0FBTyxxQkFBcUI7SUFObEM7UUFjYSxnQkFBVyxHQUFtQixHQUFHLENBQUM7UUFlbEMsc0JBQWlCLEdBQVksSUFBSSxDQUFDO1FBR2pDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBR3ZDLG9CQUFlLEdBQVksSUFBSSxDQUFDO1FBR2hDLGFBQVEsR0FBRyxPQUFPLENBQUM7SUFZaEMsQ0FBQztJQVZHLFVBQVU7UUFDTixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QixJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUNqRCxDQUFDO0lBRUQsUUFBUTtRQUNKLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1osSUFBSSxDQUFDLElBQUksR0FBRywwQkFBMEIsQ0FBQztTQUMxQztJQUNMLENBQUM7OztZQWpESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsOHlEQUFzQztnQkFDdEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxtQkFBbUIsRUFBRTthQUN2Qzs7O29CQUdJLEtBQUs7bUJBR0wsS0FBSzswQkFHTCxLQUFLO3NCQUdMLEtBQUs7b0JBTUwsS0FBSztnQ0FNTCxLQUFLO3NCQUdMLE1BQU07OEJBR04sS0FBSzt1QkFHTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdFbmNhcHN1bGF0aW9uLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1sYXlvdXQtaGVhZGVyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHsgY2xhc3M6ICdhZGYtbGF5b3V0LWhlYWRlcicgfVxufSlcbmV4cG9ydCBjbGFzcyBIZWFkZXJMYXlvdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIC8qKiBUaXRsZSBvZiB0aGUgYXBwbGljYXRpb24uICovXG4gICAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcblxuICAgIC8qKiBQYXRoIHRvIGFuIGltYWdlIGZpbGUgZm9yIHRoZSBhcHBsaWNhdGlvbiBsb2dvLiAqL1xuICAgIEBJbnB1dCgpIGxvZ286IHN0cmluZztcblxuICAgIC8qKiBUaGUgcm91dGVyIGxpbmsgZm9yIHRoZSBhcHBsaWNhdGlvbiBsb2dvLCB3aGVuIGNsaWNrZWQuICovXG4gICAgQElucHV0KCkgcmVkaXJlY3RVcmw6IHN0cmluZyB8IGFueVtdID0gJy8nO1xuXG4gICAgLyoqIFRoZSB0b29sdGlwIHRleHQgZm9yIHRoZSBhcHBsaWNhdGlvbiBsb2dvLiAqL1xuICAgIEBJbnB1dCgpIHRvb2x0aXA6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEJhY2tncm91bmQgY29sb3IgZm9yIHRoZSBoZWFkZXIuIEl0IGNhbiBiZSBhbnkgaGV4IGNvbG9yIGNvZGUgb3Igb25lXG4gICAgICogb2YgdGhlIE1hdGVyaWFsIHRoZW1lIGNvbG9yczogJ3ByaW1hcnknLCAnYWNjZW50JyBvciAnd2FybicuXG4gICAgICovXG4gICAgQElucHV0KCkgY29sb3I6IFRoZW1lUGFsZXR0ZTtcblxuICAgIC8qKlxuICAgICAqIFRvZ2dsZXMgd2hldGhlciB0aGUgc2lkZW5hdiBidXR0b24gd2lsbCBiZSBkaXNwbGF5ZWQgaW4gdGhlIGhlYWRlclxuICAgICAqIG9yIG5vdC5cbiAgICAgKi9cbiAgICBASW5wdXQoKSBzaG93U2lkZW5hdlRvZ2dsZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBzaWRlbmF2IGJ1dHRvbiBpcyBjbGlja2VkLiAqL1xuICAgIEBPdXRwdXQoKSBjbGlja2VkID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gICAgLyoqIGV4cGFuZGVkU2lkZW5hdjogVG9nZ2xlcyB0aGUgZXhwYW5kZWQgc3RhdGUgb2YgdGhlIGNvbXBvbmVudC4gKi9cbiAgICBASW5wdXQoKSBleHBhbmRlZFNpZGVuYXY6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFRoZSBzaWRlIG9mIHRoZSBwYWdlIHRoYXQgdGhlIGRyYXdlciBpcyBhdHRhY2hlZCB0byAoY2FuIGJlICdzdGFydCcgb3IgJ2VuZCcpICovXG4gICAgQElucHV0KCkgcG9zaXRpb24gPSAnc3RhcnQnO1xuXG4gICAgdG9nZ2xlTWVudSgpIHtcbiAgICAgICAgdGhpcy5jbGlja2VkLmVtaXQodHJ1ZSk7XG4gICAgICAgIHRoaXMuZXhwYW5kZWRTaWRlbmF2ID0gIXRoaXMuZXhwYW5kZWRTaWRlbmF2O1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZiAoIXRoaXMubG9nbykge1xuICAgICAgICAgICAgdGhpcy5sb2dvID0gJy4vYXNzZXRzL2ltYWdlcy9sb2dvLnBuZyc7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=