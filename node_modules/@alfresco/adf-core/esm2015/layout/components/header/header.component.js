/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/toolbar';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/router';
import * as ɵngcc4 from '@angular/material/button';
import * as ɵngcc5 from '@angular/material/icon';
import * as ɵngcc6 from '@ngx-translate/core';

function HeaderLayoutComponent_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 6);
    ɵngcc0.ɵɵlistener("click", function HeaderLayoutComponent_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.toggleMenu(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 7);
    ɵngcc0.ɵɵtext(3, "menu");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-expanded", ctx_r0.expandedSidenav)("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "CORE.HEADER.ACCESSIBILITY.SIDEBAR_TOGGLE_BUTTON_ARIA_LABEL"));
} }
function HeaderLayoutComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 8);
    ɵngcc0.ɵɵlistener("click", function HeaderLayoutComponent_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.toggleMenu(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2, " > ");
    ɵngcc0.ɵɵelementStart(3, "mat-icon", 7);
    ɵngcc0.ɵɵtext(4, "menu");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-expanded", ctx_r1.expandedSidenav)("aria-label", ɵngcc0.ɵɵpipeBind1(1, 2, "CORE.HEADER.ACCESSIBILITY.SIDEBAR_TOGGLE_BUTTON_ARIA_LABEL"));
} }
const _c0 = ["*"];
export class HeaderLayoutComponent {
    constructor() {
        this.redirectUrl = '/';
        this.showSidenavToggle = true;
        this.clicked = new EventEmitter();
        this.expandedSidenav = true;
        this.position = 'start';
    }
    toggleMenu() {
        this.clicked.emit(true);
        this.expandedSidenav = !this.expandedSidenav;
    }
    ngOnInit() {
        if (!this.logo) {
            this.logo = './assets/images/logo.png';
        }
    }
}
HeaderLayoutComponent.ɵfac = function HeaderLayoutComponent_Factory(t) { return new (t || HeaderLayoutComponent)(); };
HeaderLayoutComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderLayoutComponent, selectors: [["adf-layout-header"]], hostAttrs: [1, "adf-layout-header"], inputs: { redirectUrl: "redirectUrl", showSidenavToggle: "showSidenavToggle", expandedSidenav: "expandedSidenav", position: "position", logo: "logo", title: "title", tooltip: "tooltip", color: "color" }, outputs: { clicked: "clicked" }, ngContentSelectors: _c0, decls: 10, vars: 16, consts: [["role", "heading", "aria-level", "1", 3, "color"], ["id", "adf-sidebar-toggle-start", "data-automation-id", "adf-menu-icon", "class", "mat-icon-button adf-menu-icon", "mat-icon-button", "", 3, "click", 4, "ngIf"], [3, "routerLink", "title"], [1, "adf-app-logo", 3, "src", "alt"], ["role", "link", "fxFlex", "1 1 auto", "fxShow", "", "fxHide.lt-sm", "true", 1, "adf-app-title", 3, "routerLink"], ["id", "adf-sidebar-toggle-end", "data-automation-id", "adf-menu-icon", "class", "mat-icon-button adf-menu-icon", "mat-icon-button", "", 3, "click", 4, "ngIf"], ["id", "adf-sidebar-toggle-start", "data-automation-id", "adf-menu-icon", "mat-icon-button", "", 1, "mat-icon-button", "adf-menu-icon", 3, "click"], ["role", "img", "aria-hidden", "true", 1, "mat-icon", "material-icon"], ["id", "adf-sidebar-toggle-end", "data-automation-id", "adf-menu-icon", "mat-icon-button", "", 1, "mat-icon-button", "adf-menu-icon", 3, "click"]], template: function HeaderLayoutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "mat-toolbar", 0);
        ɵngcc0.ɵɵtemplate(1, HeaderLayoutComponent_button_1_Template, 4, 4, "button", 1);
        ɵngcc0.ɵɵelementStart(2, "a", 2);
        ɵngcc0.ɵɵelement(3, "img", 3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "span", 4);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(8);
        ɵngcc0.ɵɵtemplate(9, HeaderLayoutComponent_button_9_Template, 5, 4, "button", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("background-color", ctx.color);
        ɵngcc0.ɵɵproperty("color", ctx.color);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSidenavToggle && ctx.position === "start");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ctx.tooltip);
        ɵngcc0.ɵɵproperty("routerLink", ctx.redirectUrl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("src", ctx.logo, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵpropertyInterpolate("alt", ɵngcc0.ɵɵpipeBind1(4, 12, "CORE.HEADER.LOGO_ARIA"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("routerLink", ctx.redirectUrl);
        ɵngcc0.ɵɵattribute("aria-label", ɵngcc0.ɵɵpipeBind1(6, 14, ctx.title));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSidenavToggle && ctx.position === "end");
    } }, directives: [ɵngcc1.MatToolbar, ɵngcc2.NgIf, ɵngcc3.RouterLinkWithHref, ɵngcc3.RouterLink, ɵngcc4.MatButton, ɵngcc5.MatIcon], pipes: [ɵngcc6.TranslatePipe], encapsulation: 2 });
HeaderLayoutComponent.propDecorators = {
    title: [{ type: Input }],
    logo: [{ type: Input }],
    redirectUrl: [{ type: Input }],
    tooltip: [{ type: Input }],
    color: [{ type: Input }],
    showSidenavToggle: [{ type: Input }],
    clicked: [{ type: Output }],
    expandedSidenav: [{ type: Input }],
    position: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderLayoutComponent, [{
        type: Component,
        args: [{
                selector: 'adf-layout-header',
                template: "<mat-toolbar\n    [color]=\"color\"\n    [style.background-color]=\"color\"\n    role=\"heading\"\n    aria-level=\"1\">\n    <button\n        *ngIf=\"showSidenavToggle && position === 'start'\"\n        id=\"adf-sidebar-toggle-start\"\n        data-automation-id=\"adf-menu-icon\"\n        class=\"mat-icon-button adf-menu-icon\"\n        mat-icon-button\n        (click)=\"toggleMenu()\"\n        [attr.aria-expanded]=\"expandedSidenav\"\n        [attr.aria-label]=\"'CORE.HEADER.ACCESSIBILITY.SIDEBAR_TOGGLE_BUTTON_ARIA_LABEL' | translate\">\n        <mat-icon\n            class=\"mat-icon material-icon\"\n            role=\"img\"\n            aria-hidden=\"true\">menu</mat-icon>\n    </button>\n\n    <a [routerLink]=\"redirectUrl\" title=\"{{ tooltip }}\">\n        <img\n            src=\"{{ logo }}\"\n            class=\"adf-app-logo\"\n            alt=\"{{ 'CORE.HEADER.LOGO_ARIA' | translate }}\"\n        />\n    </a>\n\n    <span\n        role=\"link\"\n        [attr.aria-label]=\"title | translate\"\n        [routerLink]=\"redirectUrl\"\n        fxFlex=\"1 1 auto\"\n        fxShow\n        fxHide.lt-sm=\"true\"\n        class=\"adf-app-title\"\n        >{{ title }}</span>\n    <ng-content></ng-content>\n\n    <button\n        *ngIf=\"showSidenavToggle && position === 'end'\"\n        id=\"adf-sidebar-toggle-end\"\n        data-automation-id=\"adf-menu-icon\"\n        class=\"mat-icon-button adf-menu-icon\"\n        mat-icon-button\n        (click)=\"toggleMenu()\"\n        [attr.aria-expanded]=\"expandedSidenav\"\n        [attr.aria-label]=\"'CORE.HEADER.ACCESSIBILITY.SIDEBAR_TOGGLE_BUTTON_ARIA_LABEL' | translate\">\n    >\n        <mat-icon\n            class=\"mat-icon material-icon\"\n            role=\"img\"\n            aria-hidden=\"true\">menu</mat-icon>\n    </button>\n</mat-toolbar>\n",
                encapsulation: ViewEncapsulation.None,
                host: { class: 'adf-layout-header' }
            }]
    }], function () { return []; }, { redirectUrl: [{
            type: Input
        }], showSidenavToggle: [{
            type: Input
        }], clicked: [{
            type: Output
        }], expandedSidenav: [{
            type: Input
        }], position: [{
            type: Input
        }], logo: [{
            type: Input
        }], title: [{
            type: Input
        }], tooltip: [{
            type: Input
        }], color: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS90cmF2aXMvYnVpbGQvQWxmcmVzY28vYWxmcmVzY28tbmcyLWNvbXBvbmVudHMvbGliL2NvcmUvbGF5b3V0L2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTbEcsTUFBTSxPQUFPLHFCQUFxQjtBQUFHLElBTnJDO0FBQ0csUUFhVSxnQkFBVyxHQUFtQixHQUFHLENBQUM7QUFDL0MsUUFjYSxzQkFBaUIsR0FBWSxJQUFJLENBQUM7QUFDL0MsUUFFYyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztBQUNwRCxRQUVhLG9CQUFlLEdBQVksSUFBSSxDQUFDO0FBQzdDLFFBRWEsYUFBUSxHQUFHLE9BQU8sQ0FBQztBQUNoQyxJQVdBLENBQUM7QUFDRCxJQVhJLFVBQVU7QUFDZCxRQUFRLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2hDLFFBQVEsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7QUFDckQsSUFBSSxDQUFDO0FBQ0wsSUFDSSxRQUFRO0FBQ1osUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtBQUN4QixZQUFZLElBQUksQ0FBQyxJQUFJLEdBQUcsMEJBQTBCLENBQUM7QUFDbkQsU0FBUztBQUNULElBQUksQ0FBQztBQUNMO2lEQWxEQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjthQUM3Qjs7Ozs7Ozs7OzRCQUFzQztPQUN0QyxhQUFhLEVBQUU7YUFBaUIsQ0FBQyxJQUFJO0tBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRTtPQUFtQixFQUFFLGNBQ3ZDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswTEFDSTtBQUFDO0FBQXlDLG9CQUUxQyxLQUFLO0FBQUssbUJBR1YsS0FBSztBQUFLLDBCQUdWLEtBQUs7QUFBSyxzQkFHVixLQUFLO0FBQUssb0JBTVYsS0FBSztBQUFLLGdDQU1WLEtBQUs7QUFBSyxzQkFHVixNQUFNO0FBQUssOEJBR1gsS0FBSztBQUFLLHVCQUdWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0VuY2Fwc3VsYXRpb24sIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWxheW91dC1oZWFkZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyBjbGFzczogJ2FkZi1sYXlvdXQtaGVhZGVyJyB9XG59KVxuZXhwb3J0IGNsYXNzIEhlYWRlckxheW91dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgLyoqIFRpdGxlIG9mIHRoZSBhcHBsaWNhdGlvbi4gKi9cbiAgICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuXG4gICAgLyoqIFBhdGggdG8gYW4gaW1hZ2UgZmlsZSBmb3IgdGhlIGFwcGxpY2F0aW9uIGxvZ28uICovXG4gICAgQElucHV0KCkgbG9nbzogc3RyaW5nO1xuXG4gICAgLyoqIFRoZSByb3V0ZXIgbGluayBmb3IgdGhlIGFwcGxpY2F0aW9uIGxvZ28sIHdoZW4gY2xpY2tlZC4gKi9cbiAgICBASW5wdXQoKSByZWRpcmVjdFVybDogc3RyaW5nIHwgYW55W10gPSAnLyc7XG5cbiAgICAvKiogVGhlIHRvb2x0aXAgdGV4dCBmb3IgdGhlIGFwcGxpY2F0aW9uIGxvZ28uICovXG4gICAgQElucHV0KCkgdG9vbHRpcDogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQmFja2dyb3VuZCBjb2xvciBmb3IgdGhlIGhlYWRlci4gSXQgY2FuIGJlIGFueSBoZXggY29sb3IgY29kZSBvciBvbmVcbiAgICAgKiBvZiB0aGUgTWF0ZXJpYWwgdGhlbWUgY29sb3JzOiAncHJpbWFyeScsICdhY2NlbnQnIG9yICd3YXJuJy5cbiAgICAgKi9cbiAgICBASW5wdXQoKSBjb2xvcjogVGhlbWVQYWxldHRlO1xuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlcyB3aGV0aGVyIHRoZSBzaWRlbmF2IGJ1dHRvbiB3aWxsIGJlIGRpc3BsYXllZCBpbiB0aGUgaGVhZGVyXG4gICAgICogb3Igbm90LlxuICAgICAqL1xuICAgIEBJbnB1dCgpIHNob3dTaWRlbmF2VG9nZ2xlOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBFbWl0dGVkIHdoZW4gdGhlIHNpZGVuYXYgYnV0dG9uIGlzIGNsaWNrZWQuICovXG4gICAgQE91dHB1dCgpIGNsaWNrZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgICAvKiogZXhwYW5kZWRTaWRlbmF2OiBUb2dnbGVzIHRoZSBleHBhbmRlZCBzdGF0ZSBvZiB0aGUgY29tcG9uZW50LiAqL1xuICAgIEBJbnB1dCgpIGV4cGFuZGVkU2lkZW5hdjogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogVGhlIHNpZGUgb2YgdGhlIHBhZ2UgdGhhdCB0aGUgZHJhd2VyIGlzIGF0dGFjaGVkIHRvIChjYW4gYmUgJ3N0YXJ0JyBvciAnZW5kJykgKi9cbiAgICBASW5wdXQoKSBwb3NpdGlvbiA9ICdzdGFydCc7XG5cbiAgICB0b2dnbGVNZW51KCkge1xuICAgICAgICB0aGlzLmNsaWNrZWQuZW1pdCh0cnVlKTtcbiAgICAgICAgdGhpcy5leHBhbmRlZFNpZGVuYXYgPSAhdGhpcy5leHBhbmRlZFNpZGVuYXY7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGlmICghdGhpcy5sb2dvKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ28gPSAnLi9hc3NldHMvaW1hZ2VzL2xvZ28ucG5nJztcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==