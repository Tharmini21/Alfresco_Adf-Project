/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewEncapsulation, ViewChild } from '@angular/core';
import { AuthenticationService } from '../../services/authentication.service';
import { BpmUserService } from '../../services/bpm-user.service';
import { EcmUserService } from '../../services/ecm-user.service';
import { IdentityUserService } from '../../services/identity-user.service';
import { of } from 'rxjs';
import { MatMenuTrigger } from '@angular/material/menu';
export class UserInfoComponent {
    constructor(ecmUserService, bpmUserService, identityUserService, authService) {
        this.ecmUserService = ecmUserService;
        this.bpmUserService = bpmUserService;
        this.identityUserService = identityUserService;
        this.authService = authService;
        this.ecmBackgroundImage = './assets/images/ecm-background.png';
        this.bpmBackgroundImage = './assets/images/bpm-background.png';
        this.menuPositionX = 'after';
        this.menuPositionY = 'below';
        this.showName = true;
        this.namePosition = 'right';
    }
    ngOnInit() {
        this.getUserInfo();
    }
    getUserInfo() {
        if (this.authService.isOauth()) {
            this.loadIdentityUserInfo();
            this.mode = 'SSO';
            if (this.authService.isEcmLoggedIn()) {
                this.loadEcmUserInfo();
            }
        }
        else if (this.authService.isEcmLoggedIn() && this.authService.isBpmLoggedIn()) {
            this.loadEcmUserInfo();
            this.loadBpmUserInfo();
            this.mode = 'ALL';
        }
        else if (this.authService.isEcmLoggedIn()) {
            this.loadEcmUserInfo();
            this.mode = 'CONTENT';
        }
        else if (this.authService.isBpmLoggedIn()) {
            this.loadBpmUserInfo();
            this.mode = 'PROCESS';
        }
    }
    onKeyPress(event) {
        this.closeUserModal(event);
    }
    closeUserModal($event) {
        if ($event.keyCode === 27) {
            this.trigger.closeMenu();
        }
    }
    get isLoggedIn() {
        return this.authService.isLoggedIn();
    }
    loadEcmUserInfo() {
        this.ecmUser$ = this.ecmUserService.getCurrentUserInfo();
    }
    loadBpmUserInfo() {
        this.bpmUser$ = this.bpmUserService.getCurrentUserInfo();
    }
    loadIdentityUserInfo() {
        this.identityUser$ = of(this.identityUserService.getCurrentUserInfo());
    }
    stopClosing(event) {
        event.stopPropagation();
    }
    getEcmAvatar(avatarId) {
        return this.ecmUserService.getUserProfileImage(avatarId);
    }
    getBpmUserImage() {
        return this.bpmUserService.getCurrentUserProfileImage();
    }
    get showOnRight() {
        return this.namePosition === 'right';
    }
}
UserInfoComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-userinfo',
                template: "<div id=\"userinfo_container\" [class.adf-userinfo-name-right]=\"showOnRight\" (keyup)=\"onKeyPress($event)\"\n     class=\"adf-userinfo-container\" *ngIf=\"isLoggedIn\">\n\n    <ng-container *ngIf=\"showName\">\n        <span *ngIf=\"identityUser$ | async as identityUser; else showBpmAndEcmUserFullNames\"\n              id=\"adf-userinfo-identity-name-display\"\n              class=\"adf-userinfo-name\">{{identityUser | fullName}}</span>\n        <ng-template #showBpmAndEcmUserFullNames>\n            <span *ngIf=\"ecmUser$ | async as ecmUser; else showBpmUserFullName\" id=\"adf-userinfo-ecm-name-display\"\n                  class=\"adf-userinfo-name\">{{ecmUser | fullName}}</span>\n            <ng-template #showBpmUserFullName>\n                <span *ngIf=\"bpmUser$ | async as bpmUser\" id=\"adf-userinfo-bpm-name-display\"\n                      class=\"adf-userinfo-name\">{{bpmUser | fullName}}</span>\n            </ng-template>\n        </ng-template>\n    </ng-container>\n\n    <button mat-button [matMenuTriggerFor]=\"menu\" class=\"adf-userinfo-menu_button\"\n            data-automation-id=\"adf-user-profile\">\n        <div class=\"adf-userinfo-button-profile\" id=\"user-profile\">\n            <div *ngIf=\"identityUser$ | async as identityUser; else showBpmAndEcmUserImage\" id=\"identity-user-image\">\n                <div *ngIf=\"(ecmUser$ | async)?.avatarId as avatarId; else initialTemplate\">\n                    <div class=\"adf-userinfo-profile-container\">\n                        <img id=\"logged-user-img\" [src]=\"getEcmAvatar(avatarId)\" alt=\"user-info-profile-button\"\n                             class=\"adf-userinfo-profile-image\"/>\n                    </div>\n                </div>\n                <ng-template #initialTemplate>\n                    <div [innerHTML]=\"identityUser | usernameInitials:'adf-userinfo-pic'\"></div>\n                </ng-template>\n            </div>\n            <ng-template #showBpmAndEcmUserImage>\n                <div *ngIf=\"ecmUser$ | async as ecmUser; else showBpmUserImage\" id=\"ecm-user-image\">\n                    <div *ngIf=\"ecmUser.avatarId; else initialTemplate\" class=\"adf-userinfo-profile-container\">\n                        <img id=\"logged-user-img\" [src]=\"getEcmAvatar(ecmUser.avatarId)\" alt=\"user-info-profile-button\"\n                             class=\"adf-userinfo-profile-image\"/>\n                    </div>\n                    <ng-template #initialTemplate>\n                        <div [outerHTML]=\"ecmUser | usernameInitials:'adf-userinfo-pic'\"></div>\n                    </ng-template>\n                </div>\n                <ng-template #showBpmUserImage>\n                    <div *ngIf=\"bpmUser$ | async as bpmUser\" id=\"bpm-user-image\">\n                        <div *ngIf=\"bpmUser.pictureId; else initialTemplate\" class=\"adf-userinfo-profile-container\">\n                            <img id=\"logged-user-img\" [src]=\"getBpmUserImage()\" alt=\"user-info-profile-button\"\n                                 class=\"adf-userinfo-profile-image\"/>\n                        </div>\n                        <ng-template #initialTemplate>\n                            <div [outerHTML]=\"bpmUser | usernameInitials:'adf-userinfo-pic'\"></div>\n                        </ng-template>\n                    </div>\n                </ng-template>\n            </ng-template>\n        </div>\n    </button>\n    <mat-menu #menu=\"matMenu\" id=\"user-profile-lists\" [xPosition]=\"menuPositionX\" [yPosition]=\"menuPositionY\"\n              [overlapTrigger]=\"false\" class=\"adf-userinfo-menu\">\n        <mat-tab-group id=\"tab-group-env\" (click)=\"stopClosing($event)\" selectedIndex=\"0\"\n                       class=\"adf-userinfo-tab\" [class.adf-hide-tab]=\"!(bpmUser$ | async) || !(ecmUser$ | async)\">\n            <mat-tab id=\"ecm-panel\" label=\"{{ 'USER_PROFILE.TAB.CS' | translate }}\"\n                     *ngIf=\"mode==='CONTENT' || mode==='ALL'\">\n                <mat-card class=\"adf-userinfo-card\" *ngIf=\"ecmUser$ | async as ecmUser\">\n                    <mat-card-header class=\"adf-userinfo-card-header\"\n                                     [style.background-image]=\"'url(' + ecmBackgroundImage + ')'\">\n                        <div *ngIf=\"ecmUser.avatarId; else initialTemplate\"\n                             class=\"adf-userinfo-profile-container adf-hide-small\">\n                            <img class=\"adf-userinfo-profile-picture\" id=\"ecm-user-detail-image\"\n                                 alt=\"ecm-profile-image\" [src]=\"getEcmAvatar(ecmUser.avatarId)\"/>\n                        </div>\n                        <ng-template #initialTemplate>\n                            <div\n                                [outerHTML]=\"ecmUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\"></div>\n                        </ng-template>\n\n                        <div class=\"adf-userinfo-title\" id=\"ecm-username\">{{ecmUser | fullName}}</div>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"adf-userinfo-supporting-text\">\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"ecm-full-name\"\n                                      class=\"adf-userinfo__detail-title\">{{ecmUser | fullName}}</span>\n                                <span class=\"adf-userinfo__detail-profile\" id=\"ecm-email\"> {{ecmUser.email}} </span>\n                            </div>\n                            <div class=\"adf-userinfo-detail\">\n                                    <span class=\"adf-userinfo__secondary-info\" id=\"ecm-job-title-label\">\n                                        {{ 'USER_PROFILE.LABELS.ECM.JOB_TITLE' | translate }}\n                                        <span id=\"ecm-job-title\"\n                                              class=\"adf-userinfo__detail-profile\"> {{ ecmUser.jobTitle ? ecmUser.jobTitle : 'N/A' }} </span>\n                                    </span>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </mat-tab>\n            <mat-tab id=\"bpm-panel\" label=\"{{ 'USER_PROFILE.TAB.PS' | translate }}\"\n                     *ngIf=\"mode==='PROCESS' || mode==='ALL'\">\n                <mat-card class=\"adf-userinfo-card\" *ngIf=\"bpmUser$ | async as bpmUser\">\n                    <mat-card-header class=\"adf-userinfo-card-header\"\n                                     [style.background-image]=\"'url(' + bpmBackgroundImage + ')'\">\n                        <img *ngIf=\"bpmUser.pictureId; else initialTemplate\"\n                             class=\"adf-userinfo-profile-picture adf-hide-small\" id=\"bpm-user-detail-image\"\n                             alt=\"bpm-profile-image\" [src]=\"getBpmUserImage()\"/>\n                        <ng-template #initialTemplate>\n                            <div\n                                [outerHTML]=\"bpmUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\"></div>\n                        </ng-template>\n                        <div class=\"adf-userinfo-title\" id=\"bpm-username\">{{bpmUser | fullName}}</div>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"adf-userinfo-supporting-text\">\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"bpm-full-name\"\n                                      class=\"adf-userinfo__detail-title\">{{ bpmUser | fullName }}</span>\n                                <span class=\"adf-userinfo__detail-profile\" id=\"bpm-email\"> {{bpmUser.email}} </span>\n                            </div>\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"bpm-tenant\" class=\"adf-userinfo__secondary-info\">\n                                    {{ 'USER_PROFILE.LABELS.BPM.TENANT' | translate }}\n                                    <span\n                                        class=\"adf-userinfo__detail-profile\">{{ bpmUser.tenantName ? bpmUser.tenantName : '' }}</span>\n                                </span>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </mat-tab>\n            <mat-tab id=\"identity-panel\" *ngIf=\"mode==='SSO'\">\n                <mat-card class=\"adf-userinfo-card\" *ngIf=\"identityUser$ | async as identityUser\">\n                    <mat-card-header class=\"adf-userinfo-card-header\"\n                                     [style.background-image]=\"'url(' + bpmBackgroundImage + ')'\">\n                        <div *ngIf=\"ecmUser$ | async as ecmUser\">\n                            <div *ngIf=\"ecmUser.avatarId; else initialTemplate\"\n                                 class=\"adf-userinfo-profile-container adf-hide-small\">\n                                <img class=\"adf-userinfo-profile-picture\" id=\"ecm-user-detail-image\"\n                                     alt=\"ecm-profile-image\" [src]=\"getEcmAvatar(ecmUser.avatarId)\"/>\n                            </div>\n                        </div>\n                        <ng-template #initialTemplate>\n                            <div\n                                [outerHTML]=\"identityUser | usernameInitials:'adf-userinfo-profile-initials adf-hide-small'\"></div>\n                        </ng-template>\n                        <div class=\"adf-userinfo-title\" id=\"identity-username\">{{identityUser | fullName}}</div>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"adf-userinfo-supporting-text\">\n                            <div class=\"adf-userinfo-detail\">\n                                <span id=\"identity-full-name\"\n                                      class=\"adf-userinfo__detail-title\">{{identityUser | fullName}}</span>\n                                <span class=\"adf-userinfo__detail-profile\"\n                                      id=\"identity-email\"> {{identityUser.email}} </span>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-menu>\n</div>\n",
                encapsulation: ViewEncapsulation.None
            },] }
];
UserInfoComponent.ctorParameters = () => [
    { type: EcmUserService },
    { type: BpmUserService },
    { type: IdentityUserService },
    { type: AuthenticationService }
];
UserInfoComponent.propDecorators = {
    trigger: [{ type: ViewChild, args: [MatMenuTrigger,] }],
    ecmBackgroundImage: [{ type: Input }],
    bpmBackgroundImage: [{ type: Input }],
    menuPositionX: [{ type: Input }],
    menuPositionY: [{ type: Input }],
    showName: [{ type: Input }],
    namePosition: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,