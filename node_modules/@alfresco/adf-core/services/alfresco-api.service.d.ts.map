{"version":3,"file":"alfresco-api.service.d.ts","sources":["alfresco-api.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContentApi, Core, Activiti, SearchApi, Node, GroupsApi, AlfrescoApiCompatibility, AlfrescoApiConfig, AspectsApi, TypesApi } from '@alfresco/js-api';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { StorageService } from './storage.service';\nexport declare class AlfrescoApiService {\n    protected appConfig: AppConfigService;\n    protected storageService: StorageService;\n    nodeUpdated: Subject<Node>;\n    alfrescoApiInitialized: ReplaySubject<boolean>;\n    protected alfrescoApi: AlfrescoApiCompatibility;\n    lastConfig: AlfrescoApiConfig;\n    private excludedErrorUrl;\n    getInstance(): AlfrescoApiCompatibility;\n    get taskApi(): Activiti.TaskApi;\n    get contentApi(): ContentApi;\n    get nodesApi(): Core.NodesApi;\n    get renditionsApi(): Core.RenditionsApi;\n    get sharedLinksApi(): Core.SharedlinksApi;\n    get sitesApi(): Core.SitesApi;\n    get favoritesApi(): Core.FavoritesApi;\n    get peopleApi(): Core.PeopleApi;\n    get searchApi(): SearchApi;\n    get versionsApi(): Core.VersionsApi;\n    get classesApi(): Core.ClassesApi;\n    get groupsApi(): GroupsApi;\n    get aspectsApi(): AspectsApi;\n    get typesApi(): TypesApi;\n    constructor(appConfig: AppConfigService, storageService: StorageService);\n    load(): Promise<void>;\n    reset(): void;\n    protected initAlfrescoApi(): void;\n    isDifferentConfig(lastConfig: AlfrescoApiConfig, newConfig: AlfrescoApiConfig): boolean;\n    isExcludedErrorListener(currentFullPath: string): boolean;\n}\n"]}